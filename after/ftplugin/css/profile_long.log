SCRIPT  C:\Users\ds13\AppData\Local\nvim-data\site\pack\packer\start\deadly-gruv.nvim\colors\deadly-gruv.lua
Sourced 1 time
Total time:   0.110801
 Self time:   0.110801

count  total (s)   self (s)
                            -- You probably always want to set this in your vim file
                            vim.opt.background = 'light'
                            vim.g.colors_name = 'deadly-gruv'
                            
                            -- By setting our module to nil, we clear lua's cache,
                            -- which means the require ahead will *always* occur.
                            --
                            -- This isn't strictly required but it can be a useful trick if you are
                            -- incrementally editing your config a lot and want to be sure your themes
                            -- changes are being picked up without restarting neovim.
                            --
                            -- Note if you're working in on your theme and have :Lushify'd the buffer,
                            -- your changes will be applied with our without the following line.
                            --
                            -- The performance impact of this call can be measured in the hundreds of
                            -- *nanoseconds* and such could be considered "production safe".
                            package.loaded['deadly-gruv'] = nil;
                            package.loaded['deadly-gruv.base'] = nil;
                            package.loaded['deadly-gruv.colors'] = nil;
                            package.loaded['deadly-gruv.colors.color_palette'] = nil;
                            package.loaded['deadly-gruv.colors.semantic_palette'] = nil;
                            package.loaded['deadly-gruv.colors.base_and_treesitter_meta_groups'] = nil;
                            package.loaded['deadly-gruv.colors.color_harmonies'] = nil;
                            
                            -- Meta groups.
                            package.loaded['deadly-gruv.meta_groups'] = nil;
                            package.loaded['deadly-gruv.meta_groups.base_and_treesitter'] = nil;
                            
                            -- Languages.
                            package.loaded['deadly-gruv.languages'] = nil;
                            
                            package.loaded['deadly-gruv.languages.json'] = nil;
                            
                            package.loaded['deadly-gruv.languages.python'] = nil;
                            
                            package.loaded['deadly-gruv.languages.lua'] = nil;
                            
                            package.loaded['deadly-gruv.languages.css'] = nil;
                            package.loaded['deadly-gruv.languages.html'] = nil;
                            package.loaded['deadly-gruv.languages.typescript'] = nil;
                            package.loaded['deadly-gruv.languages.typescriptreact'] = nil;
                            
                            package.loaded['deadly-gruv.languages.markdown'] = nil;
                            
                            -- Plugins.
                            package.loaded['deadly-gruv.plugins'] = nil;
                            package.loaded['deadly-gruv.plugins.treesitter'] = nil;
                            package.loaded['deadly-gruv.plugins.bufferline'] = nil;
                            package.loaded['deadly-gruv.plugins.telescope'] = nil;
                            package.loaded['deadly-gruv.plugins.dashboard'] = nil;
                            package.loaded['deadly-gruv.plugins.nvim_ts_rainbow'] = nil;
                            package.loaded['deadly-gruv.plugins.quick_scope'] = nil;
                            
                            -- include our theme file and pass it to lush to apply
                            require('lush')(require('deadly-gruv'))
                            

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\syntax\scss.vim
Sourced 6 times
Total time:   0.183512
 Self time:   0.044654

count  total (s)   self (s)
                            " Vim syntax file
                            " Language:	SCSS
                            " Maintainer:	Tim Pope <vimNOSPAM@tpope.org>
                            " Filenames:	*.scss
                            " Last Change:	2019 Dec 05
                            
    6              0.000069 if exists("b:current_syntax")
                              finish
    6              0.000005 endif
                            
    6   0.182921   0.044062 runtime! syntax/sass.vim
                            
    6              0.000041 syn clear sassComment
    6              0.000018 syn clear sassCssComment
    6              0.000015 syn clear sassEndOfLineComment
                            
    6              0.000054 syn match scssComment "//.*" contains=sassTodo,@Spell
    6              0.000045 syn region scssCssComment start="/\*" end="\*/" contains=sassTodo,@Spell
                            
    6              0.000013 hi def link scssCssComment scssComment
    6              0.000007 hi def link scssComment Comment
                            
    6              0.000022 let b:current_syntax = "scss"
                            
                            " vim:set sw=2:

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\syntax\sass.vim
Sourced 9 times
Total time:   0.223191
 Self time:   0.107444

count  total (s)   self (s)
                            " Vim syntax file
                            " Language:	Sass
                            " Maintainer:	Tim Pope <vimNOSPAM@tpope.org>
                            " Filenames:	*.sass
                            " Last Change:	2022 Mar 15
                            
    9              0.000098 if exists("b:current_syntax")
                              finish
    9              0.000008 endif
                            
    9   0.180190   0.064442 runtime! syntax/css.vim
                            
    9              0.000038 syn case ignore
                            
    9              0.000138 syn cluster sassCssProperties contains=cssFontProp,cssFontDescriptorProp,cssColorProp,cssTextProp,cssBoxProp,cssGeneratedContentProp,cssPagingProp,cssUIProp,cssRenderProp,cssAuralProp,cssTableProp
    9              0.014547 syn cluster sassCssAttributes contains=css.*Attr,sassEndOfLineComment,scssComment,cssValue.*,cssColor,cssURL,sassDefault,cssImportant,cssError,cssStringQ,cssStringQQ,cssFunction,cssUnicodeEscape,cssRenderProp
                            
    9              0.000103 syn region sassDefinition matchgroup=cssBraces start="{" end="}" contains=TOP
                            
    9              0.008119 syn match sassProperty "\%([{};]\s*\|^\)\@<=\%([[:alnum:]-]\|#{[^{}]*}\)\+\s*:" contains=css.*Prop skipwhite nextgroup=sassCssAttribute contained containedin=sassDefinition
    9              0.007980 syn match sassProperty "^\s*\zs\s\%(\%([[:alnum:]-]\|#{[^{}]*}\)\+\s*:\|:[[:alnum:]-]\+\)"hs=s+1 contains=css.*Prop skipwhite nextgroup=sassCssAttribute
    9              0.008109 syn match sassProperty "^\s*\zs\s\%(:\=[[:alnum:]-]\+\s*=\)"hs=s+1 contains=css.*Prop skipwhite nextgroup=sassCssAttribute
    9              0.000182 syn match sassCssAttribute +\%("\%([^"]\|\\"\)*"\|'\%([^']\|\\'\)*'\|#{[^{}]*}\|[^{};]\)*+ contained contains=@sassCssAttributes,sassVariable,sassFunction,sassInterpolation
    9              0.000065 syn match sassFlag "!\%(default\|global\|optional\)\>" contained
    9              0.000054 syn match sassVariable "$[[:alnum:]_-]\+"
    9              0.000079 syn match sassVariableAssignment "\%([!$][[:alnum:]_-]\+\s*\)\@<=\%(||\)\==" nextgroup=sassCssAttribute skipwhite
    9              0.000057 syn match sassVariableAssignment "\%([!$][[:alnum:]_-]\+\s*\)\@<=:" nextgroup=sassCssAttribute skipwhite
                            
    9              0.000088 syn match sassFunction "\<\%(rgb\|rgba\|red\|green\|blue\|mix\)\>(\@=" contained
    9              0.000119 syn match sassFunction "\<\%(hsl\|hsla\|hue\|saturation\|lightness\|adjust-hue\|lighten\|darken\|saturate\|desaturate\|grayscale\|complement\)\>(\@=" contained
    9              0.000079 syn match sassFunction "\<\%(alpha\|opacity\|rgba\|opacify\|fade-in\|transparentize\|fade-out\)\>(\@=" contained
    9              0.000044 syn match sassFunction "\<\%(unquote\|quote\)\>(\@=" contained
    9              0.000090 syn match sassFunction "\<\%(percentage\|round\|ceil\|floor\|abs\)\>(\@=" contained
    9              0.000055 syn match sassFunction "\<\%(type-of\|unit\|unitless\|comparable\)\>(\@=" contained
                            
    9              0.000121 syn region sassInterpolation matchgroup=sassInterpolationDelimiter start="#{" end="}" contains=@sassCssAttributes,sassVariable,sassFunction containedin=cssStringQ,cssStringQQ,cssPseudoClass,sassProperty
                            
    9              0.000042 syn match sassMixinName "[[:alnum:]_-]\+" contained nextgroup=sassCssAttribute
    9              0.000038 syn match sassMixin  "^="               nextgroup=sassMixinName skipwhite
    9              0.000060 syn match sassMixin  "\%([{};]\s*\|^\s*\)\@<=@mixin"   nextgroup=sassMixinName skipwhite
    9              0.000047 syn match sassMixing "^\s\+\zs+"        nextgroup=sassMixinName
    9              0.000049 syn match sassMixing "\%([{};]\s*\|^\s*\)\@<=@include" nextgroup=sassMixinName skipwhite
    9              0.000037 syn match sassExtend "\%([{};]\s*\|^\s*\)\@<=@extend"
                            
    9              0.000036 syn match sassFunctionName "[[:alnum:]_-]\+" contained nextgroup=sassCssAttribute
    9              0.000052 syn match sassFunctionDecl "\%([{};]\s*\|^\s*\)\@<=@function"   nextgroup=sassFunctionName skipwhite
    9              0.000037 syn match sassReturn "\%([{};]\s*\|^\s*\)\@<=@return"
                            
    9              0.000032 syn match sassEscape     "^\s*\zs\\"
    9              0.000046 syn match sassIdChar     "#[[:alnum:]_-]\@=" nextgroup=sassId
    9              0.000027 syn match sassId         "[[:alnum:]_-]\+" contained
    9              0.000043 syn match sassClassChar  "\.[[:alnum:]_-]\@=" nextgroup=sassClass
    9              0.000053 syn match sassPlaceholder "\%([{};]\s*\|^\s*\)\@<=%"   nextgroup=sassClass
    9              0.000024 syn match sassClass      "[[:alnum:]_-]\+" contained
    9              0.000025 syn match sassAmpersand  "&"
                            
                            " TODO: Attribute namespaces
                            " TODO: Arithmetic (including strings and concatenation)
                            
    9              0.000095 syn region sassMediaQuery matchgroup=sassMedia start="@media" end="[{};]\@=\|$" contains=sassMediaOperators
    9              0.000101 syn region sassKeyframe matchgroup=cssAtKeyword start=/@\(-[a-z]\+-\)\=keyframes\>/ end=";\|$" contains=cssVendor,cssComment nextgroup=cssDefinition
    9              0.000197 syn keyword sassMediaOperators and not only contained
    9              0.000097 syn region sassCharset start="@charset" end=";\|$" contains=scssComment,cssStringQ,cssStringQQ,cssURL,cssUnicodeEscape,cssMediaType
    9              0.000094 syn region sassInclude start="@import" end=";\|$" contains=scssComment,cssStringQ,cssStringQQ,cssURL,cssUnicodeEscape,cssMediaType
    9              0.000112 syn region sassDebugLine end=";\|$" matchgroup=sassDebug start="@debug\>" contains=@sassCssAttributes,sassVariable,sassFunction
    9              0.000076 syn region sassWarnLine end=";\|$" matchgroup=sassWarn start="@warn\>" contains=@sassCssAttributes,sassVariable,sassFunction
    9              0.000127 syn region sassControlLine matchgroup=sassControl start="@\%(if\|else\%(\s\+if\)\=\|while\|for\|each\)\>" end="[{};]\@=\|$" contains=sassFor,@sassCssAttributes,sassVariable,sassFunction
    9              0.000031 syn keyword sassFor from to through in contained
                            
    9              0.000037 syn keyword sassTodo        FIXME NOTE TODO OPTIMIZE XXX contained
    9              0.000083 syn region  sassComment     start="^\z(\s*\)//"  end="^\%(\z1 \)\@!" contains=sassTodo,@Spell
    9              0.000067 syn region  sassCssComment  start="^\z(\s*\)/\*" end="^\%(\z1 \)\@!" contains=sassTodo,@Spell
    9              0.000049 syn match   sassEndOfLineComment "//.*" contains=sassComment,sassTodo,@Spell
                            
    9              0.000026 hi def link sassEndOfLineComment        sassComment
    9              0.000014 hi def link sassCssComment              sassComment
    9              0.000013 hi def link sassComment                 Comment
    9              0.000014 hi def link sassFlag                    cssImportant
    9              0.000014 hi def link sassVariable                Identifier
    9              0.000013 hi def link sassFunction                Function
    9              0.000013 hi def link sassMixing                  PreProc
    9              0.000012 hi def link sassMixin                   PreProc
    9              0.000014 hi def link sassPlaceholder             sassClassChar
    9              0.000012 hi def link sassExtend                  PreProc
    9              0.000012 hi def link sassFunctionDecl            PreProc
    9              0.000011 hi def link sassReturn                  PreProc
    9              0.000013 hi def link sassTodo                    Todo
    9              0.000012 hi def link sassCharset                 PreProc
    9              0.000011 hi def link sassMedia                   PreProc
    9              0.000011 hi def link sassMediaOperators          PreProc
    9              0.000012 hi def link sassInclude                 Include
    9              0.000013 hi def link sassDebug                   sassControl
    9              0.000013 hi def link sassWarn                    sassControl
    9              0.000011 hi def link sassControl                 PreProc
    9              0.000012 hi def link sassFor                     PreProc
    9              0.000012 hi def link sassEscape                  Special
    9              0.000011 hi def link sassIdChar                  Special
    9              0.000012 hi def link sassClassChar               Special
    9              0.000014 hi def link sassInterpolationDelimiter  Delimiter
    9              0.000013 hi def link sassAmpersand               Character
    9              0.000013 hi def link sassId                      Identifier
    9              0.000011 hi def link sassClass                   Type
                            
    9              0.000053 let b:current_syntax = "sass"
                            
                            " vim:set sw=2:

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\syntax\css.vim
Sourced 20 times
Total time:   0.293211
 Self time:   0.293211

count  total (s)   self (s)
                            " Vim syntax file
                            " Language:     Cascading Style Sheets
                            " Previous Contributor List:
                            "               Jules Wang      <w.jq0722@gmail.com>
                            "               Claudio Fleiner <claudio@fleiner.com>
                            "               Yeti            (Add full CSS2, HTML4 support)
                            "               Nikolai Weibull (Add CSS2 support)
                            " URL:          https://github.com/vim-language-dept/css-syntax.vim
                            " Maintainer:   Jay Sitter <jay@jaysitter.com>
                            " Last Change:  2021 Oct 20
                            
                            " quit when a syntax file was already loaded
   20              0.000241 if !exists("main_syntax")
    8              0.000025   if exists("b:current_syntax")
                                finish
    8              0.000008   endif
    8              0.000037   let main_syntax = 'css'
   12              0.000077 elseif exists("b:current_syntax") && b:current_syntax == "css"
                              finish
   20              0.000014 endif
                            
   20              0.000210 let s:cpo_save = &cpo
   20              0.000220 set cpo&vim
                            
   20              0.000073 syn case ignore
                            " Add dash to allowed keyword characters.
   20              0.000302 syn iskeyword @,48-57,_,192-255,-
                            
                            " HTML4 tags
   20              0.000136 syn keyword cssTagName abbr address area a b base
   20              0.000082 syn keyword cssTagName bdo blockquote body br button
   20              0.000100 syn keyword cssTagName caption cite code col colgroup dd del
   20              0.000088 syn keyword cssTagName dfn div dl dt em fieldset form
   20              0.000084 syn keyword cssTagName h1 h2 h3 h4 h5 h6 head hr html img i
   20              0.000101 syn keyword cssTagName iframe input ins isindex kbd label legend li
   20              0.000118 syn keyword cssTagName link map menu meta noscript ol optgroup
   20              0.000089 syn keyword cssTagName option p param picture pre q s samp script small
   20              0.000068 syn keyword cssTagName span strong sub sup tbody td
   20              0.000077 syn keyword cssTagName textarea tfoot th thead title tr ul u var
   20              0.000043 syn keyword cssTagName object svg
   20              0.000211 syn match   cssTagName /\<select\>\|\<style\>\|\<table\>/
                            
                            " 34 HTML5 tags
   20              0.000082 syn keyword cssTagName article aside audio bdi canvas command data
   20              0.000086 syn keyword cssTagName datalist details dialog embed figcaption figure footer
   20              0.000077 syn keyword cssTagName header hgroup keygen main mark menuitem meter nav
   20              0.000064 syn keyword cssTagName output progress rt rp ruby section
   20              0.000063 syn keyword cssTagName source summary time track video wbr
                            
                            " Tags not supported in HTML5
                            " acronym applet basefont big center dir
                            " font frame frameset noframes strike tt
                            
   20              0.000063 syn match cssTagName "\*"
                            
                            " selectors
   20              0.000105 syn match cssSelectorOp "[,>+~]"
   20              0.000106 syn match cssSelectorOp2 "[~|^$*]\?=" contained
   20              0.000207 syn region cssAttributeSelector matchgroup=cssSelectorOp start="\[" end="]" contains=cssUnicodeEscape,cssSelectorOp2,cssStringQ,cssStringQQ
                            
                            " .class and #id
   20              0.000149 syn match cssClassName "\.-\=[A-Za-z_][A-Za-z0-9_-]*" contains=cssClassNameDot
   20              0.000044 syn match cssClassNameDot contained '\.'
                            
   20              0.000027 try
   20              0.000127 syn match cssIdentifier "#[A-Za-zÀ-ÿ_@][A-Za-zÀ-ÿ0-9_@-]*"
                            catch /^.*/
                            syn match cssIdentifier "#[A-Za-z_@][A-Za-z0-9_@-]*"
   20              0.000075 endtry
                            
                            " digits
   20              0.000216 syn match cssValueInteger contained "[-+]\=\d\+" contains=cssUnitDecorators
   20              0.000169 syn match cssValueNumber contained "[-+]\=\d\+\(\.\d*\)\=" contains=cssUnitDecorators
   20              0.000313 syn match cssValueLength contained "[-+]\=\d\+\(\.\d*\)\=\(mm\|cm\|in\|pt\|pc\|em\|ex\|px\|rem\|dpi\|dppx\|dpcm\|fr\|vw\|vh\|vmin\|vmax\|ch\)\>" contains=cssUnitDecorators
   20              0.000094 syn match cssValueLength contained "[-+]\=\d\+\(\.\d*\)\=%" contains=cssUnitDecorators
   20              0.000147 syn match cssValueAngle contained "[-+]\=\d\+\(\.\d*\)\=\(deg\|grad\|rad\)\>" contains=cssUnitDecorators
   20              0.000116 syn match cssValueTime contained "+\=\d\+\(\.\d*\)\=\(ms\|s\)\>" contains=cssUnitDecorators
   20              0.000125 syn match cssValueFrequency contained "+\=\d\+\(\.\d*\)\=\(Hz\|kHz\)\>" contains=cssUnitDecorators
                            
                            " The 16 basic color names
   20              0.000173 syn keyword cssColor contained aqua black blue fuchsia gray green lime maroon navy olive purple red silver teal yellow
                            
                            " 130 more color names
   20              0.000070 syn keyword cssColor contained aliceblue antiquewhite aquamarine azure
   20              0.000079 syn keyword cssColor contained beige bisque blanchedalmond blueviolet brown burlywood
   20              0.000118 syn keyword cssColor contained cadetblue chartreuse chocolate coral cornflowerblue cornsilk crimson cyan
   20              0.000239 syn match cssColor contained /\<dark\(blue\|cyan\|goldenrod\|gray\|green\|grey\|khaki\)\>/
   20              0.000179 syn match cssColor contained /\<dark\(magenta\|olivegreen\|orange\|orchid\|red\|salmon\|seagreen\)\>/
   20              0.000116 syn match cssColor contained /\<darkslate\(blue\|gray\|grey\)\>/
   20              0.000314 syn match cssColor contained /\<dark\(turquoise\|violet\)\>/
   20              0.000101 syn keyword cssColor contained deeppink deepskyblue dimgray dimgrey dodgerblue firebrick
   20              0.000076 syn keyword cssColor contained floralwhite forestgreen gainsboro ghostwhite gold
   20              0.000071 syn keyword cssColor contained goldenrod greenyellow grey honeydew hotpink
   20              0.000092 syn keyword cssColor contained indianred indigo ivory khaki lavender lavenderblush lawngreen
   20              0.000125 syn keyword cssColor contained lemonchiffon limegreen linen magenta
   20              0.000189 syn match cssColor contained /\<light\(blue\|coral\|cyan\|goldenrodyellow\|gray\|green\)\>/
   20              0.000145 syn match cssColor contained /\<light\(grey\|pink\|salmon\|seagreen\|skyblue\|yellow\)\>/
   20              0.000140 syn match cssColor contained /\<light\(slategray\|slategrey\|steelblue\)\>/
   20              0.000135 syn match cssColor contained /\<medium\(aquamarine\|blue\|orchid\|purple\|seagreen\)\>/
   20              0.000157 syn match cssColor contained /\<medium\(slateblue\|springgreen\|turquoise\|violetred\)\>/
   20              0.000236 syn keyword cssColor contained midnightblue mintcream mistyrose moccasin navajowhite
   20              0.000164 syn keyword cssColor contained oldlace olivedrab orange orangered orchid
   20              0.000148 syn match cssColor contained /\<pale\(goldenrod\|green\|turquoise\|violetred\)\>/
   20              0.000198 syn keyword cssColor contained papayawhip peachpuff peru pink plum powderblue
   20              0.000239 syn keyword cssColor contained rosybrown royalblue rebeccapurple saddlebrown salmon
   20              0.000218 syn keyword cssColor contained sandybrown seagreen seashell sienna skyblue slateblue
   20              0.000179 syn keyword cssColor contained slategray slategrey snow springgreen steelblue tan
   20              0.000064 syn keyword cssColor contained thistle tomato turquoise violet wheat
   20              0.000040 syn keyword cssColor contained whitesmoke yellowgreen
                            
                            " FIXME: These are actually case-insensitive too, but (a) specs recommend using
                            " mixed-case (b) it's hard to highlight the word `Background' correctly in
                            " all situations
   20              0.000076 syn case match
   20              0.000288 syn keyword cssColor contained ActiveBorder ActiveCaption AppWorkspace ButtonFace ButtonHighlight ButtonShadow ButtonText CaptionText GrayText Highlight HighlightText InactiveBorder InactiveCaption InactiveCaptionText InfoBackground InfoText Menu MenuText Scrollbar ThreeDDarkShadow ThreeDFace ThreeDHighlight ThreeDLightShadow ThreeDShadow Window WindowFrame WindowText Background
   20              0.000041 syn case ignore
                            
   20              0.000305 syn match cssImportant contained "!\s*important\>"
   20              0.000097 syn match cssCustomProp contained "\<--[a-zA-Z0-9-_]*\>"
                            
   20              0.000069 syn match cssColor contained "\<transparent\>"
   20              0.000082 syn match cssColor contained "\<currentColor\>"
   20              0.000078 syn match cssColor contained "\<white\>"
   20              0.000111 syn match cssColor contained "#\x\{3,4\}\>" contains=cssUnitDecorators
   20              0.000086 syn match cssColor contained "#\x\{6\}\>" contains=cssUnitDecorators
   20              0.000082 syn match cssColor contained "#\x\{8\}\>" contains=cssUnitDecorators
                            
   20              0.000229 syn region cssURL contained matchgroup=cssFunctionName start="\<\(uri\|url\|local\|format\)\s*(" end=")" contains=cssStringQ,cssStringQQ oneline
   20              0.018624 syn region cssMathGroup contained matchgroup=cssMathParens start="(" end=")" containedin=cssFunction,cssMathGroup contains=cssCustomProp,cssValue.*,cssFunction,cssColor,cssStringQ,cssStringQQ oneline
   20              0.018076 syn region cssFunction contained matchgroup=cssFunctionName start="\<\(var\|calc\)\s*(" end=")" contains=cssCustomProp,cssValue.*,cssFunction,cssColor,cssStringQ,cssStringQQ oneline
   20              0.000478 syn region cssFunction contained matchgroup=cssFunctionName start="\<\(rgb\|clip\|attr\|counter\|rect\|cubic-bezier\|steps\)\s*(" end=")" oneline  contains=cssValueInteger,cssValueNumber,cssValueLength,cssFunctionComma
   20              0.000302 syn region cssFunction contained matchgroup=cssFunctionName start="\<\(rgba\|hsl\|hsla\|color-stop\|from\|to\)\s*(" end=")" oneline  contains=cssColor,cssValueInteger,cssValueNumber,cssValueLength,cssFunctionComma,cssFunction
   20              0.000655 syn region cssFunction contained matchgroup=cssFunctionName start="\<\(linear-\|radial-\|conic-\)\=\gradient\s*(" end=")" oneline  contains=cssColor,cssValueInteger,cssValueNumber,cssValueLength,cssFunction,cssGradientAttr,cssFunctionComma
   20              0.000535 syn region cssFunction contained matchgroup=cssFunctionName start="\<\(matrix\(3d\)\=\|scale\(3d\|X\|Y\|Z\)\=\|translate\(3d\|X\|Y\|Z\)\=\|skew\(X\|Y\)\=\|rotate\(3d\|X\|Y\|Z\)\=\|perspective\)\s*(" end=")" oneline contains=cssValueInteger,cssValueNumber,cssValueLength,cssValueAngle,cssFunctionComma
   20              0.000377 syn region cssFunction contained matchgroup=cssFunctionName start="\<\(blur\|brightness\|contrast\|drop-shadow\|grayscale\|hue-rotate\|invert\|opacity\|saturate\|sepia\)\s*(" end=")" oneline contains=cssValueInteger,cssValueNumber,cssValueLength,cssValueAngle,cssFunctionComma
   20              0.000131 syn keyword cssGradientAttr contained top bottom left right cover center middle ellipse at
   20              0.000052 syn match cssFunctionComma contained ","
                            
                            " Common Prop and Attr
   20              0.000090 syn keyword cssCommonAttr contained auto none inherit all default normal
   20              0.000077 syn keyword cssCommonAttr contained top bottom center stretch hidden visible
   20              0.000119 syn match cssCommonAttr contained "\<\(max-\|min-\|fit-\)content\>"
                            "------------------------------------------------
                            " CSS Animations
                            " http://www.w3.org/TR/css3-animations/
   20              0.000221 syn match cssAnimationProp contained "\<animation\(-\(delay\|direction\|duration\|fill-mode\|name\|play-state\|timing-function\|iteration-count\)\)\=\>"
                            
                            " animation-direction attributes
   20              0.000054 syn keyword cssAnimationAttr contained alternate reverse
   20              0.000091 syn match cssAnimationAttr contained "\<alternate-reverse\>"
                            
                            " animation-fill-mode attributes
   20              0.000051 syn keyword cssAnimationAttr contained forwards backwards both
                            
                            " animation-play-state attributes
   20              0.000056 syn keyword cssAnimationAttr contained running paused
                            
                            " animation-iteration-count attributes
   20              0.000044 syn keyword cssAnimationAttr contained infinite
                            "------------------------------------------------
                            "  CSS Backgrounds and Borders Module Level 3
                            "  http://www.w3.org/TR/css3-background/
   20              0.000237 syn match cssBackgroundProp contained "\<background\(-\(attachment\|clip\|color\|image\|origin\|position\|repeat\|size\)\)\=\>"
                            " background-attachment attributes
   20              0.000089 syn keyword cssBackgroundAttr contained scroll fixed local
                            
                            " background-position attributes
   20              0.000070 syn keyword cssBackgroundAttr contained left center right top bottom
                            
                            " background-repeat attributes
   20              0.000090 syn match cssBackgroundAttr contained "\<no-repeat\>"
   20              0.000126 syn match cssBackgroundAttr contained "\<repeat\(-[xy]\)\=\>"
                            
                            " background-size attributes
   20              0.000045 syn keyword cssBackgroundAttr contained cover contain
                            
   20              0.000217 syn match cssBorderProp contained "\<border\(-\(top\|right\|bottom\|left\)\)\=\(-\(width\|color\|style\)\)\=\>"
   20              0.000151 syn match cssBorderProp contained "\<border\(-\(top\|bottom\)-\(left\|right\)\)\=-radius\>"
   20              0.000204 syn match cssBorderProp contained "\<border-image\(-\(outset\|repeat\|slice\|source\|width\)\)\=\>"
   20              0.000139 syn match cssBorderProp contained "\<box-decoration-break\>"
   20              0.000076 syn match cssBorderProp contained "\<box-shadow\>"
                            
                            " border-image attributes
   20              0.000067 syn keyword cssBorderAttr contained stretch round fill
                            
                            " border-style attributes
   20              0.000227 syn keyword cssBorderAttr contained dotted dashed solid double groove ridge inset outset
                            
                            " border-width attributes
   20              0.000053 syn keyword cssBorderAttr contained thin thick medium
                            
                            " box-decoration-break attributes
   20              0.000044 syn keyword cssBorderAttr contained clone slice
                            "------------------------------------------------
                            
   20              0.000157 syn match cssBoxProp contained "\<padding\(-\(top\|right\|bottom\|left\)\)\=\>"
   20              0.000116 syn match cssBoxProp contained "\<margin\(-\(top\|right\|bottom\|left\)\)\=\>"
   20              0.000168 syn match cssBoxProp contained "\<overflow\(-\(x\|y\|style\)\)\=\>"
   20              0.000089 syn match cssBoxProp contained "\<rotation\(-point\)\=\>"
   20              0.000057 syn keyword cssBoxAttr contained visible hidden scroll auto
   20              0.000117 syn match cssBoxAttr contained "\<no-\(display\|content\)\>"
                            
   20              0.000036 syn keyword cssCascadeProp contained all
   20              0.000047 syn keyword cssCascadeAttr contained initial unset revert
                            
   20              0.000036 syn keyword cssColorProp contained opacity
   20              0.000101 syn match cssColorProp contained "\<color-profile\>"
   20              0.000079 syn match cssColorProp contained "\<rendering-intent\>"
                            
                            
   20              0.000353 syn match cssDimensionProp contained "\<\(min\|max\)-\(width\|height\)\>"
   20              0.000039 syn keyword cssDimensionProp contained height
   20              0.000029 syn keyword cssDimensionProp contained width
                            
                            " CSS Flexible Box Layout Module Level 1
                            " http://www.w3.org/TR/css3-flexbox/
                            " CSS Box Alignment Module Level 3
                            " http://www.w3.org/TR/css-align-3/
   20              0.000305 syn match cssFlexibleBoxProp contained "\<flex\(-\(direction\|wrap\|flow\|grow\|shrink\|basis\)\)\=\>"
   20              0.000149 syn match cssFlexibleBoxProp contained "\<\(align\|justify\)\(-\(items\|self\|content\)\)\=\>"
   20              0.000033 syn keyword cssFlexibleBoxProp contained order
                            
   20              0.000130 syn match cssFlexibleBoxAttr contained "\<\(row\|column\|wrap\)\(-reverse\)\=\>"
   20              0.000063 syn keyword cssFlexibleBoxAttr contained nowrap stretch baseline center
   20              0.000089 syn match cssFlexibleBoxAttr contained "\<flex\(-\(start\|end\)\)\=\>"
   20              0.000131 syn match cssFlexibleBoxAttr contained "\<space\(-\(between\|around\|evenly\)\)\=\>"
                            
                            " CSS Fonts Module Level 3
                            " http://www.w3.org/TR/css-fonts-3/
   20              0.000508 syn match cssFontProp contained "\<font\(-\(family\|\|feature-settings\|kerning\|language-override\|size\(-adjust\)\=\|stretch\|style\|synthesis\|variant\(-\(alternates\|caps\|east-asian\|ligatures\|numeric\|position\)\)\=\|weight\)\)\=\>"
                            
                            " font attributes
   20              0.000056 syn keyword cssFontAttr contained icon menu caption
   20              0.000091 syn match cssFontAttr contained "\<message-box\>"
   20              0.000061 syn match cssFontAttr contained "\<status-bar\>"
   20              0.000042 syn keyword cssFontAttr contained larger smaller
   20              0.000112 syn match cssFontAttr contained "\<\(x\{1,2\}-\)\=\(large\|small\)\>"
   20              0.000077 syn match cssFontAttr contained "\<small-\(caps\|caption\)\>"
                            " font-family attributes
   20              0.000070 syn keyword cssFontAttr contained sans-serif serif cursive fantasy monospace
                            " font-feature-settings attributes
   20              0.000039 syn keyword cssFontAttr contained on off
                            " font-stretch attributes
   20              0.000135 syn match cssFontAttr contained "\<\(\(ultra\|extra\|semi\)-\)\=\(condensed\|expanded\)\>"
                            " font-style attributes
   20              0.000052 syn keyword cssFontAttr contained italic oblique
                            " font-synthesis attributes
   20              0.000039 syn keyword cssFontAttr contained weight style
                            " font-weight attributes
   20              0.000043 syn keyword cssFontAttr contained bold bolder lighter
                            " TODO: font-variant-* attributes
                            "------------------------------------------------
                            
                            " Webkit specific property/attributes
   20              0.000269 syn match cssFontProp contained "\<font-smooth\>"
   20              0.000237 syn match cssFontAttr contained "\<\(subpixel-\)\=\antialiased\>"
                            
                            
                            " CSS Multi-column Layout Module
                            " http://www.w3.org/TR/css3-multicol/
   20              0.000125 syn match cssMultiColumnProp contained "\<break-\(after\|before\|inside\)\>"
   20              0.000158 syn match cssMultiColumnProp contained "\<column-\(count\|fill\|gap\|rule\(-\(color\|style\|width\)\)\=\|span\|width\)\>"
   20              0.000037 syn keyword cssMultiColumnProp contained columns
   20              0.000044 syn keyword cssMultiColumnAttr contained balance medium
   20              0.000087 syn keyword cssMultiColumnAttr contained always left right page column
   20              0.000124 syn match cssMultiColumnAttr contained "\<avoid\(-\(page\|column\)\)\=\>"
                            
                            " http://www.w3.org/TR/css3-break/#page-break
   20              0.000110 syn match cssMultiColumnProp contained "\<page\(-break-\(before\|after\|inside\)\)\=\>"
                            
                            " http://www.w3.org/TR/SVG11/interact.html
   20              0.000094 syn match cssInteractProp contained "\<pointer-events\>"
   20              0.000119 syn match cssInteractAttr contained "\<\(visible\)\=\(Painted\|Fill\|Stroke\)\=\>"
                            
                            " TODO find following items in w3c docs.
   20              0.000050 syn keyword cssGeneratedContentProp contained quotes crop
   20              0.000113 syn match cssGeneratedContentProp contained "\<counter-\(reset\|increment\)\>"
   20              0.000073 syn match cssGeneratedContentProp contained "\<move-to\>"
   20              0.000077 syn match cssGeneratedContentProp contained "\<page-policy\>"
   20              0.000087 syn match cssGeneratedContentAttr contained "\<\(no-\)\=\(open\|close\)-quote\>"
                            
                            " https://www.w3.org/TR/css-grid-1/
   20              0.000066 syn match cssGridProp contained "\<grid\>"
   20              0.000128 syn match cssGridProp contained "\<grid-template\(-\(columns\|rows\|areas\)\)\=\>"
   20              0.000116 syn match cssGridProp contained "\<grid-\(column\|row\)\(-\(start\|end\|gap\)\)\=\>"
   20              0.000083 syn match cssGridProp contained "\<grid-\(area\|gap\)\>"
   20              0.000075 syn match cssGridProp contained "\<gap\>"
   20              0.000115 syn match cssGridProp contained "\<grid-auto-\(flow\|rows\|columns\)\>"
                            
   20              0.000116 syn match cssHyerlinkProp contained "\<target\(-\(name\|new\|position\)\)\=\>"
                            
   20              0.000222 syn match cssListProp contained "\<list-style\(-\(type\|position\|image\)\)\=\>"
   20              0.000224 syn match cssListAttr contained "\<\(lower\|upper\)-\(roman\|alpha\|greek\|latin\)\>"
   20              0.000103 syn match cssListAttr contained "\<\(hiragana\|katakana\)\(-iroha\)\=\>"
   20              0.000129 syn match cssListAttr contained "\<\(decimal\(-leading-zero\)\=\|cjk-ideographic\)\>"
   20              0.000086 syn keyword cssListAttr contained disc circle square hebrew armenian georgian
   20              0.000049 syn keyword cssListAttr contained inside outside
                            
                            " object-fit https://www.w3.org/TR/css-images-3/#the-object-fit
   20              0.000102 syn match cssObjectProp contained "\<object-\(fit\|position\)\>"
   20              0.000144 syn keyword cssObjectAttr contained fill contain cover scale-down
                            
   20              0.000111 syn keyword cssPositioningProp contained bottom clear clip display float left
   20              0.000063 syn keyword cssPositioningProp contained position right top visibility
   20              0.000073 syn match cssPositioningProp contained "\<z-index\>"
   20              0.000062 syn keyword cssPositioningAttr contained block compact grid
   20              0.000202 syn match cssPositioningAttr contained "\<table\(-\(row-group\|\(header\|footer\)-group\|row\|column\(-group\)\=\|cell\|caption\)\)\=\>"
   20              0.000044 syn keyword cssPositioningAttr contained left right both
   20              0.000070 syn match cssPositioningAttr contained "\<list-item\>"
   20              0.000168 syn match cssPositioningAttr contained "\<inline\(-\(block\|box\|table\|grid\|flex\)\)\=\>"
   20              0.000081 syn match cssPositioningAttr contained "\<flow\(-root\)\=\>"
   20              0.000073 syn keyword cssPositioningAttr contained static relative absolute fixed subgrid sticky
                            
   20              0.000064 syn keyword cssPrintAttr contained landscape portrait crop cross always
                            
   20              0.000177 syn match cssTableProp contained "\<\(caption-side\|table-layout\|border-collapse\|border-spacing\|empty-cells\)\>"
   20              0.000216 syn keyword cssTableAttr contained fixed collapse separate show hide once always
                            
                            
   20              0.000066 syn keyword cssTextProp contained color direction hyphens
   20              0.000299 syn match cssTextProp "\<\(\(word\|letter\)-spacing\|text\(-\(decoration\|transform\|align\|index\|shadow\)\)\=\|vertical-align\|unicode-bidi\|line-height\)\>"
   20              0.000235 syn match cssTextProp contained "\<text-\(justify\|outline\|warp\|align-last\|size-adjust\|rendering\|stroke\|indent\)\>"
   20              0.000127 syn match cssTextProp contained "\<\(word\|line\)-break\|\(overflow\|word\)-wrap\>"
   20              0.000080 syn match cssTextProp contained "\<white-space\>"
   20              0.000076 syn match cssTextProp contained "\<hanging-punctuation\>"
   20              0.000067 syn match cssTextProp contained "\<tab-size\>"
   20              0.000074 syn match cssTextProp contained "\<punctuation-trim\>"
   20              0.000074 syn match cssTextAttr contained "\<line-through\>"
   20              0.000122 syn match cssTextAttr contained "\<\(text-\)\=\(top\|bottom\)\>"
   20              0.000073 syn keyword cssTextAttr contained ltr rtl embed nowrap
   20              0.000074 syn keyword cssTextAttr contained underline overline blink sub super middle
   20              0.000056 syn keyword cssTextAttr contained capitalize uppercase lowercase
   20              0.000054 syn keyword cssTextAttr contained justify baseline sub super
   20              0.000074 syn keyword cssTextAttr contained optimizeLegibility optimizeSpeed geometricPrecision
   20              0.000108 syn match cssTextAttr contained "\<pre\(-\(line\|wrap\)\)\=\>"
   20              0.000079 syn match cssTextAttr contained "\<\(allow\|force\)-end\>"
   20              0.000053 syn keyword cssTextAttr contained start end adjacent
   20              0.000114 syn match cssTextAttr contained "\<inter-\(word\|ideographic\|cluster\)\>"
   20              0.000058 syn keyword cssTextAttr contained distribute kashida first last
   20              0.000199 syn keyword cssTextAttr contained clip ellipsis unrestricted suppress
   20              0.000067 syn match cssTextAttr contained "\<break-all\>"
   20              0.000059 syn match cssTextAttr contained "\<break-word\>"
   20              0.000033 syn keyword cssTextAttr contained manual
   20              0.000080 syn match cssTextAttr contained "\<bidi-override\>"
                            
   20              0.000098 syn match cssTransformProp contained "\<transform\(-\(origin\|style\)\)\=\>"
   20              0.000082 syn match cssTransformProp contained "\<perspective\(-origin\)\=\>"
   20              0.000095 syn match cssTransformProp contained "\<backface-visibility\>"
                            
                            " CSS Transitions
                            " http://www.w3.org/TR/css3-transitions/
   20              0.000180 syn match cssTransitionProp contained "\<transition\(-\(delay\|duration\|property\|timing-function\)\)\=\>"
                            
                            " transition-time-function attributes
   20              0.000089 syn match cssTransitionAttr contained "\<linear\(-gradient\)\@!\>"
   20              0.000100 syn match cssTransitionAttr contained "\<ease\(-\(in-out\|out\|in\)\)\=\>"
   20              0.000080 syn match cssTransitionAttr contained "\<step\(-start\|-end\)\=\>"
                            "------------------------------------------------
                            " CSS Basic User Interface Module Level 3 (CSS3 UI)
                            " http://www.w3.org/TR/css3-ui/
   20              0.000078 syn match cssUIProp contained "\<box-sizing\>"
   20              0.000109 syn match cssUIAttr contained "\<\(content\|padding\|border\)\(-box\)\=\>"
                            
   20              0.000048 syn keyword cssUIProp contained cursor
   20              0.000159 syn match cssUIAttr contained "\<\(\([ns]\=[ew]\=\)\|col\|row\|nesw\|nwse\)-resize\>"
   20              0.000075 syn keyword cssUIAttr contained crosshair help move pointer alias copy
   20              0.000199 syn keyword cssUIAttr contained progress wait text cell move
   20              0.000074 syn match cssUIAttr contained "\<context-menu\>"
   20              0.000064 syn match cssUIAttr contained "\<no-drop\>"
   20              0.000064 syn match cssUIAttr contained "\<not-allowed\>"
   20              0.000059 syn match cssUIAttr contained "\<all-scroll\>"
   20              0.000081 syn match cssUIAttr contained "\<\(vertical-\)\=text\>"
   20              0.000069 syn match cssUIAttr contained "\<zoom\(-in\|-out\)\=\>"
                            
   20              0.000062 syn match cssUIProp contained "\<ime-mode\>"
   20              0.000063 syn keyword cssUIAttr contained active inactive disabled
                            
   20              0.000148 syn match cssUIProp contained "\<nav-\(down\|index\|left\|right\|up\)\=\>"
   20              0.000110 syn match cssUIProp contained "\<outline\(-\(width\|style\|color\|offset\)\)\=\>"
   20              0.000030 syn keyword cssUIAttr contained invert
                            
   20              0.000043 syn keyword cssUIProp contained icon resize
   20              0.000045 syn keyword cssUIAttr contained both horizontal vertical
                            
   20              0.000085 syn match cssUIProp contained "\<text-overflow\>"
   20              0.000225 syn keyword cssUIAttr contained clip ellipsis
                            
   20              0.000086 syn match cssUIProp contained "\<image-rendering\>"
   20              0.000114 syn keyword cssUIAttr contained pixellated
   20              0.000066 syn match cssUIAttr contained "\<crisp-edges\>"
                            
                            "------------------------------------------------
                            " Webkit/iOS specific attributes
   20              0.000109 syn match cssUIAttr contained '\<preserve-3d\>'
                            " IE specific attributes
   20              0.000065 syn match cssIEUIAttr contained '\<bicubic\>'
                            
                            " Webkit/iOS specific properties
   20              0.000150 syn match cssUIProp contained '\<\(tap-highlight-color\|user-select\|touch-callout\)\>'
                            " IE specific properties
   20              0.000111 syn match cssIEUIProp contained '\<\(interpolation-mode\|zoom\|filter\)\>'
                            
                            " Webkit/Firebox specific properties/attributes
   20              0.000037 syn keyword cssUIProp contained appearance
   20              0.000064 syn keyword cssUIAttr contained window button field icon document menu
                            
                            
   20              0.000110 syn match cssAuralProp contained "\<\(pause\|cue\)\(-\(before\|after\)\)\=\>"
   20              0.000396 syn match cssAuralProp contained "\<\(play-during\|speech-rate\|voice-family\|pitch\(-range\)\=\|speak\(-\(punctuation\|numeral\|header\)\)\=\)\>"
   20              0.000088 syn keyword cssAuralProp contained volume during azimuth elevation stress richness
   20              0.000086 syn match cssAuralAttr contained "\<\(x-\)\=\(soft\|loud\)\>"
   20              0.000035 syn keyword cssAuralAttr contained silent
   20              0.000068 syn match cssAuralAttr contained "\<spell-out\>"
   20              0.000041 syn keyword cssAuralAttr contained non mix
   20              0.000084 syn match cssAuralAttr contained "\<\(left\|right\)-side\>"
   20              0.000108 syn match cssAuralAttr contained "\<\(far\|center\)-\(left\|center\|right\)\>"
   20              0.000053 syn keyword cssAuralAttr contained leftwards rightwards behind
   20              0.000154 syn keyword cssAuralAttr contained below level above lower higher
   20              0.000103 syn match cssAuralAttr contained "\<\(x-\)\=\(slow\|fast\|low\|high\)\>"
   20              0.000044 syn keyword cssAuralAttr contained faster slower
   20              0.000091 syn keyword cssAuralAttr contained male female child code digits continuous
                            
                            " mobile text
   20              0.000076 syn match cssMobileTextProp contained "\<text-size-adjust\>"
                            
   20              0.000063 syn keyword cssMediaProp contained width height orientation scan
   20              0.000070 syn keyword cssMediaProp contained any-hover any-pointer color-gamut grid hover
   20              0.000067 syn keyword cssMediaProp contained overflow-block overflow-inline pointer update
   20              0.000125 syn match cssMediaProp contained /\<\(\(max\|min\)-\)\=\(\(device\)-\)\=aspect-ratio\>/
   20              0.000121 syn match cssMediaProp contained /\<\(\(max\|min\)-\)\=device-pixel-ratio\>/
   20              0.000117 syn match cssMediaProp contained /\<\(\(max\|min\)-\)\=device-\(height\|width\)\>/
   20              0.000185 syn match cssMediaProp contained /\<\(\(max\|min\)-\)\=\(height\|width\|resolution\|monochrome\|color\(-index\)\=\)\>/
   20              0.000091 syn keyword cssMediaAttr contained portrait landscape progressive interlace
   20              0.000197 syn keyword cssMediaAttr contained coarse fast fine hover infinite p3 paged
   20              0.000061 syn keyword cssMediaAttr contained rec2020 scroll slow srgb
   20              0.000172 syn match cssKeyFrameProp contained /\(\d\+\(\.\d\+\)\?%\|\(\<from\|to\>\)\)/ nextgroup=cssDefinition
   20              0.000195 syn match cssPageMarginProp /@\(\(top\|left\|right\|bottom\)-\(left\|center\|right\|middle\|bottom\)\)\(-corner\)\=/ contained nextgroup=cssDefinition
   20              0.000045 syn keyword cssPageProp contained content size
   20              0.000043 syn keyword cssPageProp contained orphans widows
   20              0.000039 syn keyword cssFontDescriptorProp contained src
   20              0.000114 syn match cssFontDescriptorProp contained "\<unicode-range\>"
                            " unicode-range attributes
   20              0.000094 syn match cssFontDescriptorAttr contained "U+[0-9A-Fa-f?]\+"
   20              0.000062 syn match cssFontDescriptorAttr contained "U+\x\+-\x\+"
                            
   20              0.000247 syn match cssBraces contained "[{}]"
   20              0.000100 syn match cssError contained "{@<>"
   20              0.038343 syn region cssDefinition transparent matchgroup=cssBraces start='{' end='}' contains=cssTagName,cssAttributeSelector,cssClassName,cssIdentifier,cssAtRule,cssAttrRegion,css.*Prop,cssComment,cssValue.*,cssColor,cssURL,cssImportant,cssCustomProp,cssError,cssStringQ,cssStringQQ,cssFunction,cssUnicodeEscape,cssVendor,cssDefinition,cssHacks,cssNoise fold
   20              0.000146 syn match cssBraceError "}"
   20              0.000246 syn match cssAttrComma ","
                            
                            " Pseudo class
                            " https://www.w3.org/TR/selectors-4/
   20              0.000175 syn match cssPseudoClass ":[A-Za-z0-9_-]*" contains=cssNoise,cssPseudoClassId,cssUnicodeEscape,cssVendor,cssPseudoClassFn
   20              0.000112 syn keyword cssPseudoClassId contained link visited active hover before after left right
   20              0.000094 syn keyword cssPseudoClassId contained root empty target enabled disabled checked invalid
   20              0.000166 syn match cssPseudoClassId contained "\<first-\(line\|letter\)\>"
   20              0.000145 syn match cssPseudoClassId contained "\<\(first\|last\|only\)-\(of-type\|child\)\>"
   20              0.000153 syn match cssPseudoClassId contained  "\<focus\(-within\|-visible\)\=\>"
   20              0.000443 syn region cssPseudoClassFn contained matchgroup=cssFunctionName start="\<\(not\|is\|lang\|\(nth\|nth-last\)-\(of-type\|child\)\)(" end=")" contains=cssStringQ,cssStringQQ,cssTagName,cssAttributeSelector,cssClassName,cssIdentifier
                            " ------------------------------------
                            " Vendor specific properties
   20              0.000086 syn match cssPseudoClassId contained  "\<selection\>"
   20              0.000099 syn match cssPseudoClassId contained  "\<\(input-\)\=placeholder\>"
                            
                            " Misc highlight groups
   20              0.000297 syntax match cssUnitDecorators /\(#\|-\|+\|%\|mm\|cm\|in\|pt\|pc\|em\|ex\|px\|ch\|rem\|vh\|vw\|vmin\|vmax\|dpi\|dppx\|dpcm\|Hz\|kHz\|s\|ms\|deg\|grad\|rad\)/ contained
   20              0.000066 syntax match cssNoise contained /\(:\|;\|\/\)/
                            
                            " Comment
   20              0.000176 syn region cssComment start="/\*" end="\*/" contains=@Spell fold
                            
   20              0.000108 syn match cssUnicodeEscape "\\\x\{1,6}\s\?"
   20              0.000096 syn match cssSpecialCharQQ +\\\\\|\\"+ contained
   20              0.000056 syn match cssSpecialCharQ +\\\\\|\\'+ contained
   20              0.000158 syn region cssStringQQ start=+"+ skip=+\\\\\|\\"+ end=+"+ contains=cssUnicodeEscape,cssSpecialCharQQ
   20              0.000184 syn region cssStringQ start=+'+ skip=+\\\\\|\\'+ end=+'+ contains=cssUnicodeEscape,cssSpecialCharQ
                            
                            " Vendor Prefix
   20              0.000099 syn match cssVendor contained "-\(webkit\|moz\|o\|ms\)-"
                            
                            " Various CSS Hack characters
                            " In earlier versions of IE (6 and 7), one can prefix property names
                            " with a _ or * to isolate those definitions to particular versions of IE
                            " This is purely decorative and therefore we assign to the same highlight
                            " group to cssVendor, for more information:
                            " http://www.paulirish.com/2009/browser-specific-css-hacks/
   20              0.000053 syn match cssHacks contained /\(_\|*\)/
                            
                            " Attr Enhance
                            " Some keywords are both Prop and Attr, so we have to handle them
                            " cssPseudoClassId is hidden by cssAttrRegion, so we add it here. see #69
   20              0.056241 syn region cssAttrRegion start=/:/ end=/\ze\(;\|)\|}\|{\)/ contained contains=cssPseudoClassId,css.*Attr,cssColor,cssImportant,cssValue.*,cssFunction,cssString.*,cssURL,cssComment,cssUnicodeEscape,cssVendor,cssError,cssAttrComma,cssNoise
                            
                            " Hack for transition
                            " 'transition' has Props after ':'.
   20              0.074204 syn region cssAttrRegion start=/transition\s*:/ end=/\ze\(;\|)\|}\)/ contained contains=css.*Prop,css.*Attr,cssColor,cssImportant,cssValue.*,cssFunction,cssString.*,cssURL,cssComment,cssUnicodeEscape,cssVendor,cssError,cssAttrComma,cssNoise
                            
   20              0.000524 syn match cssAtKeyword /@\(font-face\|media\|keyframes\|import\|charset\|namespace\|page\|supports\)/
                            
   20              0.000087 syn keyword cssAtRuleLogical only not and contained
                            
                            " @media
                            " Reference: http://www.w3.org/TR/css3-mediaqueries/
   20              0.000611 syn region cssAtRule start=/@media\>/ end=/\ze{/ skipwhite skipnl matchgroup=cssAtKeyword contains=cssMediaProp,cssValueLength,cssAtRuleLogical,cssValueInteger,cssMediaAttr,cssVendor,cssMediaType,cssComment,cssCustomProp,cssFunctionName nextgroup=cssDefinition
   20              0.000151 syn keyword cssMediaType contained screen print aural braille embossed handheld projection tty tv speech all contained
                            
                            " @page
                            " http://www.w3.org/TR/css3-page/
   20              0.000331 syn region cssAtRule start=/@page\>/ end=/\ze{/ skipwhite skipnl matchgroup=cssAtKeyword contains=cssPagePseudo,cssComment nextgroup=cssDefinition
   20              0.000173 syn match cssPagePseudo /:\(left\|right\|first\|blank\)/ contained skipwhite skipnl
                            " @keyframe
                            " http://www.w3.org/TR/css3-animations/#keyframes
   20              0.000242 syn region cssAtRule start=/@\(-[a-z]\+-\)\=keyframes\>/ end=/\ze{/ skipwhite skipnl matchgroup=cssAtKeyword contains=cssVendor,cssComment nextgroup=cssDefinition
                            
   20              0.000352 syn region cssAtRule start=/@import\>/    end=/\ze;/ contains=cssStringQ,cssStringQQ,cssUnicodeEscape,cssComment,cssAtKeyword,cssURL,cssMediaProp,cssValueLength,cssAtRuleLogical,cssValueInteger,cssMediaAttr,cssMediaType
   20              0.000293 syn region cssAtRule start=/@charset\>/   end=/\ze;/ contains=cssStringQ,cssStringQQ,cssUnicodeEscape,cssComment,cssAtKeyword
   20              0.000168 syn region cssAtRule start=/@namespace\>/ end=/\ze;/ contains=cssStringQ,cssStringQQ,cssUnicodeEscape,cssComment,cssAtKeyword
                            
                            " @supports
                            " https://www.w3.org/TR/css3-conditional/#at-supports
   20              0.037580 syn region cssAtRule start=/@supports\>/ end=/\ze{/ skipwhite skipnl contains=cssAtRuleLogical,cssAttrRegion,css.*Prop,cssValue.*,cssVendor,cssAtKeyword,cssComment nextgroup=cssDefinition
                            
                            
   20              0.000167 if main_syntax == "css"
    8              0.000029   syn sync minlines=10
   20              0.000023 endif
                            
                            " Define the default highlighting.
                            " Only when an item doesn't have highlighting yet
                            
   20              0.000055 hi def link cssComment Comment
   20              0.000027 hi def link cssVendor Comment
   20              0.000246 hi def link cssHacks Comment
   20              0.000055 hi def link cssTagName Statement
   20              0.000029 hi def link cssDeprecated Error
   20              0.000029 hi def link cssSelectorOp Special
   20              0.000026 hi def link cssSelectorOp2 Special
   20              0.000021 hi def link cssAttrComma Special
                            
   20              0.000026 hi def link cssAnimationProp cssProp
   20              0.000026 hi def link cssBackgroundProp cssProp
   20              0.000024 hi def link cssBorderProp cssProp
   20              0.000045 hi def link cssBoxProp cssProp
   20              0.000027 hi def link cssCascadeProp cssProp
   20              0.000024 hi def link cssColorProp cssProp
   20              0.000029 hi def link cssContentForPagedMediaProp cssProp
   20              0.000046 hi def link cssDimensionProp cssProp
   20              0.000028 hi def link cssFlexibleBoxProp cssProp
   20              0.000025 hi def link cssFontProp cssProp
   20              0.000027 hi def link cssGeneratedContentProp cssProp
   20              0.000024 hi def link cssGridProp cssProp
   20              0.000026 hi def link cssHyerlinkProp cssProp
   20              0.000036 hi def link cssInteractProp cssProp
   20              0.000024 hi def link cssLineboxProp cssProp
   20              0.000023 hi def link cssListProp cssProp
   20              0.000022 hi def link cssMarqueeProp cssProp
   20              0.000025 hi def link cssMultiColumnProp cssProp
   20              0.000025 hi def link cssPagedMediaProp cssProp
   20              0.000023 hi def link cssPositioningProp cssProp
   20              0.000023 hi def link cssObjectProp cssProp
   20              0.000022 hi def link cssPrintProp cssProp
   20              0.000023 hi def link cssRubyProp cssProp
   20              0.000023 hi def link cssSpeechProp cssProp
   20              0.000022 hi def link cssTableProp cssProp
   20              0.000023 hi def link cssTextProp cssProp
   20              0.000023 hi def link cssTransformProp cssProp
   20              0.000024 hi def link cssTransitionProp cssProp
   20              0.000023 hi def link cssUIProp cssProp
   20              0.000022 hi def link cssIEUIProp cssProp
   20              0.000023 hi def link cssAuralProp cssProp
   20              0.000023 hi def link cssRenderProp cssProp
   20              0.000022 hi def link cssMobileTextProp cssProp
                            
   20              0.000026 hi def link cssAnimationAttr cssAttr
   20              0.000024 hi def link cssBackgroundAttr cssAttr
   20              0.000022 hi def link cssBorderAttr cssAttr
   20              0.000025 hi def link cssBoxAttr cssAttr
   20              0.000028 hi def link cssContentForPagedMediaAttr cssAttr
   20              0.000023 hi def link cssDimensionAttr cssAttr
   20              0.000023 hi def link cssFlexibleBoxAttr cssAttr
   20              0.000023 hi def link cssFontAttr cssAttr
   20              0.000027 hi def link cssGeneratedContentAttr cssAttr
   20              0.000022 hi def link cssGridAttr cssAttr
   20              0.000025 hi def link cssHyerlinkAttr cssAttr
   20              0.000023 hi def link cssInteractAttr cssAttr
   20              0.000023 hi def link cssLineboxAttr cssAttr
   20              0.000022 hi def link cssListAttr cssAttr
   20              0.000023 hi def link cssMarginAttr cssAttr
   20              0.000024 hi def link cssMarqueeAttr cssAttr
   20              0.000023 hi def link cssMultiColumnAttr cssAttr
   20              0.000023 hi def link cssPaddingAttr cssAttr
   20              0.000025 hi def link cssPagedMediaAttr cssAttr
   20              0.000023 hi def link cssPositioningAttr cssAttr
   20              0.000021 hi def link cssObjectAttr cssAttr
   20              0.000023 hi def link cssGradientAttr cssAttr
   20              0.000027 hi def link cssPrintAttr cssAttr
   20              0.000022 hi def link cssRubyAttr cssAttr
   20              0.000022 hi def link cssSpeechAttr cssAttr
   20              0.000021 hi def link cssTableAttr cssAttr
   20              0.000023 hi def link cssTextAttr cssAttr
   20              0.000022 hi def link cssTransformAttr cssAttr
   20              0.000023 hi def link cssTransitionAttr cssAttr
   20              0.000023 hi def link cssUIAttr cssAttr
   20              0.000021 hi def link cssIEUIAttr cssAttr
   20              0.000023 hi def link cssAuralAttr cssAttr
   20              0.000022 hi def link cssRenderAttr cssAttr
   20              0.000022 hi def link cssCascadeAttr cssAttr
   20              0.000020 hi def link cssCommonAttr cssAttr
                            
   20              0.000025 hi def link cssPseudoClassId PreProc
   20              0.000028 hi def link cssPseudoClassLang Constant
   20              0.000276 hi def link cssValueLength Number
   20              0.000028 hi def link cssValueInteger Number
   20              0.000032 hi def link cssValueNumber Number
   20              0.000022 hi def link cssValueAngle Number
   20              0.000022 hi def link cssValueTime Number
   20              0.000043 hi def link cssValueFrequency Number
   20              0.000047 hi def link cssFunction Constant
   20              0.000025 hi def link cssURL String
   20              0.000026 hi def link cssFunctionName Function
   20              0.000024 hi def link cssFunctionComma Function
   20              0.000022 hi def link cssColor Constant
   20              0.000023 hi def link cssIdentifier Function
   20              0.000022 hi def link cssAtRule Include
   20              0.000021 hi def link cssAtKeyword PreProc
   20              0.000022 hi def link cssImportant Special
   20              0.000022 hi def link cssCustomProp Special
   20              0.000023 hi def link cssBraces Function
   20              0.000023 hi def link cssBraceError Error
   20              0.000023 hi def link cssError Error
   20              0.000022 hi def link cssUnicodeEscape Special
   20              0.000022 hi def link cssStringQQ String
   20              0.000022 hi def link cssStringQ String
   20              0.000025 hi def link cssAttributeSelector String
   20              0.000021 hi def link cssMediaType Special
   20              0.000023 hi def link cssMediaComma Normal
   20              0.000025 hi def link cssAtRuleLogical Statement
   20              0.000020 hi def link cssMediaProp cssProp
   20              0.000021 hi def link cssMediaAttr cssAttr
   20              0.000024 hi def link cssPagePseudo PreProc
   20              0.000027 hi def link cssPageMarginProp cssAtKeyword
   20              0.000023 hi def link cssPageProp cssProp
   20              0.000024 hi def link cssKeyFrameProp Constant
   20              0.000023 hi def link cssFontDescriptor Special
   20              0.000026 hi def link cssFontDescriptorProp cssProp
   20              0.000035 hi def link cssFontDescriptorAttr cssAttr
   20              0.000022 hi def link cssUnicodeRange Constant
   20              0.000024 hi def link cssClassName Function
   20              0.000023 hi def link cssClassNameDot Function
   20              0.000023 hi def link cssProp StorageClass
   20              0.000021 hi def link cssAttr Constant
   20              0.000024 hi def link cssUnitDecorators Number
   20              0.000020 hi def link cssNoise Noise
                            
   20              0.000090 let b:current_syntax = "css"
                            
   20              0.000047 if main_syntax == 'css'
    8              0.000018   unlet main_syntax
   20              0.000014 endif
                            
   20              0.000296 let &cpo = s:cpo_save
   20              0.000038 unlet s:cpo_save
                            
                            " vim: ts=8

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\syntax\typescriptreact.vim
Sourced 7 times
Total time:   0.068127
 Self time:   0.008007

count  total (s)   self (s)
                            " Vim syntax file
                            " Language:     TypeScript with React (JSX)
                            " Maintainer:   Bram Moolenaar
                            " Last Change:	2019 Nov 30
                            " Based On:     Herrington Darkholme's yats.vim
                            " Changes:      See https:github.com/HerringtonDarkholme/yats.vim
                            " Credits:      See yats.vim on github
                            
    7              0.000095 if !exists("main_syntax")
    7              0.000030   if exists("b:current_syntax")
                                finish
    7              0.000009   endif
    7              0.000029   let main_syntax = 'typescriptreact'
    7              0.000005 endif
                            
    7              0.000055 let s:cpo_save = &cpo
    7              0.000099 set cpo&vim
                            
    7              0.000280 syntax region tsxTag
                                  \ start=+<\([^/!?<>="':]\+\)\@=+
                                  \ skip=+</[^ /!?<>"']\+>+
                                  \ end=+/\@<!>+
                                  \ end=+\(/>\)\@=+
                                  \ contained
                                  \ contains=tsxTagName,tsxIntrinsicTagName,tsxAttrib,tsxEscJs,
                                            \tsxCloseString,@tsxComment
                            
    7              0.000031 syntax match tsxTag /<>/ contained
                            
                            
                            " <tag></tag>
                            " s~~~~~~~~~e
                            " and self close tag
                            " <tag/>
                            " s~~~~e
                            " A big start regexp borrowed from https://git.io/vDyxc
    7              0.000240 syntax region tsxRegion
                                  \ start=+<\_s*\z([a-zA-Z1-9\$_-]\+\(\.\k\+\)*\)+
                                  \ skip=+<!--\_.\{-}-->+
                                  \ end=+</\_s*\z1>+
                                  \ matchgroup=tsxCloseString end=+/>+
                                  \ fold
                                  \ contains=tsxRegion,tsxCloseString,tsxCloseTag,tsxTag,tsxCommentInvalid,tsxFragment,tsxEscJs,@Spell
                                  \ keepend
                                  \ extend
                            
                            " <>   </>
                            " s~~~~~~e
                            " A big start regexp borrowed from https://git.io/vDyxc
    7              0.000214 syntax region tsxFragment
                                  \ start=+\(\((\|{\|}\|\[\|,\|&&\|||\|?\|:\|=\|=>\|\Wreturn\|^return\|\Wdefault\|^\|>\)\_s*\)\@<=<>+
                                  \ skip=+<!--\_.\{-}-->+
                                  \ end=+</>+
                                  \ fold
                                  \ contains=tsxRegion,tsxCloseString,tsxCloseTag,tsxTag,tsxCommentInvalid,tsxFragment,tsxEscJs,@Spell
                                  \ keepend
                                  \ extend
                            
                            " </tag>
                            " ~~~~~~
    7              0.000060 syntax match tsxCloseTag
                                  \ +</\_s*[^/!?<>"']\+>+
                                  \ contained
                                  \ contains=tsxTagName,tsxIntrinsicTagName
                            
    7              0.000020 syntax match tsxCloseTag +</>+ contained
                            
    7              0.000022 syntax match tsxCloseString
                                  \ +/>+
                                  \ contained
                            
                            " <!-- -->
                            " ~~~~~~~~
    7              0.000027 syntax match tsxCommentInvalid /<!--\_.\{-}-->/ display
                            
    7              0.000039 syntax region tsxBlockComment
                                \ contained
                                \ start="/\*"
                                \ end="\*/"
                            
    7              0.000029 syntax match tsxLineComment
                                \ "//.*$"
                                \ contained
                                \ display
                            
    7              0.000031 syntax cluster tsxComment contains=tsxBlockComment,tsxLineComment
                            
    7              0.000041 syntax match tsxEntity "&[^; \t]*;" contains=tsxEntityPunct
    7              0.000018 syntax match tsxEntityPunct contained "[&.;]"
                            
                            " <tag key={this.props.key}>
                            "  ~~~
    7              0.000057 syntax match tsxTagName
                                \ +[</]\_s*[^/!?<>"'* ]\++hs=s+1
                                \ contained
                                \ nextgroup=tsxAttrib
                                \ skipwhite
                                \ display
    7              0.000052 syntax match tsxIntrinsicTagName
                                \ +[</]\_s*[a-z1-9-]\++hs=s+1
                                \ contained
                                \ nextgroup=tsxAttrib
                                \ skipwhite
                                \ display
                            
                            " <tag key={this.props.key}>
                            "      ~~~
    7              0.000042 syntax match tsxAttrib
                                \ +[a-zA-Z_][-0-9a-zA-Z_]*+
                                \ nextgroup=tsxEqual skipwhite
                                \ contained
                                \ display
                            
                            " <tag id="sample">
                            "        ~
    7              0.000045 syntax match tsxEqual +=+ display contained
                              \ nextgroup=tsxString skipwhite
                            
                            " <tag id="sample">
                            "         s~~~~~~e
    7              0.000048 syntax region tsxString contained start=+"+ end=+"+ contains=tsxEntity,@Spell display
                            
                            " <tag key={this.props.key}>
                            "          s~~~~~~~~~~~~~~e
    7              0.000064 syntax region tsxEscJs
                                \ contained
                                \ contains=@typescriptValue,@tsxComment
                                \ matchgroup=typescriptBraces
                                \ start=+{+
                                \ end=+}+
                                \ extend
                            
                            
                            """""""""""""""""""""""""""""""""""""""""""""""""""
                            " Source the part common with typescriptreact.vim
    7   0.065459   0.005339 source <sfile>:h/shared/typescriptcommon.vim
                            
                            
    7              0.000039 syntax cluster typescriptExpression add=tsxRegion,tsxFragment
                            
    7              0.000012 hi def link tsxTag htmlTag
    7              0.000009 hi def link tsxTagName Function
    7              0.000010 hi def link tsxIntrinsicTagName htmlTagName
    7              0.000009 hi def link tsxString String
    7              0.000009 hi def link tsxNameSpace Function
    7              0.000009 hi def link tsxCommentInvalid Error
    7              0.000010 hi def link tsxBlockComment Comment
    7              0.000009 hi def link tsxLineComment Comment
    7              0.000008 hi def link tsxAttrib Type
    7              0.000009 hi def link tsxEscJs tsxEscapeJs
    7              0.000009 hi def link tsxCloseTag htmlTag
    7              0.000008 hi def link tsxCloseString Identifier
                            
    7              0.000026 let b:current_syntax = "typescriptreact"
    7              0.000022 if main_syntax == 'typescriptreact'
    7              0.000011   unlet main_syntax
    7              0.000004 endif
                            
    7              0.000055 let &cpo = s:cpo_save
    7              0.000058 unlet s:cpo_save

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\syntax/shared/typescriptcommon.vim
Sourced 11 times
Total time:   0.091133
 Self time:   0.091133

count  total (s)   self (s)
                            " Vim syntax file
                            " Language:     TypeScript and TypeScriptReact
                            " Maintainer:   Bram Moolenaar, Herrington Darkholme
                            " Last Change:	2021 Sep 22
                            " Based On:     Herrington Darkholme's yats.vim
                            " Changes:      See https:github.com/HerringtonDarkholme/yats.vim
                            " Credits:      See yats.vim on github
                            
   11              0.000129 if &cpo =~ 'C'
   11              0.000060   let s:cpo_save = &cpo
   11              0.000103   set cpo&vim
   11              0.000012 endif
                            
                            
                            " NOTE: this results in accurate highlighting, but can be slow.
   11              0.000024 syntax sync fromstart
                            
                            "Dollar sign is permitted anywhere in an identifier
   11              0.000384 setlocal iskeyword-=$
   11              0.000046 if main_syntax == 'typescript' || main_syntax == 'typescriptreact'
   11              0.000404   setlocal iskeyword+=$
                              " syntax cluster htmlJavaScript                 contains=TOP
   11              0.000012 endif
                            " For private field added from TypeScript 3.8
   11              0.000379 setlocal iskeyword+=#
                            
                            " lowest priority on least used feature
   11              0.000144 syntax match   typescriptLabel                /[a-zA-Z_$]\k*:/he=e-1 contains=typescriptReserved nextgroup=@typescriptStatement skipwhite skipempty
                            
                            " other keywords like return,case,yield uses containedin
   11              0.000102 syntax region  typescriptBlock                 matchgroup=typescriptBraces start=/{/ end=/}/ contains=@typescriptStatement,@typescriptComments fold
   11              0.000133 syntax cluster afterIdentifier contains=
                              \ typescriptDotNotation,
                              \ typescriptFuncCallArg,
                              \ typescriptTemplate,
                              \ typescriptIndexExpr,
                              \ @typescriptSymbols,
                              \ typescriptTypeArguments
                            
   11              0.000097 syntax match   typescriptIdentifierName        /\<\K\k*/
                              \ nextgroup=@afterIdentifier
                              \ transparent
                              \ contains=@_semantic
                              \ skipnl skipwhite
                            
   11              0.000104 syntax match   typescriptProp contained /\K\k*!\?/
                              \ transparent
                              \ contains=@props
                              \ nextgroup=@afterIdentifier
                              \ skipwhite skipempty
                            
   11              0.000123 syntax region  typescriptIndexExpr      contained matchgroup=typescriptProperty start=/\[/rs=s+1 end=/]/he=e-1 contains=@typescriptValue nextgroup=@typescriptSymbols,typescriptDotNotation,typescriptFuncCallArg skipwhite skipempty
                            
   11              0.000063 syntax match   typescriptDotNotation           /\.\|?\.\|!\./ nextgroup=typescriptProp skipnl
   11              0.000060 syntax match   typescriptDotStyleNotation      /\.style\./ nextgroup=typescriptDOMStyle transparent
                            " syntax match   typescriptFuncCall              contained /[a-zA-Z]\k*\ze(/ nextgroup=typescriptFuncCallArg
   11              0.000115 syntax region  typescriptParenExp              matchgroup=typescriptParens start=/(/ end=/)/ contains=@typescriptComments,@typescriptValue,typescriptCastKeyword nextgroup=@typescriptSymbols skipwhite skipempty
   11              0.000104 syntax region  typescriptFuncCallArg           contained matchgroup=typescriptParens start=/(/ end=/)/ contains=@typescriptValue,@typescriptComments nextgroup=@typescriptSymbols,typescriptDotNotation skipwhite skipempty skipnl
   11              0.000092 syntax region  typescriptEventFuncCallArg      contained matchgroup=typescriptParens start=/(/ end=/)/ contains=@typescriptEventExpression
   11              0.000128 syntax region  typescriptEventString           contained start=/\z(["']\)/  skip=/\\\\\|\\\z1\|\\\n/  end=/\z1\|$/ contains=typescriptASCII,@events
                            
   11              0.000131 syntax region  typescriptDestructureString
                              \ start=/\z(["']\)/  skip=/\\\\\|\\\z1\|\\\n/  end=/\z1\|$/
                              \ contains=typescriptASCII
                              \ nextgroup=typescriptDestructureAs
                              \ contained skipwhite skipempty
                            
   11              0.000081 syntax cluster typescriptVariableDeclarations
                              \ contains=typescriptVariableDeclaration,@typescriptDestructures
                            
   11              0.000135 syntax match typescriptVariableDeclaration /[A-Za-z_$]\k*/
                              \ nextgroup=typescriptTypeAnnotation,typescriptAssign
                              \ contained skipwhite skipempty
                            
   11              0.000199 syntax cluster typescriptDestructureVariables contains=
                              \ typescriptRestOrSpread,
                              \ typescriptDestructureComma,
                              \ typescriptDestructureLabel,
                              \ typescriptDestructureVariable,
                              \ @typescriptDestructures
                            
   11              0.000061 syntax match typescriptDestructureVariable    /[A-Za-z_$]\k*/ contained
                              \ nextgroup=typescriptDefaultParam
                              \ contained skipwhite skipempty
                            
   11              0.000074 syntax match typescriptDestructureLabel       /[A-Za-z_$]\k*\ze\_s*:/
                              \ nextgroup=typescriptDestructureAs
                              \ contained skipwhite skipempty
                            
   11              0.000169 syntax match typescriptDestructureAs /:/
                              \ nextgroup=typescriptDestructureVariable,@typescriptDestructures
                              \ contained skipwhite skipempty
                            
   11              0.000022 syntax match typescriptDestructureComma /,/ contained
                            
   11              0.000068 syntax cluster typescriptDestructures contains=
                              \ typescriptArrayDestructure,
                              \ typescriptObjectDestructure
                            
   11              0.000128 syntax region typescriptArrayDestructure matchgroup=typescriptBraces
                              \ start=/\[/ end=/]/
                              \ contains=@typescriptDestructureVariables,@typescriptComments
                              \ nextgroup=typescriptTypeAnnotation,typescriptAssign
                              \ transparent contained skipwhite skipempty fold
                            
   11              0.000135 syntax region typescriptObjectDestructure matchgroup=typescriptBraces
                              \ start=/{/ end=/}/
                              \ contains=typescriptDestructureString,@typescriptDestructureVariables,@typescriptComments
                              \ nextgroup=typescriptTypeAnnotation,typescriptAssign
                              \ transparent contained skipwhite skipempty fold
                            
                            "Syntax in the JavaScript code
                            
                            " String
   11              0.000032 syntax match   typescriptASCII                 contained /\\\d\d\d/
                            
   11              0.000095 syntax region  typescriptTemplateSubstitution matchgroup=typescriptTemplateSB
                              \ start=/\${/ end=/}/
                              \ contains=@typescriptValue
                              \ contained
                            
                            
   11              0.000173 syntax region  typescriptString 
                              \ start=+\z(["']\)+  skip=+\\\%(\z1\|$\)+  end=+\z1+ end=+$+
                              \ contains=typescriptSpecial,@Spell
                              \ extend
                            
   11              0.000083 syntax match   typescriptSpecial            contained "\v\\%(x\x\x|u%(\x{4}|\{\x{1,6}})|c\u|.)"
                            
                            " From vim runtime
                            " <https://github.com/vim/vim/blob/master/runtime/syntax/javascript.vim#L48>
   11              0.000215 syntax region  typescriptRegexpString          start=+/[^/*]+me=e-1 skip=+\\\\\|\\/+ end=+/[gimuy]\{0,5\}\s*$+ end=+/[gimuy]\{0,5\}\s*[;.,)\]}:]+me=e-1 nextgroup=typescriptDotNotation oneline
                            
   11              0.000406 syntax region  typescriptTemplate
                              \ start=/`/  skip=/\\\\\|\\`\|\n/  end=/`\|$/
                              \ contains=typescriptTemplateSubstitution,typescriptSpecial,@Spell
                              \ nextgroup=@typescriptSymbols
                              \ skipwhite skipempty
                            
                            "Array
   11              0.000128 syntax region  typescriptArray matchgroup=typescriptBraces
                              \ start=/\[/ end=/]/
                              \ contains=@typescriptValue,@typescriptComments
                              \ nextgroup=@typescriptSymbols,typescriptDotNotation
                              \ skipwhite skipempty fold
                            
                            " Number
   11              0.000074 syntax match typescriptNumber /\<0[bB][01][01_]*\>/        nextgroup=@typescriptSymbols skipwhite skipempty
   11              0.000067 syntax match typescriptNumber /\<0[oO][0-7][0-7_]*\>/       nextgroup=@typescriptSymbols skipwhite skipempty
   11              0.000076 syntax match typescriptNumber /\<0[xX][0-9a-fA-F][0-9a-fA-F_]*\>/ nextgroup=@typescriptSymbols skipwhite skipempty
   11              0.000136 syntax match typescriptNumber /\<\%(\d[0-9_]*\%(\.\d[0-9_]*\)\=\|\.\d[0-9_]*\)\%([eE][+-]\=\d[0-9_]*\)\=\>/
                              \ nextgroup=typescriptSymbols skipwhite skipempty
                            
   11              0.000127 syntax region  typescriptObjectLiteral         matchgroup=typescriptBraces
                              \ start=/{/ end=/}/
                              \ contains=@typescriptComments,typescriptObjectLabel,typescriptStringProperty,typescriptComputedPropertyName,typescriptObjectAsyncKeyword
                              \ fold contained
                            
   11              0.000028 syntax keyword typescriptObjectAsyncKeyword async contained
                            
   11              0.000075 syntax match   typescriptObjectLabel  contained /\k\+\_s*/
                              \ nextgroup=typescriptObjectColon,@typescriptCallImpl
                              \ skipwhite skipempty
                            
   11              0.000119 syntax region  typescriptStringProperty   contained
                              \ start=/\z(["']\)/  skip=/\\\\\|\\\z1\|\\\n/  end=/\z1/
                              \ nextgroup=typescriptObjectColon,@typescriptCallImpl
                              \ skipwhite skipempty
                            
                            " syntax region  typescriptPropertyName    contained start=/\z(["']\)/  skip=/\\\\\|\\\z1\|\\\n/  end=/\z1(/me=e-1 nextgroup=@typescriptCallSignature skipwhite skipempty oneline
   11              0.000105 syntax region  typescriptComputedPropertyName  contained matchgroup=typescriptBraces
                              \ start=/\[/rs=s+1 end=/]/
                              \ contains=@typescriptValue
                              \ nextgroup=typescriptObjectColon,@typescriptCallImpl
                              \ skipwhite skipempty
                            
                            " syntax region  typescriptComputedPropertyName  contained matchgroup=typescriptPropertyName start=/\[/rs=s+1 end=/]\_s*:/he=e-1 contains=@typescriptValue nextgroup=@typescriptValue skipwhite skipempty
                            " syntax region  typescriptComputedPropertyName  contained matchgroup=typescriptPropertyName start=/\[/rs=s+1 end=/]\_s*(/me=e-1 contains=@typescriptValue nextgroup=@typescriptCallSignature skipwhite skipempty
                            " Value for object, statement for label statement
   11              0.000043 syntax match typescriptRestOrSpread /\.\.\./ contained
   11              0.000061 syntax match typescriptObjectSpread /\.\.\./ contained containedin=typescriptObjectLiteral,typescriptArray nextgroup=@typescriptValue
                            
   11              0.000040 syntax match typescriptObjectColon contained /:/ nextgroup=@typescriptValue skipwhite skipempty
                            
                            " + - ^ ~
   11              0.000059 syntax match typescriptUnaryOp /[+\-~!]/
                             \ nextgroup=@typescriptValue
                             \ skipwhite
                            
   11              0.000149 syntax region typescriptTernary matchgroup=typescriptTernaryOp start=/?[.?]\@!/ end=/:/ contained contains=@typescriptValue,@typescriptComments nextgroup=@typescriptValue skipwhite skipempty
                            
   11              0.000048 syntax match   typescriptAssign  /=/ nextgroup=@typescriptValue
                              \ skipwhite skipempty
                            
                            " 2: ==, ===
   11              0.000053 syntax match   typescriptBinaryOp contained /===\?/ nextgroup=@typescriptValue skipwhite skipempty
                            " 6: >>>=, >>>, >>=, >>, >=, >
   11              0.000070 syntax match   typescriptBinaryOp contained />\(>>=\|>>\|>=\|>\|=\)\?/ nextgroup=@typescriptValue skipwhite skipempty
                            " 4: <<=, <<, <=, <
   11              0.000048 syntax match   typescriptBinaryOp contained /<\(<=\|<\|=\)\?/ nextgroup=@typescriptValue skipwhite skipempty
                            " 3: ||, |=, |, ||=
   11              0.000050 syntax match   typescriptBinaryOp contained /||\?=\?/ nextgroup=@typescriptValue skipwhite skipempty
                            " 4: &&, &=, &, &&=
   11              0.000044 syntax match   typescriptBinaryOp contained /&&\?=\?/ nextgroup=@typescriptValue skipwhite skipempty
                            " 2: ??, ??=
   11              0.000037 syntax match   typescriptBinaryOp contained /??=\?/ nextgroup=@typescriptValue skipwhite skipempty
                            " 2: *=, *
   11              0.000039 syntax match   typescriptBinaryOp contained /\*=\?/ nextgroup=@typescriptValue skipwhite skipempty
                            " 2: %=, %
   11              0.000037 syntax match   typescriptBinaryOp contained /%=\?/ nextgroup=@typescriptValue skipwhite skipempty
                            " 2: /=, /
   11              0.000057 syntax match   typescriptBinaryOp contained +/\(=\|[^\*/]\@=\)+ nextgroup=@typescriptValue skipwhite skipempty
   11              0.000039 syntax match   typescriptBinaryOp contained /!==\?/ nextgroup=@typescriptValue skipwhite skipempty
                            " 2: !=, !==
   11              0.000046 syntax match   typescriptBinaryOp contained /+\(+\|=\)\?/ nextgroup=@typescriptValue skipwhite skipempty
                            " 3: +, ++, +=
   11              0.000040 syntax match   typescriptBinaryOp contained /-\(-\|=\)\?/ nextgroup=@typescriptValue skipwhite skipempty
                            " 3: -, --, -=
                            
                            " exponentiation operator
                            " 2: **, **=
   11              0.000037 syntax match typescriptBinaryOp contained /\*\*=\?/ nextgroup=@typescriptValue
                            
   11              0.000077 syntax cluster typescriptSymbols               contains=typescriptBinaryOp,typescriptKeywordOp,typescriptTernary,typescriptAssign,typescriptCastKeyword
                            
                            " runtime syntax/basic/reserved.vim
                            "Import
   11              0.000086 syntax keyword typescriptImport                from as
   11              0.000067 syntax keyword typescriptImport                import
                              \ nextgroup=typescriptImportType
                              \ skipwhite
   11              0.000032 syntax keyword typescriptImportType            type
                              \ contained
   11              0.000050 syntax keyword typescriptExport                export
                              \ nextgroup=typescriptExportType
                              \ skipwhite
   11              0.000056 syntax match typescriptExportType              /\<type\s*{\@=/
                              \ contained skipwhite skipempty skipnl
   11              0.000030 syntax keyword typescriptModule                namespace module
                            
                            "this
                            
                            "JavaScript Prototype
   11              0.000043 syntax keyword typescriptPrototype             prototype
                              \ nextgroup=@afterIdentifier
                            
   11              0.000052 syntax keyword typescriptCastKeyword           as
                              \ nextgroup=@typescriptType
                              \ skipwhite
                            
                            "Program Keywords
   11              0.000050 syntax keyword typescriptIdentifier            arguments this super
                              \ nextgroup=@afterIdentifier
                            
   11              0.000065 syntax keyword typescriptVariable              let var
                              \ nextgroup=@typescriptVariableDeclarations
                              \ skipwhite skipempty
                            
   11              0.000070 syntax keyword typescriptVariable const
                              \ nextgroup=typescriptEnum,@typescriptVariableDeclarations
                              \ skipwhite skipempty
                            
   11              0.000089 syntax region typescriptEnum matchgroup=typescriptEnumKeyword start=/enum / end=/\ze{/
                              \ nextgroup=typescriptBlock
                              \ skipwhite
                            
   11              0.000048 syntax keyword typescriptKeywordOp
                              \ contained in instanceof nextgroup=@typescriptValue
   11              0.000070 syntax keyword typescriptOperator              delete new typeof void
                              \ nextgroup=@typescriptValue
                              \ skipwhite skipempty
                            
   11              0.000027 syntax keyword typescriptForOperator           contained in of
   11              0.000129 syntax keyword typescriptBoolean               true false nextgroup=@typescriptSymbols skipwhite skipempty
   11              0.000055 syntax keyword typescriptNull                  null undefined nextgroup=@typescriptSymbols skipwhite skipempty
   11              0.000066 syntax keyword typescriptMessage               alert confirm prompt status
                              \ nextgroup=typescriptDotNotation,typescriptFuncCallArg
   11              0.000046 syntax keyword typescriptGlobal                self top parent
                              \ nextgroup=@afterIdentifier
                            
                            "Statement Keywords
   11              0.000065 syntax keyword typescriptConditional           if else switch
                              \ nextgroup=typescriptConditionalParen
                              \ skipwhite skipempty skipnl
   11              0.000033 syntax keyword typescriptConditionalElse       else
   11              0.000121 syntax keyword typescriptRepeat                do while for nextgroup=typescriptLoopParen skipwhite skipempty
   11              0.000160 syntax keyword typescriptRepeat                for nextgroup=typescriptLoopParen,typescriptAsyncFor skipwhite skipempty
   11              0.000051 syntax keyword typescriptBranch                break continue containedin=typescriptBlock
   11              0.000068 syntax keyword typescriptCase                  case nextgroup=@typescriptPrimitive skipwhite containedin=typescriptBlock
   11              0.000116 syntax keyword typescriptDefault               default containedin=typescriptBlock nextgroup=@typescriptValue,typescriptClassKeyword,typescriptInterfaceKeyword skipwhite oneline
   11              0.000046 syntax keyword typescriptStatementKeyword      with
   11              0.000066 syntax keyword typescriptStatementKeyword      yield skipwhite nextgroup=@typescriptValue containedin=typescriptBlock
   11              0.000048 syntax keyword typescriptStatementKeyword      return skipwhite contained nextgroup=@typescriptValue containedin=typescriptBlock
                            
   11              0.000038 syntax keyword typescriptTry                   try
   11              0.000057 syntax keyword typescriptExceptions            catch throw finally
   11              0.000041 syntax keyword typescriptDebugger              debugger
                            
   11              0.000039 syntax keyword typescriptAsyncFor              await nextgroup=typescriptLoopParen skipwhite skipempty contained
                            
   11              0.000156 syntax region  typescriptLoopParen             contained matchgroup=typescriptParens
                              \ start=/(/ end=/)/
                              \ contains=typescriptVariable,typescriptForOperator,typescriptEndColons,@typescriptValue,@typescriptComments
                              \ nextgroup=typescriptBlock
                              \ skipwhite skipempty
   11              0.000107 syntax region  typescriptConditionalParen             contained matchgroup=typescriptParens
                              \ start=/(/ end=/)/
                              \ contains=@typescriptValue,@typescriptComments
                              \ nextgroup=typescriptBlock
                              \ skipwhite skipempty
   11              0.000042 syntax match   typescriptEndColons             /[;,]/ contained
                            
   11              0.000052 syntax keyword typescriptAmbientDeclaration declare nextgroup=@typescriptAmbients
                              \ skipwhite skipempty
                            
   11              0.000127 syntax cluster typescriptAmbients contains=
                              \ typescriptVariable,
                              \ typescriptFuncKeyword,
                              \ typescriptClassKeyword,
                              \ typescriptAbstract,
                              \ typescriptEnumKeyword,typescriptEnum,
                              \ typescriptModule
                            
                            "Syntax coloring for Node.js shebang line
   11              0.000052 syntax match   shellbang "^#!.*node\>"
   11              0.000037 syntax match   shellbang "^#!.*iojs\>"
                            
                            
                            "JavaScript comments
   11              0.000037 syntax keyword typescriptCommentTodo TODO FIXME XXX TBD
   11              0.000073 syntax match typescriptMagicComment "@ts-\%(ignore\|expect-error\)\>"
   11              0.000094 syntax match   typescriptLineComment "//.*"
                              \ contains=@Spell,typescriptCommentTodo,typescriptRef,typescriptMagicComment
   11              0.000092 syntax region  typescriptComment
                              \ start="/\*"  end="\*/"
                              \ contains=@Spell,typescriptCommentTodo extend
   11              0.000065 syntax cluster typescriptComments
                              \ contains=typescriptDocComment,typescriptComment,typescriptLineComment
                            
   11              0.000089 syntax match   typescriptRef  +///\s*<reference\s\+.*\/>$+
                              \ contains=typescriptString
   11              0.000081 syntax match   typescriptRef  +///\s*<amd-dependency\s\+.*\/>$+
                              \ contains=typescriptString
   11              0.000089 syntax match   typescriptRef  +///\s*<amd-module\s\+.*\/>$+
                              \ contains=typescriptString
                            
                            "JSDoc
   11              0.000020 syntax case ignore
                            
   11              0.000113 syntax region  typescriptDocComment            matchgroup=typescriptComment
                              \ start="/\*\*"  end="\*/"
                              \ contains=typescriptDocNotation,typescriptCommentTodo,@Spell
                              \ fold keepend
   11              0.000034 syntax match   typescriptDocNotation           contained /@/ nextgroup=typescriptDocTags
                            
   11              0.000136 syntax keyword typescriptDocTags               contained constant constructor constructs function ignore inner private public readonly static
   11              0.000068 syntax keyword typescriptDocTags               contained const dict expose inheritDoc interface nosideeffects override protected struct internal
   11              0.000028 syntax keyword typescriptDocTags               contained example global
   11              0.000045 syntax keyword typescriptDocTags               contained alpha beta defaultValue eventProperty experimental label
   11              0.000037 syntax keyword typescriptDocTags               contained packageDocumentation privateRemarks remarks sealed typeParam
                            
                            " syntax keyword typescriptDocTags               contained ngdoc nextgroup=typescriptDocNGDirective
   11              0.000034 syntax keyword typescriptDocTags               contained ngdoc scope priority animations
   11              0.000063 syntax keyword typescriptDocTags               contained ngdoc restrict methodOf propertyOf eventOf eventType nextgroup=typescriptDocParam skipwhite
   11              0.000127 syntax keyword typescriptDocNGDirective        contained overview service object function method property event directive filter inputType error
                            
   11              0.000027 syntax keyword typescriptDocTags               contained abstract virtual access augments
                            
   11              0.000177 syntax keyword typescriptDocTags               contained arguments callback lends memberOf name type kind link mixes mixin tutorial nextgroup=typescriptDocParam skipwhite
   11              0.000037 syntax keyword typescriptDocTags               contained variation nextgroup=typescriptDocNumParam skipwhite
                            
   11              0.000064 syntax keyword typescriptDocTags               contained author class classdesc copyright default defaultvalue nextgroup=typescriptDocDesc skipwhite
   11              0.000052 syntax keyword typescriptDocTags               contained deprecated description external host nextgroup=typescriptDocDesc skipwhite
   11              0.000065 syntax keyword typescriptDocTags               contained file fileOverview overview namespace requires since version nextgroup=typescriptDocDesc skipwhite
   11              0.000041 syntax keyword typescriptDocTags               contained summary todo license preserve nextgroup=typescriptDocDesc skipwhite
                            
   11              0.000065 syntax keyword typescriptDocTags               contained borrows exports nextgroup=typescriptDocA skipwhite
   11              0.000074 syntax keyword typescriptDocTags               contained param arg argument property prop module nextgroup=typescriptDocNamedParamType,typescriptDocParamName skipwhite
   11              0.000061 syntax keyword typescriptDocTags               contained define enum extends implements this typedef nextgroup=typescriptDocParamType skipwhite
   11              0.000059 syntax keyword typescriptDocTags               contained return returns throws exception nextgroup=typescriptDocParamType,typescriptDocParamName skipwhite
   11              0.000109 syntax keyword typescriptDocTags               contained see nextgroup=typescriptDocRef skipwhite
                            
   11              0.000094 syntax keyword typescriptDocTags               contained function func method nextgroup=typescriptDocName skipwhite
   11              0.000037 syntax match   typescriptDocName               contained /\h\w*/
                            
   11              0.000039 syntax keyword typescriptDocTags               contained fires event nextgroup=typescriptDocEventRef skipwhite
   11              0.000068 syntax match   typescriptDocEventRef           contained /\h\w*#\(\h\w*\:\)\?\h\w*/
                            
   11              0.000048 syntax match   typescriptDocNamedParamType     contained /{.\+}/ nextgroup=typescriptDocParamName skipwhite
   11              0.000078 syntax match   typescriptDocParamName          contained /\[\?0-9a-zA-Z_\.]\+\]\?/ nextgroup=typescriptDocDesc skipwhite
   11              0.000043 syntax match   typescriptDocParamType          contained /{.\+}/ nextgroup=typescriptDocDesc skipwhite
   11              0.000068 syntax match   typescriptDocA                  contained /\%(#\|\w\|\.\|:\|\/\)\+/ nextgroup=typescriptDocAs skipwhite
   11              0.000046 syntax match   typescriptDocAs                 contained /\s*as\s*/ nextgroup=typescriptDocB skipwhite
   11              0.000090 syntax match   typescriptDocB                  contained /\%(#\|\w\|\.\|:\|\/\)\+/
   11              0.000058 syntax match   typescriptDocParam              contained /\%(#\|\w\|\.\|:\|\/\|-\)\+/
   11              0.000040 syntax match   typescriptDocNumParam           contained /\d\+/
   11              0.000108 syntax match   typescriptDocRef                contained /\%(#\|\w\|\.\|:\|\/\)\+/
   11              0.000065 syntax region  typescriptDocLinkTag            contained matchgroup=typescriptDocLinkTag start=/{/ end=/}/ contains=typescriptDocTags
                            
   11              0.000066 syntax cluster typescriptDocs                  contains=typescriptDocParamType,typescriptDocNamedParamType,typescriptDocParam
                            
   11              0.000084 if exists("main_syntax") && main_syntax == "typescript"
    4              0.000039   syntax sync clear
    4              0.000010   syntax sync ccomment typescriptComment minlines=200
   11              0.000011 endif
                            
   11              0.000016 syntax case match
                            
                            " Types
   11              0.000028 syntax match typescriptOptionalMark /?/ contained
                            
   11              0.000077 syntax cluster typescriptTypeParameterCluster contains=
                              \ typescriptTypeParameter,
                              \ typescriptGenericDefault
                            
   11              0.000082 syntax region typescriptTypeParameters matchgroup=typescriptTypeBrackets
                              \ start=/</ end=/>/
                              \ contains=@typescriptTypeParameterCluster
                              \ contained
                            
   11              0.000050 syntax match typescriptTypeParameter /\K\k*/
                              \ nextgroup=typescriptConstraint
                              \ contained skipwhite skipnl
                            
   11              0.000049 syntax keyword typescriptConstraint extends
                              \ nextgroup=@typescriptType
                              \ contained skipwhite skipnl
                            
   11              0.000044 syntax match typescriptGenericDefault /=/
                              \ nextgroup=@typescriptType
                              \ contained skipwhite
                            
                            "><
                            " class A extend B<T> {} // ClassBlock
                            " func<T>() // FuncCallArg
   11              0.000117 syntax region typescriptTypeArguments matchgroup=typescriptTypeBrackets
                              \ start=/\></ end=/>/
                              \ contains=@typescriptType
                              \ nextgroup=typescriptFuncCallArg,@typescriptTypeOperator
                              \ contained skipwhite
                            
                            
   11              0.000101 syntax cluster typescriptType contains=
                              \ @typescriptPrimaryType,
                              \ typescriptUnion,
                              \ @typescriptFunctionType,
                              \ typescriptConstructorType
                            
                            " array type: A[]
                            " type indexing A['key']
   11              0.000096 syntax region typescriptTypeBracket contained
                              \ start=/\[/ end=/\]/
                              \ contains=typescriptString,typescriptNumber
                              \ nextgroup=@typescriptTypeOperator
                              \ skipwhite skipempty
                            
   11              0.000200 syntax cluster typescriptPrimaryType contains=
                              \ typescriptParenthesizedType,
                              \ typescriptPredefinedType,
                              \ typescriptTypeReference,
                              \ typescriptObjectType,
                              \ typescriptTupleType,
                              \ typescriptTypeQuery,
                              \ typescriptStringLiteralType,
                              \ typescriptTemplateLiteralType,
                              \ typescriptReadonlyArrayKeyword,
                              \ typescriptAssertType
                            
   11              0.000134 syntax region  typescriptStringLiteralType contained
                              \ start=/\z(["']\)/  skip=/\\\\\|\\\z1\|\\\n/  end=/\z1\|$/
                              \ nextgroup=typescriptUnion
                              \ skipwhite skipempty
                            
   11              0.000174 syntax region  typescriptTemplateLiteralType contained
                              \ start=/`/  skip=/\\\\\|\\`\|\n/  end=/`\|$/
                              \ contains=typescriptTemplateSubstitutionType
                              \ nextgroup=typescriptTypeOperator
                              \ skipwhite skipempty
                            
   11              0.000117 syntax region  typescriptTemplateSubstitutionType matchgroup=typescriptTemplateSB
                              \ start=/\${/ end=/}/
                              \ contains=@typescriptType
                              \ contained
                            
   11              0.000100 syntax region typescriptParenthesizedType matchgroup=typescriptParens
                              \ start=/(/ end=/)/
                              \ contains=@typescriptType
                              \ nextgroup=@typescriptTypeOperator
                              \ contained skipwhite skipempty fold
                            
   11              0.000087 syntax match typescriptTypeReference /\K\k*\(\.\K\k*\)*/
                              \ nextgroup=typescriptTypeArguments,@typescriptTypeOperator,typescriptUserDefinedType
                              \ skipwhite contained skipempty
                            
   11              0.000086 syntax keyword typescriptPredefinedType any number boolean string void never undefined null object unknown
                              \ nextgroup=@typescriptTypeOperator
                              \ contained skipwhite skipempty
                            
   11              0.000066 syntax match typescriptPredefinedType /unique symbol/
                              \ nextgroup=@typescriptTypeOperator
                              \ contained skipwhite skipempty
                            
   11              0.000164 syntax region typescriptObjectType matchgroup=typescriptBraces
                              \ start=/{/ end=/}/
                              \ contains=@typescriptTypeMember,typescriptEndColons,@typescriptComments,typescriptAccessibilityModifier,typescriptReadonlyModifier
                              \ nextgroup=@typescriptTypeOperator
                              \ contained skipwhite skipnl fold
                            
   11              0.000099 syntax cluster typescriptTypeMember contains=
                              \ @typescriptCallSignature,
                              \ typescriptConstructSignature,
                              \ typescriptIndexSignature,
                              \ @typescriptMembers
                            
   11              0.000036 syntax match typescriptTupleLable /\K\k*?\?:/
                                \ contained
                            
   11              0.000118 syntax region typescriptTupleType matchgroup=typescriptBraces
                              \ start=/\[/ end=/\]/
                              \ contains=@typescriptType,@typescriptComments,typescriptRestOrSpread,typescriptTupleLable
                              \ contained skipwhite
                            
   11              0.000074 syntax cluster typescriptTypeOperator
                              \ contains=typescriptUnion,typescriptTypeBracket,typescriptConstraint,typescriptConditionalType
                            
   11              0.000043 syntax match typescriptUnion /|\|&/ contained nextgroup=@typescriptPrimaryType skipwhite skipempty
                            
   11              0.000056 syntax match typescriptConditionalType /?\|:/ contained nextgroup=@typescriptPrimaryType skipwhite skipempty
                            
   11              0.000050 syntax cluster typescriptFunctionType contains=typescriptGenericFunc,typescriptFuncType
   11              0.000104 syntax region typescriptGenericFunc matchgroup=typescriptTypeBrackets
                              \ start=/</ end=/>/
                              \ contains=typescriptTypeParameter
                              \ nextgroup=typescriptFuncType
                              \ containedin=typescriptFunctionType
                              \ contained skipwhite skipnl
                            
   11              0.000129 syntax region typescriptFuncType matchgroup=typescriptParens
                              \ start=/(/ end=/)\s*=>/me=e-2
                              \ contains=@typescriptParameterList
                              \ nextgroup=typescriptFuncTypeArrow
                              \ contained skipwhite skipnl oneline
                            
   11              0.000065 syntax match typescriptFuncTypeArrow /=>/
                              \ nextgroup=@typescriptType
                              \ containedin=typescriptFuncType
                              \ contained skipwhite skipnl
                            
                            
   11              0.000047 syntax keyword typescriptConstructorType new
                              \ nextgroup=@typescriptFunctionType
                              \ contained skipwhite skipnl
                            
   11              0.000043 syntax keyword typescriptUserDefinedType is
                              \ contained nextgroup=@typescriptType skipwhite skipempty
                            
   11              0.000046 syntax keyword typescriptTypeQuery typeof keyof
                              \ nextgroup=typescriptTypeReference
                              \ contained skipwhite skipnl
                            
   11              0.000040 syntax keyword typescriptAssertType asserts
                              \ nextgroup=typescriptTypeReference
                              \ contained skipwhite skipnl
                            
   11              0.000049 syntax cluster typescriptCallSignature contains=typescriptGenericCall,typescriptCall
   11              0.000086 syntax region typescriptGenericCall matchgroup=typescriptTypeBrackets
                              \ start=/</ end=/>/
                              \ contains=typescriptTypeParameter
                              \ nextgroup=typescriptCall
                              \ contained skipwhite skipnl
   11              0.000126 syntax region typescriptCall matchgroup=typescriptParens
                              \ start=/(/ end=/)/
                              \ contains=typescriptDecorator,@typescriptParameterList,@typescriptComments
                              \ nextgroup=typescriptTypeAnnotation,typescriptBlock
                              \ contained skipwhite skipnl
                            
   11              0.000045 syntax match typescriptTypeAnnotation /:/
                              \ nextgroup=@typescriptType
                              \ contained skipwhite skipnl
                            
   11              0.000121 syntax cluster typescriptParameterList contains=
                              \ typescriptTypeAnnotation,
                              \ typescriptAccessibilityModifier,
                              \ typescriptReadonlyModifier,
                              \ typescriptOptionalMark,
                              \ typescriptRestOrSpread,
                              \ typescriptFuncComma,
                              \ typescriptDefaultParam
                            
   11              0.000022 syntax match typescriptFuncComma /,/ contained
                            
   11              0.000046 syntax match typescriptDefaultParam /=/
                              \ nextgroup=@typescriptValue
                              \ contained skipwhite
                            
   11              0.000042 syntax keyword typescriptConstructSignature new
                              \ nextgroup=@typescriptCallSignature
                              \ contained skipwhite
                            
   11              0.000117 syntax region typescriptIndexSignature matchgroup=typescriptBraces
                              \ start=/\[/ end=/\]/
                              \ contains=typescriptPredefinedType,typescriptMappedIn,typescriptString
                              \ nextgroup=typescriptTypeAnnotation
                              \ contained skipwhite oneline
                            
   11              0.000051 syntax keyword typescriptMappedIn in
                              \ nextgroup=@typescriptType
                              \ contained skipwhite skipnl skipempty
                            
   11              0.000074 syntax keyword typescriptAliasKeyword type
                              \ nextgroup=typescriptAliasDeclaration
                              \ skipwhite skipnl skipempty
                            
   11              0.000149 syntax region typescriptAliasDeclaration matchgroup=typescriptUnion
                              \ start=/ / end=/=/
                              \ nextgroup=@typescriptType
                              \ contains=typescriptConstraint,typescriptTypeParameters
                              \ contained skipwhite skipempty
                            
   11              0.000056 syntax keyword typescriptReadonlyArrayKeyword readonly
                              \ nextgroup=@typescriptPrimaryType
                              \ skipwhite
                            
                            
                            " extension
   11              0.000079 if get(g:, 'yats_host_keyword', 1)
   11              0.000056   syntax keyword typescriptGlobal containedin=typescriptIdentifierName Function Boolean
                              " use of nextgroup Suggested by Doug Kearns
   11              0.000062   syntax keyword typescriptGlobal containedin=typescriptIdentifierName Error EvalError nextgroup=typescriptFuncCallArg
   11              0.000042   syntax keyword typescriptGlobal containedin=typescriptIdentifierName InternalError
   11              0.000044   syntax keyword typescriptGlobal containedin=typescriptIdentifierName RangeError ReferenceError
   11              0.000040   syntax keyword typescriptGlobal containedin=typescriptIdentifierName StopIteration
   11              0.000043   syntax keyword typescriptGlobal containedin=typescriptIdentifierName SyntaxError TypeError
   11              0.000112   syntax keyword typescriptGlobal containedin=typescriptIdentifierName URIError Date
   11              0.000208   syntax keyword typescriptGlobal containedin=typescriptIdentifierName Float32Array
   11              0.000041   syntax keyword typescriptGlobal containedin=typescriptIdentifierName Float64Array
   11              0.000042   syntax keyword typescriptGlobal containedin=typescriptIdentifierName Int16Array Int32Array
   11              0.000042   syntax keyword typescriptGlobal containedin=typescriptIdentifierName Int8Array Uint16Array
   11              0.000043   syntax keyword typescriptGlobal containedin=typescriptIdentifierName Uint32Array Uint8Array
   11              0.000039   syntax keyword typescriptGlobal containedin=typescriptIdentifierName Uint8ClampedArray
   11              0.000038   syntax keyword typescriptGlobal containedin=typescriptIdentifierName ParallelArray
   11              0.000042   syntax keyword typescriptGlobal containedin=typescriptIdentifierName ArrayBuffer DataView
   11              0.000041   syntax keyword typescriptGlobal containedin=typescriptIdentifierName Iterator Generator
   11              0.000039   syntax keyword typescriptGlobal containedin=typescriptIdentifierName Reflect Proxy
   11              0.000038   syntax keyword typescriptGlobal containedin=typescriptIdentifierName arguments
   11              0.000035   hi def link typescriptGlobal Structure
   11              0.000068   syntax keyword typescriptGlobalMethod containedin=typescriptIdentifierName eval uneval nextgroup=typescriptFuncCallArg
   11              0.000060   syntax keyword typescriptGlobalMethod containedin=typescriptIdentifierName isFinite nextgroup=typescriptFuncCallArg
   11              0.000056   syntax keyword typescriptGlobalMethod containedin=typescriptIdentifierName isNaN parseFloat nextgroup=typescriptFuncCallArg
   11              0.000059   syntax keyword typescriptGlobalMethod containedin=typescriptIdentifierName parseInt nextgroup=typescriptFuncCallArg
   11              0.000059   syntax keyword typescriptGlobalMethod containedin=typescriptIdentifierName decodeURI nextgroup=typescriptFuncCallArg
   11              0.000051   syntax keyword typescriptGlobalMethod containedin=typescriptIdentifierName decodeURIComponent nextgroup=typescriptFuncCallArg
   11              0.000051   syntax keyword typescriptGlobalMethod containedin=typescriptIdentifierName encodeURI nextgroup=typescriptFuncCallArg
   11              0.000047   syntax keyword typescriptGlobalMethod containedin=typescriptIdentifierName encodeURIComponent nextgroup=typescriptFuncCallArg
   11              0.000036   syntax cluster props add=typescriptGlobalMethod
   11              0.000018   hi def link typescriptGlobalMethod Structure
                            
   11              0.000062   syntax keyword typescriptGlobal containedin=typescriptIdentifierName Number nextgroup=typescriptGlobalNumberDot,typescriptFuncCallArg
   11              0.000068   syntax match   typescriptGlobalNumberDot /\./ contained nextgroup=typescriptNumberStaticProp,typescriptNumberStaticMethod,typescriptProp
   11              0.000030   syntax keyword typescriptNumberStaticProp contained EPSILON MAX_SAFE_INTEGER MAX_VALUE
   11              0.000102   syntax keyword typescriptNumberStaticProp contained MIN_SAFE_INTEGER MIN_VALUE NEGATIVE_INFINITY
   11              0.000049   syntax keyword typescriptNumberStaticProp contained NaN POSITIVE_INFINITY
   11              0.000025   hi def link typescriptNumberStaticProp Keyword
   11              0.000046   syntax keyword typescriptNumberStaticMethod contained isFinite isInteger isNaN isSafeInteger nextgroup=typescriptFuncCallArg
   11              0.000042   syntax keyword typescriptNumberStaticMethod contained parseFloat parseInt nextgroup=typescriptFuncCallArg
   11              0.000020   hi def link typescriptNumberStaticMethod Keyword
   11              0.000041   syntax keyword typescriptNumberMethod contained toExponential toFixed toLocaleString nextgroup=typescriptFuncCallArg
   11              0.000049   syntax keyword typescriptNumberMethod contained toPrecision toSource toString valueOf nextgroup=typescriptFuncCallArg
   11              0.000036   syntax cluster props add=typescriptNumberMethod
   11              0.000013   hi def link typescriptNumberMethod Keyword
                            
   11              0.000076   syntax keyword typescriptGlobal containedin=typescriptIdentifierName String nextgroup=typescriptGlobalStringDot,typescriptFuncCallArg
   11              0.000059   syntax match   typescriptGlobalStringDot /\./ contained nextgroup=typescriptStringStaticMethod,typescriptProp
   11              0.000039   syntax keyword typescriptStringStaticMethod contained fromCharCode fromCodePoint raw nextgroup=typescriptFuncCallArg
   11              0.000019   hi def link typescriptStringStaticMethod Keyword
   11              0.000046   syntax keyword typescriptStringMethod contained anchor charAt charCodeAt codePointAt nextgroup=typescriptFuncCallArg
   11              0.000045   syntax keyword typescriptStringMethod contained concat endsWith includes indexOf lastIndexOf nextgroup=typescriptFuncCallArg
   11              0.000040   syntax keyword typescriptStringMethod contained link localeCompare match normalize nextgroup=typescriptFuncCallArg
   11              0.000105   syntax keyword typescriptStringMethod contained padStart padEnd repeat replace search nextgroup=typescriptFuncCallArg
   11              0.000046   syntax keyword typescriptStringMethod contained slice split startsWith substr substring nextgroup=typescriptFuncCallArg
   11              0.000036   syntax keyword typescriptStringMethod contained toLocaleLowerCase toLocaleUpperCase nextgroup=typescriptFuncCallArg
   11              0.000040   syntax keyword typescriptStringMethod contained toLowerCase toString toUpperCase trim nextgroup=typescriptFuncCallArg
   11              0.000026   syntax keyword typescriptStringMethod contained valueOf nextgroup=typescriptFuncCallArg
   11              0.000035   syntax cluster props add=typescriptStringMethod
   11              0.000015   hi def link typescriptStringMethod Keyword
                            
   11              0.000169   syntax keyword typescriptGlobal containedin=typescriptIdentifierName Array nextgroup=typescriptGlobalArrayDot,typescriptFuncCallArg
   11              0.000050   syntax match   typescriptGlobalArrayDot /\./ contained nextgroup=typescriptArrayStaticMethod,typescriptProp
   11              0.000036   syntax keyword typescriptArrayStaticMethod contained from isArray of nextgroup=typescriptFuncCallArg
   11              0.000019   hi def link typescriptArrayStaticMethod Keyword
   11              0.000048   syntax keyword typescriptArrayMethod contained concat copyWithin entries every fill nextgroup=typescriptFuncCallArg
   11              0.000046   syntax keyword typescriptArrayMethod contained filter find findIndex forEach indexOf nextgroup=typescriptFuncCallArg
   11              0.000042   syntax keyword typescriptArrayMethod contained includes join keys lastIndexOf map nextgroup=typescriptFuncCallArg
   11              0.000257   syntax keyword typescriptArrayMethod contained pop push reduce reduceRight reverse nextgroup=typescriptFuncCallArg
   11              0.000178   syntax keyword typescriptArrayMethod contained shift slice some sort splice toLocaleString nextgroup=typescriptFuncCallArg
   11              0.000059   syntax keyword typescriptArrayMethod contained toSource toString unshift nextgroup=typescriptFuncCallArg
   11              0.000035   syntax cluster props add=typescriptArrayMethod
   11              0.000014   hi def link typescriptArrayMethod Keyword
                            
   11              0.000086   syntax keyword typescriptGlobal containedin=typescriptIdentifierName Object nextgroup=typescriptGlobalObjectDot,typescriptFuncCallArg
   11              0.000047   syntax match   typescriptGlobalObjectDot /\./ contained nextgroup=typescriptObjectStaticMethod,typescriptProp
   11              0.000120   syntax keyword typescriptObjectStaticMethod contained create defineProperties defineProperty nextgroup=typescriptFuncCallArg
   11              0.000093   syntax keyword typescriptObjectStaticMethod contained entries freeze getOwnPropertyDescriptors nextgroup=typescriptFuncCallArg
   11              0.000084   syntax keyword typescriptObjectStaticMethod contained getOwnPropertyDescriptor getOwnPropertyNames nextgroup=typescriptFuncCallArg
   11              0.000080   syntax keyword typescriptObjectStaticMethod contained getOwnPropertySymbols getPrototypeOf nextgroup=typescriptFuncCallArg
   11              0.000106   syntax keyword typescriptObjectStaticMethod contained is isExtensible isFrozen isSealed nextgroup=typescriptFuncCallArg
   11              0.000091   syntax keyword typescriptObjectStaticMethod contained keys preventExtensions values nextgroup=typescriptFuncCallArg
   11              0.000021   hi def link typescriptObjectStaticMethod Keyword
   11              0.000061   syntax keyword typescriptObjectMethod contained getOwnPropertyDescriptors hasOwnProperty nextgroup=typescriptFuncCallArg
   11              0.000078   syntax keyword typescriptObjectMethod contained isPrototypeOf propertyIsEnumerable nextgroup=typescriptFuncCallArg
   11              0.000062   syntax keyword typescriptObjectMethod contained toLocaleString toString valueOf seal nextgroup=typescriptFuncCallArg
   11              0.000051   syntax keyword typescriptObjectMethod contained setPrototypeOf nextgroup=typescriptFuncCallArg
   11              0.000041   syntax cluster props add=typescriptObjectMethod
   11              0.000014   hi def link typescriptObjectMethod Keyword
                            
   11              0.000110   syntax keyword typescriptGlobal containedin=typescriptIdentifierName Symbol nextgroup=typescriptGlobalSymbolDot,typescriptFuncCallArg
   11              0.000060   syntax match   typescriptGlobalSymbolDot /\./ contained nextgroup=typescriptSymbolStaticProp,typescriptSymbolStaticMethod,typescriptProp
   11              0.000082   syntax keyword typescriptSymbolStaticProp contained length iterator match replace
   11              0.000058   syntax keyword typescriptSymbolStaticProp contained search split hasInstance isConcatSpreadable
   11              0.000027   syntax keyword typescriptSymbolStaticProp contained unscopables species toPrimitive
   11              0.000019   syntax keyword typescriptSymbolStaticProp contained toStringTag
   11              0.000087   hi def link typescriptSymbolStaticProp Keyword
   11              0.000038   syntax keyword typescriptSymbolStaticMethod contained for keyFor nextgroup=typescriptFuncCallArg
   11              0.000013   hi def link typescriptSymbolStaticMethod Keyword
                            
   11              0.000043   syntax keyword typescriptGlobal containedin=typescriptIdentifierName Function
   11              0.000036   syntax keyword typescriptFunctionMethod contained apply bind call nextgroup=typescriptFuncCallArg
   11              0.000036   syntax cluster props add=typescriptFunctionMethod
   11              0.000013   hi def link typescriptFunctionMethod Keyword
                            
   11              0.000061   syntax keyword typescriptGlobal containedin=typescriptIdentifierName Math nextgroup=typescriptGlobalMathDot,typescriptFuncCallArg
   11              0.000058   syntax match   typescriptGlobalMathDot /\./ contained nextgroup=typescriptMathStaticProp,typescriptMathStaticMethod,typescriptProp
   11              0.000034   syntax keyword typescriptMathStaticProp contained E LN10 LN2 LOG10E LOG2E PI SQRT1_2
   11              0.000017   syntax keyword typescriptMathStaticProp contained SQRT2
   11              0.000019   hi def link typescriptMathStaticProp Keyword
   11              0.000043   syntax keyword typescriptMathStaticMethod contained abs acos acosh asin asinh atan nextgroup=typescriptFuncCallArg
   11              0.000051   syntax keyword typescriptMathStaticMethod contained atan2 atanh cbrt ceil clz32 cos nextgroup=typescriptFuncCallArg
   11              0.000078   syntax keyword typescriptMathStaticMethod contained cosh exp expm1 floor fround hypot nextgroup=typescriptFuncCallArg
   11              0.000044   syntax keyword typescriptMathStaticMethod contained imul log log10 log1p log2 max nextgroup=typescriptFuncCallArg
   11              0.000044   syntax keyword typescriptMathStaticMethod contained min pow random round sign sin nextgroup=typescriptFuncCallArg
   11              0.000039   syntax keyword typescriptMathStaticMethod contained sinh sqrt tan tanh trunc nextgroup=typescriptFuncCallArg
   11              0.000014   hi def link typescriptMathStaticMethod Keyword
                            
   11              0.000062   syntax keyword typescriptGlobal containedin=typescriptIdentifierName Date nextgroup=typescriptGlobalDateDot,typescriptFuncCallArg
   11              0.000045   syntax match   typescriptGlobalDateDot /\./ contained nextgroup=typescriptDateStaticMethod,typescriptProp
   11              0.000032   syntax keyword typescriptDateStaticMethod contained UTC now parse nextgroup=typescriptFuncCallArg
   11              0.000019   hi def link typescriptDateStaticMethod Keyword
   11              0.000043   syntax keyword typescriptDateMethod contained getDate getDay getFullYear getHours nextgroup=typescriptFuncCallArg
   11              0.000039   syntax keyword typescriptDateMethod contained getMilliseconds getMinutes getMonth nextgroup=typescriptFuncCallArg
   11              0.000038   syntax keyword typescriptDateMethod contained getSeconds getTime getTimezoneOffset nextgroup=typescriptFuncCallArg
   11              0.000046   syntax keyword typescriptDateMethod contained getUTCDate getUTCDay getUTCFullYear nextgroup=typescriptFuncCallArg
   11              0.000038   syntax keyword typescriptDateMethod contained getUTCHours getUTCMilliseconds getUTCMinutes nextgroup=typescriptFuncCallArg
   11              0.000041   syntax keyword typescriptDateMethod contained getUTCMonth getUTCSeconds setDate setFullYear nextgroup=typescriptFuncCallArg
   11              0.000039   syntax keyword typescriptDateMethod contained setHours setMilliseconds setMinutes nextgroup=typescriptFuncCallArg
   11              0.000042   syntax keyword typescriptDateMethod contained setMonth setSeconds setTime setUTCDate nextgroup=typescriptFuncCallArg
   11              0.000039   syntax keyword typescriptDateMethod contained setUTCFullYear setUTCHours setUTCMilliseconds nextgroup=typescriptFuncCallArg
   11              0.000039   syntax keyword typescriptDateMethod contained setUTCMinutes setUTCMonth setUTCSeconds nextgroup=typescriptFuncCallArg
   11              0.000044   syntax keyword typescriptDateMethod contained toDateString toISOString toJSON toLocaleDateString nextgroup=typescriptFuncCallArg
   11              0.000041   syntax keyword typescriptDateMethod contained toLocaleFormat toLocaleString toLocaleTimeString nextgroup=typescriptFuncCallArg
   11              0.000041   syntax keyword typescriptDateMethod contained toSource toString toTimeString toUTCString nextgroup=typescriptFuncCallArg
   11              0.000027   syntax keyword typescriptDateMethod contained valueOf nextgroup=typescriptFuncCallArg
   11              0.000034   syntax cluster props add=typescriptDateMethod
   11              0.000013   hi def link typescriptDateMethod Keyword
                            
   11              0.000062   syntax keyword typescriptGlobal containedin=typescriptIdentifierName JSON nextgroup=typescriptGlobalJSONDot,typescriptFuncCallArg
   11              0.000103   syntax match   typescriptGlobalJSONDot /\./ contained nextgroup=typescriptJSONStaticMethod,typescriptProp
   11              0.000034   syntax keyword typescriptJSONStaticMethod contained parse stringify nextgroup=typescriptFuncCallArg
   11              0.000014   hi def link typescriptJSONStaticMethod Keyword
                            
   11              0.000062   syntax keyword typescriptGlobal containedin=typescriptIdentifierName RegExp nextgroup=typescriptGlobalRegExpDot,typescriptFuncCallArg
   11              0.000041   syntax match   typescriptGlobalRegExpDot /\./ contained nextgroup=typescriptRegExpStaticProp,typescriptProp
   11              0.000019   syntax keyword typescriptRegExpStaticProp contained lastIndex
   11              0.000017   hi def link typescriptRegExpStaticProp Keyword
   11              0.000031   syntax keyword typescriptRegExpProp contained global ignoreCase multiline source sticky
   11              0.000035   syntax cluster props add=typescriptRegExpProp
   11              0.000017   hi def link typescriptRegExpProp Keyword
   11              0.000042   syntax keyword typescriptRegExpMethod contained exec test nextgroup=typescriptFuncCallArg
   11              0.000034   syntax cluster props add=typescriptRegExpMethod
   11              0.000013   hi def link typescriptRegExpMethod Keyword
                            
   11              0.000044   syntax keyword typescriptGlobal containedin=typescriptIdentifierName Map WeakMap
   11              0.000019   syntax keyword typescriptES6MapProp contained size
   11              0.000034   syntax cluster props add=typescriptES6MapProp
   11              0.000018   hi def link typescriptES6MapProp Keyword
   11              0.000058   syntax keyword typescriptES6MapMethod contained clear delete entries forEach get has nextgroup=typescriptFuncCallArg
   11              0.000034   syntax keyword typescriptES6MapMethod contained keys set values nextgroup=typescriptFuncCallArg
   11              0.000035   syntax cluster props add=typescriptES6MapMethod
   11              0.000013   hi def link typescriptES6MapMethod Keyword
                            
   11              0.000042   syntax keyword typescriptGlobal containedin=typescriptIdentifierName Set WeakSet
   11              0.000042   syntax keyword typescriptES6SetProp contained size
   11              0.000050   syntax cluster props add=typescriptES6SetProp
   11              0.000034   hi def link typescriptES6SetProp Keyword
   11              0.000052   syntax keyword typescriptES6SetMethod contained add clear delete entries forEach has nextgroup=typescriptFuncCallArg
   11              0.000028   syntax keyword typescriptES6SetMethod contained values nextgroup=typescriptFuncCallArg
   11              0.000035   syntax cluster props add=typescriptES6SetMethod
   11              0.000013   hi def link typescriptES6SetMethod Keyword
                            
   11              0.000045   syntax keyword typescriptGlobal containedin=typescriptIdentifierName Proxy
   11              0.000030   syntax keyword typescriptProxyAPI contained getOwnPropertyDescriptor getOwnPropertyNames
   11              0.000031   syntax keyword typescriptProxyAPI contained defineProperty deleteProperty freeze seal
   11              0.000035   syntax keyword typescriptProxyAPI contained preventExtensions has hasOwn get set enumerate
   11              0.000027   syntax keyword typescriptProxyAPI contained iterate ownKeys apply construct
   11              0.000013   hi def link typescriptProxyAPI Keyword
                            
   11              0.000064   syntax keyword typescriptGlobal containedin=typescriptIdentifierName Promise nextgroup=typescriptGlobalPromiseDot,typescriptFuncCallArg
   11              0.000051   syntax match   typescriptGlobalPromiseDot /\./ contained nextgroup=typescriptPromiseStaticMethod,typescriptProp
   11              0.000047   syntax keyword typescriptPromiseStaticMethod contained resolve reject all race nextgroup=typescriptFuncCallArg
   11              0.000023   hi def link typescriptPromiseStaticMethod Keyword
   11              0.000040   syntax keyword typescriptPromiseMethod contained then catch finally nextgroup=typescriptFuncCallArg
   11              0.000038   syntax cluster props add=typescriptPromiseMethod
   11              0.000013   hi def link typescriptPromiseMethod Keyword
                            
   11              0.000043   syntax keyword typescriptGlobal containedin=typescriptIdentifierName Reflect
   11              0.000053   syntax keyword typescriptReflectMethod contained apply construct defineProperty deleteProperty nextgroup=typescriptFuncCallArg
   11              0.000041   syntax keyword typescriptReflectMethod contained enumerate get getOwnPropertyDescriptor nextgroup=typescriptFuncCallArg
   11              0.000043   syntax keyword typescriptReflectMethod contained getPrototypeOf has isExtensible ownKeys nextgroup=typescriptFuncCallArg
   11              0.000036   syntax keyword typescriptReflectMethod contained preventExtensions set setPrototypeOf nextgroup=typescriptFuncCallArg
   11              0.000035   syntax cluster props add=typescriptReflectMethod
   11              0.000013   hi def link typescriptReflectMethod Keyword
                            
   11              0.000042   syntax keyword typescriptGlobal containedin=typescriptIdentifierName Intl
   11              0.000041   syntax keyword typescriptIntlMethod contained Collator DateTimeFormat NumberFormat nextgroup=typescriptFuncCallArg
   11              0.000028   syntax keyword typescriptIntlMethod contained PluralRules nextgroup=typescriptFuncCallArg
   11              0.000034   syntax cluster props add=typescriptIntlMethod
   11              0.000013   hi def link typescriptIntlMethod Keyword
                            
   11              0.000052   syntax keyword typescriptNodeGlobal containedin=typescriptIdentifierName global process
   11              0.000046   syntax keyword typescriptNodeGlobal containedin=typescriptIdentifierName console Buffer
   11              0.000045   syntax keyword typescriptNodeGlobal containedin=typescriptIdentifierName module exports
   11              0.000042   syntax keyword typescriptNodeGlobal containedin=typescriptIdentifierName setTimeout
   11              0.000042   syntax keyword typescriptNodeGlobal containedin=typescriptIdentifierName clearTimeout
   11              0.000041   syntax keyword typescriptNodeGlobal containedin=typescriptIdentifierName setInterval
   11              0.000040   syntax keyword typescriptNodeGlobal containedin=typescriptIdentifierName clearInterval
   11              0.000015   hi def link typescriptNodeGlobal Structure
                            
   11              0.000042   syntax keyword typescriptTestGlobal containedin=typescriptIdentifierName describe
   11              0.000046   syntax keyword typescriptTestGlobal containedin=typescriptIdentifierName it test before
   11              0.000044   syntax keyword typescriptTestGlobal containedin=typescriptIdentifierName after beforeEach
   11              0.000040   syntax keyword typescriptTestGlobal containedin=typescriptIdentifierName afterEach
   11              0.000043   syntax keyword typescriptTestGlobal containedin=typescriptIdentifierName beforeAll
   11              0.000040   syntax keyword typescriptTestGlobal containedin=typescriptIdentifierName afterAll
   11              0.000044   syntax keyword typescriptTestGlobal containedin=typescriptIdentifierName expect assert
                            
   11              0.000043   syntax keyword typescriptBOM containedin=typescriptIdentifierName AbortController
   11              0.000045   syntax keyword typescriptBOM containedin=typescriptIdentifierName AbstractWorker AnalyserNode
   11              0.000046   syntax keyword typescriptBOM containedin=typescriptIdentifierName App Apps ArrayBuffer
   11              0.000040   syntax keyword typescriptBOM containedin=typescriptIdentifierName ArrayBufferView
   11              0.000042   syntax keyword typescriptBOM containedin=typescriptIdentifierName Attr AudioBuffer
   11              0.000042   syntax keyword typescriptBOM containedin=typescriptIdentifierName AudioBufferSourceNode
   11              0.000056   syntax keyword typescriptBOM containedin=typescriptIdentifierName AudioContext AudioDestinationNode
   11              0.000049   syntax keyword typescriptBOM containedin=typescriptIdentifierName AudioListener AudioNode
   11              0.000044   syntax keyword typescriptBOM containedin=typescriptIdentifierName AudioParam BatteryManager
   11              0.000041   syntax keyword typescriptBOM containedin=typescriptIdentifierName BiquadFilterNode
   11              0.000044   syntax keyword typescriptBOM containedin=typescriptIdentifierName BlobEvent BluetoothAdapter
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName BluetoothDevice
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName BluetoothManager
   11              0.000044   syntax keyword typescriptBOM containedin=typescriptIdentifierName CameraCapabilities
   11              0.000046   syntax keyword typescriptBOM containedin=typescriptIdentifierName CameraControl CameraManager
   11              0.000055   syntax keyword typescriptBOM containedin=typescriptIdentifierName CanvasGradient CanvasImageSource
   11              0.000048   syntax keyword typescriptBOM containedin=typescriptIdentifierName CanvasPattern CanvasRenderingContext2D
   11              0.000045   syntax keyword typescriptBOM containedin=typescriptIdentifierName CaretPosition CDATASection
   11              0.000041   syntax keyword typescriptBOM containedin=typescriptIdentifierName ChannelMergerNode
   11              0.000042   syntax keyword typescriptBOM containedin=typescriptIdentifierName ChannelSplitterNode
   11              0.000057   syntax keyword typescriptBOM containedin=typescriptIdentifierName CharacterData ChildNode
   11              0.000045   syntax keyword typescriptBOM containedin=typescriptIdentifierName ChromeWorker Comment
   11              0.000046   syntax keyword typescriptBOM containedin=typescriptIdentifierName Connection Console
   11              0.000048   syntax keyword typescriptBOM containedin=typescriptIdentifierName ContactManager Contacts
   11              0.000047   syntax keyword typescriptBOM containedin=typescriptIdentifierName ConvolverNode Coordinates
   11              0.000044   syntax keyword typescriptBOM containedin=typescriptIdentifierName CSS CSSConditionRule
   11              0.000041   syntax keyword typescriptBOM containedin=typescriptIdentifierName CSSGroupingRule
   11              0.000040   syntax keyword typescriptBOM containedin=typescriptIdentifierName CSSKeyframeRule
   11              0.000041   syntax keyword typescriptBOM containedin=typescriptIdentifierName CSSKeyframesRule
   11              0.000045   syntax keyword typescriptBOM containedin=typescriptIdentifierName CSSMediaRule CSSNamespaceRule
   11              0.000095   syntax keyword typescriptBOM containedin=typescriptIdentifierName CSSPageRule CSSRule
   11              0.000045   syntax keyword typescriptBOM containedin=typescriptIdentifierName CSSRuleList CSSStyleDeclaration
   11              0.000106   syntax keyword typescriptBOM containedin=typescriptIdentifierName CSSStyleRule CSSStyleSheet
   11              0.000069   syntax keyword typescriptBOM containedin=typescriptIdentifierName CSSSupportsRule
   11              0.000061   syntax keyword typescriptBOM containedin=typescriptIdentifierName DataTransfer DataView
   11              0.000063   syntax keyword typescriptBOM containedin=typescriptIdentifierName DedicatedWorkerGlobalScope
   11              0.000046   syntax keyword typescriptBOM containedin=typescriptIdentifierName DelayNode DeviceAcceleration
   11              0.000041   syntax keyword typescriptBOM containedin=typescriptIdentifierName DeviceRotationRate
   11              0.000148   syntax keyword typescriptBOM containedin=typescriptIdentifierName DeviceStorage DirectoryEntry
   11              0.000047   syntax keyword typescriptBOM containedin=typescriptIdentifierName DirectoryEntrySync
   11              0.000041   syntax keyword typescriptBOM containedin=typescriptIdentifierName DirectoryReader
   11              0.000042   syntax keyword typescriptBOM containedin=typescriptIdentifierName DirectoryReaderSync
   11              0.000046   syntax keyword typescriptBOM containedin=typescriptIdentifierName Document DocumentFragment
   11              0.000044   syntax keyword typescriptBOM containedin=typescriptIdentifierName DocumentTouch DocumentType
   11              0.000044   syntax keyword typescriptBOM containedin=typescriptIdentifierName DOMCursor DOMError
   11              0.000046   syntax keyword typescriptBOM containedin=typescriptIdentifierName DOMException DOMHighResTimeStamp
   11              0.000041   syntax keyword typescriptBOM containedin=typescriptIdentifierName DOMImplementation
   11              0.000042   syntax keyword typescriptBOM containedin=typescriptIdentifierName DOMImplementationRegistry
   11              0.000045   syntax keyword typescriptBOM containedin=typescriptIdentifierName DOMParser DOMRequest
   11              0.000043   syntax keyword typescriptBOM containedin=typescriptIdentifierName DOMString DOMStringList
   11              0.000044   syntax keyword typescriptBOM containedin=typescriptIdentifierName DOMStringMap DOMTimeStamp
   11              0.000045   syntax keyword typescriptBOM containedin=typescriptIdentifierName DOMTokenList DynamicsCompressorNode
   11              0.000048   syntax keyword typescriptBOM containedin=typescriptIdentifierName Element Entry EntrySync
   11              0.000045   syntax keyword typescriptBOM containedin=typescriptIdentifierName Extensions FileException
   11              0.000045   syntax keyword typescriptBOM containedin=typescriptIdentifierName Float32Array Float64Array
   11              0.000044   syntax keyword typescriptBOM containedin=typescriptIdentifierName FMRadio FormData
   11              0.000045   syntax keyword typescriptBOM containedin=typescriptIdentifierName GainNode Gamepad
   11              0.000045   syntax keyword typescriptBOM containedin=typescriptIdentifierName GamepadButton Geolocation
   11              0.000043   syntax keyword typescriptBOM containedin=typescriptIdentifierName History HTMLAnchorElement
   11              0.000050   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLAreaElement
   11              0.000040   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLAudioElement
   11              0.000041   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLBaseElement
   11              0.000111   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLBodyElement
   11              0.000135   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLBRElement HTMLButtonElement
   11              0.000052   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLCanvasElement
   11              0.000046   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLCollection HTMLDataElement
   11              0.000040   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLDataListElement
   11              0.000050   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLDivElement HTMLDListElement
   11              0.000042   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLDocument HTMLElement
   11              0.000038   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLEmbedElement
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLFieldSetElement
   11              0.000040   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLFormControlsCollection
   11              0.000038   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLFormElement
   11              0.000038   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLHeadElement
   11              0.000104   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLHeadingElement
   11              0.000043   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLHRElement HTMLHtmlElement
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLIFrameElement
   11              0.000038   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLImageElement
   11              0.000038   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLInputElement
   11              0.000038   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLKeygenElement
   11              0.000038   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLLabelElement
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLLegendElement
   11              0.000043   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLLIElement HTMLLinkElement
   11              0.000042   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLMapElement HTMLMediaElement
   11              0.000038   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLMetaElement
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLMeterElement
   11              0.000043   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLModElement HTMLObjectElement
   11              0.000038   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLOListElement
   11              0.000038   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLOptGroupElement
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLOptionElement
   11              0.000040   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLOptionsCollection
   11              0.000038   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLOutputElement
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLParagraphElement
   11              0.000048   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLParamElement
   11              0.000043   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLPreElement HTMLProgressElement
   11              0.000038   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLQuoteElement
   11              0.000038   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLScriptElement
   11              0.000037   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLSelectElement
   11              0.000037   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLSourceElement
   11              0.000037   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLSpanElement
   11              0.000038   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLStyleElement
   11              0.000043   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLTableCaptionElement
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLTableCellElement
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLTableColElement
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLTableDataCellElement
   11              0.000038   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLTableElement
   11              0.000040   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLTableHeaderCellElement
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLTableRowElement
   11              0.000040   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLTableSectionElement
   11              0.000038   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLTextAreaElement
   11              0.000038   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLTimeElement
   11              0.000038   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLTitleElement
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLTrackElement
   11              0.000037   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLUListElement
   11              0.000041   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLUnknownElement
   11              0.000037   syntax keyword typescriptBOM containedin=typescriptIdentifierName HTMLVideoElement
   11              0.000091   syntax keyword typescriptBOM containedin=typescriptIdentifierName IDBCursor IDBCursorSync
   11              0.000053   syntax keyword typescriptBOM containedin=typescriptIdentifierName IDBCursorWithValue
   11              0.000097   syntax keyword typescriptBOM containedin=typescriptIdentifierName IDBDatabase IDBDatabaseSync
   11              0.000046   syntax keyword typescriptBOM containedin=typescriptIdentifierName IDBEnvironment IDBEnvironmentSync
   11              0.000108   syntax keyword typescriptBOM containedin=typescriptIdentifierName IDBFactory IDBFactorySync
   11              0.000046   syntax keyword typescriptBOM containedin=typescriptIdentifierName IDBIndex IDBIndexSync
   11              0.000042   syntax keyword typescriptBOM containedin=typescriptIdentifierName IDBKeyRange IDBObjectStore
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName IDBObjectStoreSync
   11              0.000038   syntax keyword typescriptBOM containedin=typescriptIdentifierName IDBOpenDBRequest
   11              0.000052   syntax keyword typescriptBOM containedin=typescriptIdentifierName IDBRequest IDBTransaction
   11              0.000038   syntax keyword typescriptBOM containedin=typescriptIdentifierName IDBTransactionSync
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName IDBVersionChangeEvent
   11              0.000043   syntax keyword typescriptBOM containedin=typescriptIdentifierName ImageData IndexedDB
   11              0.000044   syntax keyword typescriptBOM containedin=typescriptIdentifierName Int16Array Int32Array
   11              0.000045   syntax keyword typescriptBOM containedin=typescriptIdentifierName Int8Array L10n LinkStyle
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName LocalFileSystem
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName LocalFileSystemSync
   11              0.000050   syntax keyword typescriptBOM containedin=typescriptIdentifierName Location LockedFile
   11              0.000044   syntax keyword typescriptBOM containedin=typescriptIdentifierName MediaQueryList MediaQueryListListener
   11              0.000042   syntax keyword typescriptBOM containedin=typescriptIdentifierName MediaRecorder MediaSource
   11              0.000042   syntax keyword typescriptBOM containedin=typescriptIdentifierName MediaStream MediaStreamTrack
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName MutationObserver
   11              0.000045   syntax keyword typescriptBOM containedin=typescriptIdentifierName Navigator NavigatorGeolocation
   11              0.000049   syntax keyword typescriptBOM containedin=typescriptIdentifierName NavigatorID NavigatorLanguage
   11              0.000038   syntax keyword typescriptBOM containedin=typescriptIdentifierName NavigatorOnLine
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName NavigatorPlugins
   11              0.000087   syntax keyword typescriptBOM containedin=typescriptIdentifierName Node NodeFilter
   11              0.000047   syntax keyword typescriptBOM containedin=typescriptIdentifierName NodeIterator NodeList
   11              0.000053   syntax keyword typescriptBOM containedin=typescriptIdentifierName Notification OfflineAudioContext
   11              0.000048   syntax keyword typescriptBOM containedin=typescriptIdentifierName OscillatorNode PannerNode
   11              0.000043   syntax keyword typescriptBOM containedin=typescriptIdentifierName ParentNode Performance
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName PerformanceNavigation
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName PerformanceTiming
   11              0.000042   syntax keyword typescriptBOM containedin=typescriptIdentifierName Permissions PermissionSettings
   11              0.000042   syntax keyword typescriptBOM containedin=typescriptIdentifierName Plugin PluginArray
   11              0.000041   syntax keyword typescriptBOM containedin=typescriptIdentifierName Position PositionError
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName PositionOptions
   11              0.000043   syntax keyword typescriptBOM containedin=typescriptIdentifierName PowerManager ProcessingInstruction
   11              0.000038   syntax keyword typescriptBOM containedin=typescriptIdentifierName PromiseResolver
   11              0.000041   syntax keyword typescriptBOM containedin=typescriptIdentifierName PushManager Range
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName RTCConfiguration
   11              0.000047   syntax keyword typescriptBOM containedin=typescriptIdentifierName RTCPeerConnection
   11              0.000041   syntax keyword typescriptBOM containedin=typescriptIdentifierName RTCPeerConnectionErrorCallback
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName RTCSessionDescription
   11              0.000041   syntax keyword typescriptBOM containedin=typescriptIdentifierName RTCSessionDescriptionCallback
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName ScriptProcessorNode
   11              0.000044   syntax keyword typescriptBOM containedin=typescriptIdentifierName Selection SettingsLock
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName SettingsManager
   11              0.000106   syntax keyword typescriptBOM containedin=typescriptIdentifierName SharedWorker StyleSheet
   11              0.000045   syntax keyword typescriptBOM containedin=typescriptIdentifierName StyleSheetList SVGAElement
   11              0.000044   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGAngle SVGAnimateColorElement
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGAnimatedAngle
   11              0.000042   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGAnimatedBoolean
   11              0.000040   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGAnimatedEnumeration
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGAnimatedInteger
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGAnimatedLength
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGAnimatedLengthList
   11              0.000038   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGAnimatedNumber
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGAnimatedNumberList
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGAnimatedPoints
   11              0.000041   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGAnimatedPreserveAspectRatio
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGAnimatedRect
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGAnimatedString
   11              0.000040   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGAnimatedTransformList
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGAnimateElement
   11              0.000040   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGAnimateMotionElement
   11              0.000040   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGAnimateTransformElement
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGAnimationElement
   11              0.000038   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGCircleElement
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGClipPathElement
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGCursorElement
   11              0.000044   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGDefsElement SVGDescElement
   11              0.000044   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGElement SVGEllipseElement
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGFilterElement
   11              0.000044   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGFontElement SVGFontFaceElement
   11              0.000042   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGFontFaceFormatElement
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGFontFaceNameElement
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGFontFaceSrcElement
   11              0.000040   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGFontFaceUriElement
   11              0.000041   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGForeignObjectElement
   11              0.000044   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGGElement SVGGlyphElement
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGGradientElement
   11              0.000038   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGHKernElement
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGImageElement
   11              0.000043   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGLength SVGLengthList
   11              0.000043   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGLinearGradientElement
   11              0.000044   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGLineElement SVGMaskElement
   11              0.000044   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGMatrix SVGMissingGlyphElement
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGMPathElement
   11              0.000042   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGNumber SVGNumberList
   11              0.000044   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGPathElement SVGPatternElement
   11              0.000042   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGPoint SVGPolygonElement
   11              0.000041   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGPolylineElement
   11              0.000119   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGPreserveAspectRatio
   11              0.000041   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGRadialGradientElement
   11              0.000044   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGRect SVGRectElement
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGScriptElement
   11              0.000044   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGSetElement SVGStopElement
   11              0.000042   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGStringList SVGStylable
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGStyleElement
   11              0.000043   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGSVGElement SVGSwitchElement
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGSymbolElement
   11              0.000043   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGTests SVGTextElement
   11              0.000041   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGTextPositioningElement
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGTitleElement
   11              0.000042   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGTransform SVGTransformable
   11              0.000039   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGTransformList
   11              0.000053   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGTRefElement SVGTSpanElement
   11              0.000043   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGUseElement SVGViewElement
   11              0.000038   syntax keyword typescriptBOM containedin=typescriptIdentifierName SVGVKernElement
   11              0.000048   syntax keyword typescriptBOM containedin=typescriptIdentifierName TCPServerSocket
   11              0.000044   syntax keyword typescriptBOM containedin=typescriptIdentifierName TCPSocket Telephony
   11              0.000090   syntax keyword typescriptBOM containedin=typescriptIdentifierName TelephonyCall Text
   11              0.000047   syntax keyword typescriptBOM containedin=typescriptIdentifierName TextDecoder TextEncoder
   11              0.000501   syntax keyword typescriptBOM containedin=typescriptIdentifierName TextMetrics TimeRanges
   11              0.000300   syntax keyword typescriptBOM containedin=typescriptIdentifierName Touch TouchList
   11              0.000365   syntax keyword typescriptBOM containedin=typescriptIdentifierName Transferable TreeWalker
   11              0.000055   syntax keyword typescriptBOM containedin=typescriptIdentifierName Uint16Array Uint32Array
   11              0.000066   syntax keyword typescriptBOM containedin=typescriptIdentifierName Uint8Array Uint8ClampedArray
   11              0.000158   syntax keyword typescriptBOM containedin=typescriptIdentifierName URLSearchParams
   11              0.000159   syntax keyword typescriptBOM containedin=typescriptIdentifierName URLUtilsReadOnly
   11              0.000147   syntax keyword typescriptBOM containedin=typescriptIdentifierName UserProximityEvent
   11              0.000370   syntax keyword typescriptBOM containedin=typescriptIdentifierName ValidityState VideoPlaybackQuality
   11              0.000336   syntax keyword typescriptBOM containedin=typescriptIdentifierName WaveShaperNode WebBluetooth
   11              0.000149   syntax keyword typescriptBOM containedin=typescriptIdentifierName WebGLRenderingContext
   11              0.000250   syntax keyword typescriptBOM containedin=typescriptIdentifierName WebSMS WebSocket
   11              0.000249   syntax keyword typescriptBOM containedin=typescriptIdentifierName WebVTT WifiManager
   11              0.000357   syntax keyword typescriptBOM containedin=typescriptIdentifierName Window Worker WorkerConsole
   11              0.000263   syntax keyword typescriptBOM containedin=typescriptIdentifierName WorkerLocation WorkerNavigator
   11              0.000250   syntax keyword typescriptBOM containedin=typescriptIdentifierName XDomainRequest XMLDocument
   11              0.000147   syntax keyword typescriptBOM containedin=typescriptIdentifierName XMLHttpRequestEventTarget
   11              0.000025   hi def link typescriptBOM Structure
                            
   11              0.000182   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName applicationCache
   11              0.000159   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName closed
   11              0.000155   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName Components
   11              0.000187   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName controllers
   11              0.000152   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName dialogArguments
   11              0.000151   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName document
   11              0.000254   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName frameElement
   11              0.000156   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName frames
   11              0.000153   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName fullScreen
   11              0.000153   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName history
   11              0.000152   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName innerHeight
   11              0.000152   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName innerWidth
   11              0.000043   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName length
   11              0.000151   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName location
   11              0.000153   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName locationbar
   11              0.000152   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName menubar
   11              0.000153   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName messageManager
   11              0.000348   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName name navigator
   11              0.000159   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName opener
   11              0.000157   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName outerHeight
   11              0.000162   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName outerWidth
   11              0.000155   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName pageXOffset
   11              0.000162   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName pageYOffset
   11              0.000043   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName parent
   11              0.000153   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName performance
   11              0.000156   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName personalbar
   11              0.000171   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName returnValue
   11              0.000161   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName screen
   11              0.000159   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName screenX
   11              0.000157   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName screenY
   11              0.000158   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName scrollbars
   11              0.000158   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName scrollMaxX
   11              0.000156   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName scrollMaxY
   11              0.000157   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName scrollX
   11              0.000157   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName scrollY
   11              0.000194   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName self sidebar
   11              0.000050   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName status
   11              0.000165   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName statusbar
   11              0.000156   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName toolbar
   11              0.000161   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName top visualViewport
   11              0.000154   syntax keyword typescriptBOMWindowProp containedin=typescriptIdentifierName window
   11              0.000073   syntax cluster props add=typescriptBOMWindowProp
   11              0.000029   hi def link typescriptBOMWindowProp Structure
   11              0.000600   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName alert nextgroup=typescriptFuncCallArg
   11              0.000209   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName atob nextgroup=typescriptFuncCallArg
   11              0.000178   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName blur nextgroup=typescriptFuncCallArg
   11              0.000173   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName btoa nextgroup=typescriptFuncCallArg
   11              0.000176   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName clearImmediate nextgroup=typescriptFuncCallArg
   11              0.000060   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName clearInterval nextgroup=typescriptFuncCallArg
   11              0.000058   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName clearTimeout nextgroup=typescriptFuncCallArg
   11              0.000269   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName close nextgroup=typescriptFuncCallArg
   11              0.000141   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName confirm nextgroup=typescriptFuncCallArg
   11              0.000186   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName dispatchEvent nextgroup=typescriptFuncCallArg
   11              0.000095   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName find nextgroup=typescriptFuncCallArg
   11              0.000181   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName focus nextgroup=typescriptFuncCallArg
   11              0.000180   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName getAttention nextgroup=typescriptFuncCallArg
   11              0.000184   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName getAttentionWithCycleCount nextgroup=typescriptFuncCallArg
   11              0.000177   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName getComputedStyle nextgroup=typescriptFuncCallArg
   11              0.000178   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName getDefaulComputedStyle nextgroup=typescriptFuncCallArg
   11              0.000176   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName getSelection nextgroup=typescriptFuncCallArg
   11              0.000185   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName matchMedia nextgroup=typescriptFuncCallArg
   11              0.000191   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName maximize nextgroup=typescriptFuncCallArg
   11              0.000245   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName moveBy nextgroup=typescriptFuncCallArg
   11              0.000202   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName moveTo nextgroup=typescriptFuncCallArg
   11              0.000177   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName open nextgroup=typescriptFuncCallArg
   11              0.000176   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName openDialog nextgroup=typescriptFuncCallArg
   11              0.000395   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName postMessage nextgroup=typescriptFuncCallArg
   11              0.000186   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName print nextgroup=typescriptFuncCallArg
   11              0.000056   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName prompt nextgroup=typescriptFuncCallArg
   11              0.000171   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName removeEventListener nextgroup=typescriptFuncCallArg
   11              0.000171   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName resizeBy nextgroup=typescriptFuncCallArg
   11              0.000180   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName resizeTo nextgroup=typescriptFuncCallArg
   11              0.000194   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName restore nextgroup=typescriptFuncCallArg
   11              0.000180   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName scroll nextgroup=typescriptFuncCallArg
   11              0.000174   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName scrollBy nextgroup=typescriptFuncCallArg
   11              0.000174   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName scrollByLines nextgroup=typescriptFuncCallArg
   11              0.000182   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName scrollByPages nextgroup=typescriptFuncCallArg
   11              0.000174   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName scrollTo nextgroup=typescriptFuncCallArg
   11              0.000176   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName setCursor nextgroup=typescriptFuncCallArg
   11              0.000177   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName setImmediate nextgroup=typescriptFuncCallArg
   11              0.000058   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName setInterval nextgroup=typescriptFuncCallArg
   11              0.000174   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName setResizable nextgroup=typescriptFuncCallArg
   11              0.000060   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName setTimeout nextgroup=typescriptFuncCallArg
   11              0.000323   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName showModalDialog nextgroup=typescriptFuncCallArg
   11              0.000202   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName sizeToContent nextgroup=typescriptFuncCallArg
   11              0.000313   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName stop nextgroup=typescriptFuncCallArg
   11              0.000203   syntax keyword typescriptBOMWindowMethod containedin=typescriptIdentifierName updateCommands nextgroup=typescriptFuncCallArg
   11              0.000053   syntax cluster props add=typescriptBOMWindowMethod
   11              0.000041   hi def link typescriptBOMWindowMethod Structure
   11              0.000582   syntax keyword typescriptBOMWindowEvent contained onabort onbeforeunload onblur onchange
   11              0.000556   syntax keyword typescriptBOMWindowEvent contained onclick onclose oncontextmenu ondevicelight
   11              0.000269   syntax keyword typescriptBOMWindowEvent contained ondevicemotion ondeviceorientation
   11              0.000381   syntax keyword typescriptBOMWindowEvent contained ondeviceproximity ondragdrop onerror
   11              0.000516   syntax keyword typescriptBOMWindowEvent contained onfocus onhashchange onkeydown onkeypress
   11              0.000493   syntax keyword typescriptBOMWindowEvent contained onkeyup onload onmousedown onmousemove
   11              0.000452   syntax keyword typescriptBOMWindowEvent contained onmouseout onmouseover onmouseup
   11              0.000385   syntax keyword typescriptBOMWindowEvent contained onmozbeforepaint onpaint onpopstate
   11              0.000510   syntax keyword typescriptBOMWindowEvent contained onreset onresize onscroll onselect
   11              0.000414   syntax keyword typescriptBOMWindowEvent contained onsubmit onunload onuserproximity
   11              0.000291   syntax keyword typescriptBOMWindowEvent contained onpageshow onpagehide
   11              0.000030   hi def link typescriptBOMWindowEvent Keyword
   11              0.000058   syntax keyword typescriptBOMWindowCons containedin=typescriptIdentifierName DOMParser
   11              0.000046   syntax keyword typescriptBOMWindowCons containedin=typescriptIdentifierName QueryInterface
   11              0.000041   syntax keyword typescriptBOMWindowCons containedin=typescriptIdentifierName XMLSerializer
   11              0.000018   hi def link typescriptBOMWindowCons Structure
                            
   11              0.000089   syntax keyword typescriptBOMNavigatorProp contained battery buildID connection cookieEnabled
   11              0.000034   syntax keyword typescriptBOMNavigatorProp contained doNotTrack maxTouchPoints oscpu
   11              0.000092   syntax keyword typescriptBOMNavigatorProp contained productSub push serviceWorker
   11              0.000037   syntax keyword typescriptBOMNavigatorProp contained vendor vendorSub
   11              0.000053   syntax cluster props add=typescriptBOMNavigatorProp
   11              0.000023   hi def link typescriptBOMNavigatorProp Keyword
   11              0.000055   syntax keyword typescriptBOMNavigatorMethod contained addIdleObserver geolocation nextgroup=typescriptFuncCallArg
   11              0.000053   syntax keyword typescriptBOMNavigatorMethod contained getDeviceStorage getDeviceStorages nextgroup=typescriptFuncCallArg
   11              0.000046   syntax keyword typescriptBOMNavigatorMethod contained getGamepads getUserMedia registerContentHandler nextgroup=typescriptFuncCallArg
   11              0.000075   syntax keyword typescriptBOMNavigatorMethod contained removeIdleObserver requestWakeLock nextgroup=typescriptFuncCallArg
   11              0.000045   syntax keyword typescriptBOMNavigatorMethod contained share vibrate watch registerProtocolHandler nextgroup=typescriptFuncCallArg
   11              0.000037   syntax keyword typescriptBOMNavigatorMethod contained sendBeacon nextgroup=typescriptFuncCallArg
   11              0.000045   syntax cluster props add=typescriptBOMNavigatorMethod
   11              0.000021   hi def link typescriptBOMNavigatorMethod Keyword
   11              0.000036   syntax keyword typescriptServiceWorkerMethod contained register nextgroup=typescriptFuncCallArg
   11              0.000042   syntax cluster props add=typescriptServiceWorkerMethod
   11              0.000015   hi def link typescriptServiceWorkerMethod Keyword
                            
   11              0.000039   syntax keyword typescriptBOMLocationProp contained href protocol host hostname port
   11              0.000032   syntax keyword typescriptBOMLocationProp contained pathname search hash username password
   11              0.000020   syntax keyword typescriptBOMLocationProp contained origin
   11              0.000040   syntax cluster props add=typescriptBOMLocationProp
   11              0.000020   hi def link typescriptBOMLocationProp Keyword
   11              0.000047   syntax keyword typescriptBOMLocationMethod contained assign reload replace toString nextgroup=typescriptFuncCallArg
   11              0.000040   syntax cluster props add=typescriptBOMLocationMethod
   11              0.000014   hi def link typescriptBOMLocationMethod Keyword
                            
   11              0.000036   syntax keyword typescriptBOMHistoryProp contained length current next previous state
   11              0.000021   syntax keyword typescriptBOMHistoryProp contained scrollRestoration
   11              0.000233   syntax cluster props add=typescriptBOMHistoryProp
   11              0.000024   hi def link typescriptBOMHistoryProp Keyword
   11              0.000050   syntax keyword typescriptBOMHistoryMethod contained back forward go pushState replaceState nextgroup=typescriptFuncCallArg
   11              0.000040   syntax cluster props add=typescriptBOMHistoryMethod
   11              0.000017   hi def link typescriptBOMHistoryMethod Keyword
                            
   11              0.000049   syntax keyword typescriptGlobal containedin=typescriptIdentifierName console
   11              0.000050   syntax keyword typescriptConsoleMethod contained count dir error group groupCollapsed nextgroup=typescriptFuncCallArg
   11              0.000049   syntax keyword typescriptConsoleMethod contained groupEnd info log time timeEnd trace nextgroup=typescriptFuncCallArg
   11              0.000028   syntax keyword typescriptConsoleMethod contained warn nextgroup=typescriptFuncCallArg
   11              0.000039   syntax cluster props add=typescriptConsoleMethod
   11              0.000014   hi def link typescriptConsoleMethod Keyword
                            
   11              0.000044   syntax keyword typescriptXHRGlobal containedin=typescriptIdentifierName XMLHttpRequest
   11              0.000018   hi def link typescriptXHRGlobal Structure
   11              0.000029   syntax keyword typescriptXHRProp contained onreadystatechange readyState response
   11              0.000030   syntax keyword typescriptXHRProp contained responseText responseType responseXML status
   11              0.000031   syntax keyword typescriptXHRProp contained statusText timeout ontimeout upload withCredentials
   11              0.000038   syntax cluster props add=typescriptXHRProp
   11              0.000019   hi def link typescriptXHRProp Keyword
   11              0.000043   syntax keyword typescriptXHRMethod contained abort getAllResponseHeaders getResponseHeader nextgroup=typescriptFuncCallArg
   11              0.000044   syntax keyword typescriptXHRMethod contained open overrideMimeType send setRequestHeader nextgroup=typescriptFuncCallArg
   11              0.000041   syntax cluster props add=typescriptXHRMethod
   11              0.000013   hi def link typescriptXHRMethod Keyword
                            
   11              0.000047   syntax keyword typescriptGlobal containedin=typescriptIdentifierName Blob BlobBuilder
   11              0.000047   syntax keyword typescriptGlobal containedin=typescriptIdentifierName File FileReader
   11              0.000045   syntax keyword typescriptGlobal containedin=typescriptIdentifierName FileReaderSync
   11              0.000067   syntax keyword typescriptGlobal containedin=typescriptIdentifierName URL nextgroup=typescriptGlobalURLDot,typescriptFuncCallArg
   11              0.000094   syntax match   typescriptGlobalURLDot /\./ contained nextgroup=typescriptURLStaticMethod,typescriptProp
   11              0.000045   syntax keyword typescriptGlobal containedin=typescriptIdentifierName URLUtils
   11              0.000038   syntax keyword typescriptFileMethod contained readAsArrayBuffer readAsBinaryString nextgroup=typescriptFuncCallArg
   11              0.000033   syntax keyword typescriptFileMethod contained readAsDataURL readAsText nextgroup=typescriptFuncCallArg
   11              0.000040   syntax cluster props add=typescriptFileMethod
   11              0.000018   hi def link typescriptFileMethod Keyword
   11              0.000027   syntax keyword typescriptFileReaderProp contained error readyState result
   11              0.000039   syntax cluster props add=typescriptFileReaderProp
   11              0.000020   hi def link typescriptFileReaderProp Keyword
   11              0.000043   syntax keyword typescriptFileReaderMethod contained abort readAsArrayBuffer readAsBinaryString nextgroup=typescriptFuncCallArg
   11              0.000034   syntax keyword typescriptFileReaderMethod contained readAsDataURL readAsText nextgroup=typescriptFuncCallArg
   11              0.000041   syntax cluster props add=typescriptFileReaderMethod
   11              0.000018   hi def link typescriptFileReaderMethod Keyword
   11              0.000031   syntax keyword typescriptFileListMethod contained item nextgroup=typescriptFuncCallArg
   11              0.000039   syntax cluster props add=typescriptFileListMethod
   11              0.000018   hi def link typescriptFileListMethod Keyword
   11              0.000038   syntax keyword typescriptBlobMethod contained append getBlob getFile nextgroup=typescriptFuncCallArg
   11              0.000040   syntax cluster props add=typescriptBlobMethod
   11              0.000017   hi def link typescriptBlobMethod Keyword
   11              0.000036   syntax keyword typescriptURLUtilsProp contained hash host hostname href origin password
   11              0.000031   syntax keyword typescriptURLUtilsProp contained pathname port protocol search searchParams
   11              0.000019   syntax keyword typescriptURLUtilsProp contained username
   11              0.000040   syntax cluster props add=typescriptURLUtilsProp
   11              0.000019   hi def link typescriptURLUtilsProp Keyword
   11              0.000035   syntax keyword typescriptURLStaticMethod contained createObjectURL revokeObjectURL nextgroup=typescriptFuncCallArg
   11              0.000014   hi def link typescriptURLStaticMethod Keyword
                            
   11              0.000045   syntax keyword typescriptCryptoGlobal containedin=typescriptIdentifierName crypto
   11              0.000082   hi def link typescriptCryptoGlobal Structure
   11              0.000052   syntax keyword typescriptSubtleCryptoMethod contained encrypt decrypt sign verify nextgroup=typescriptFuncCallArg
   11              0.000031   syntax keyword typescriptSubtleCryptoMethod contained digest nextgroup=typescriptFuncCallArg
   11              0.000044   syntax cluster props add=typescriptSubtleCryptoMethod
   11              0.000017   hi def link typescriptSubtleCryptoMethod Keyword
   11              0.000020   syntax keyword typescriptCryptoProp contained subtle
   11              0.000040   syntax cluster props add=typescriptCryptoProp
   11              0.000017   hi def link typescriptCryptoProp Keyword
   11              0.000030   syntax keyword typescriptCryptoMethod contained getRandomValues nextgroup=typescriptFuncCallArg
   11              0.000042   syntax cluster props add=typescriptCryptoMethod
   11              0.000013   hi def link typescriptCryptoMethod Keyword
                            
   11              0.000048   syntax keyword typescriptGlobal containedin=typescriptIdentifierName Headers Request
   11              0.000044   syntax keyword typescriptGlobal containedin=typescriptIdentifierName Response
   11              0.000053   syntax keyword typescriptGlobalMethod containedin=typescriptIdentifierName fetch nextgroup=typescriptFuncCallArg
   11              0.000050   syntax cluster props add=typescriptGlobalMethod
   11              0.000020   hi def link typescriptGlobalMethod Structure
   11              0.000049   syntax keyword typescriptHeadersMethod contained append delete get getAll has set nextgroup=typescriptFuncCallArg
   11              0.000042   syntax cluster props add=typescriptHeadersMethod
   11              0.000017   hi def link typescriptHeadersMethod Keyword
   11              0.000034   syntax keyword typescriptRequestProp contained method url headers context referrer
   11              0.000026   syntax keyword typescriptRequestProp contained mode credentials cache
   11              0.000043   syntax cluster props add=typescriptRequestProp
   11              0.000018   hi def link typescriptRequestProp Keyword
   11              0.000032   syntax keyword typescriptRequestMethod contained clone nextgroup=typescriptFuncCallArg
   11              0.000091   syntax cluster props add=typescriptRequestMethod
   11              0.000022   hi def link typescriptRequestMethod Keyword
   11              0.000039   syntax keyword typescriptResponseProp contained type url status statusText headers
   11              0.000021   syntax keyword typescriptResponseProp contained redirected
   11              0.000052   syntax cluster props add=typescriptResponseProp
   11              0.000018   hi def link typescriptResponseProp Keyword
   11              0.000031   syntax keyword typescriptResponseMethod contained clone nextgroup=typescriptFuncCallArg
   11              0.000044   syntax cluster props add=typescriptResponseMethod
   11              0.000015   hi def link typescriptResponseMethod Keyword
                            
   11              0.000025   syntax keyword typescriptServiceWorkerProp contained controller ready
   11              0.000045   syntax cluster props add=typescriptServiceWorkerProp
   11              0.000020   hi def link typescriptServiceWorkerProp Keyword
   11              0.000040   syntax keyword typescriptServiceWorkerMethod contained register getRegistration nextgroup=typescriptFuncCallArg
   11              0.000047   syntax cluster props add=typescriptServiceWorkerMethod
   11              0.000018   hi def link typescriptServiceWorkerMethod Keyword
   11              0.000049   syntax keyword typescriptGlobal containedin=typescriptIdentifierName Cache
   11              0.000050   syntax keyword typescriptCacheMethod contained match matchAll add addAll put delete nextgroup=typescriptFuncCallArg
   11              0.000030   syntax keyword typescriptCacheMethod contained keys nextgroup=typescriptFuncCallArg
   11              0.000044   syntax cluster props add=typescriptCacheMethod
   11              0.000013   hi def link typescriptCacheMethod Keyword
                            
   11              0.000059   syntax keyword typescriptEncodingGlobal containedin=typescriptIdentifierName TextEncoder
   11              0.000044   syntax keyword typescriptEncodingGlobal containedin=typescriptIdentifierName TextDecoder
   11              0.000019   hi def link typescriptEncodingGlobal Structure
   11              0.000026   syntax keyword typescriptEncodingProp contained encoding fatal ignoreBOM
   11              0.000044   syntax cluster props add=typescriptEncodingProp
   11              0.000018   hi def link typescriptEncodingProp Keyword
   11              0.000035   syntax keyword typescriptEncodingMethod contained encode decode nextgroup=typescriptFuncCallArg
   11              0.000044   syntax cluster props add=typescriptEncodingMethod
   11              0.000014   hi def link typescriptEncodingMethod Keyword
                            
   11              0.000050   syntax keyword typescriptGlobal containedin=typescriptIdentifierName Geolocation
   11              0.000040   syntax keyword typescriptGeolocationMethod contained getCurrentPosition watchPosition nextgroup=typescriptFuncCallArg
   11              0.000031   syntax keyword typescriptGeolocationMethod contained clearWatch nextgroup=typescriptFuncCallArg
   11              0.000046   syntax cluster props add=typescriptGeolocationMethod
   11              0.000050   hi def link typescriptGeolocationMethod Keyword
                            
   11              0.000118   syntax keyword typescriptGlobal containedin=typescriptIdentifierName NetworkInformation
   11              0.000030   syntax keyword typescriptBOMNetworkProp contained downlink downlinkMax effectiveType
   11              0.000022   syntax keyword typescriptBOMNetworkProp contained rtt type
   11              0.000047   syntax cluster props add=typescriptBOMNetworkProp
   11              0.000015   hi def link typescriptBOMNetworkProp Keyword
                            
   11              0.000047   syntax keyword typescriptGlobal containedin=typescriptIdentifierName PaymentRequest
   11              0.000041   syntax keyword typescriptPaymentMethod contained show abort canMakePayment nextgroup=typescriptFuncCallArg
   11              0.000046   syntax cluster props add=typescriptPaymentMethod
   11              0.000018   hi def link typescriptPaymentMethod Keyword
   11              0.000029   syntax keyword typescriptPaymentProp contained shippingAddress shippingOption result
   11              0.000045   syntax cluster props add=typescriptPaymentProp
   11              0.000018   hi def link typescriptPaymentProp Keyword
   11              0.000029   syntax keyword typescriptPaymentEvent contained onshippingaddresschange onshippingoptionchange
   11              0.000019   hi def link typescriptPaymentEvent Keyword
   11              0.000033   syntax keyword typescriptPaymentResponseMethod contained complete nextgroup=typescriptFuncCallArg
   11              0.000048   syntax cluster props add=typescriptPaymentResponseMethod
   11              0.000019   hi def link typescriptPaymentResponseMethod Keyword
   11              0.000029   syntax keyword typescriptPaymentResponseProp contained details methodName payerEmail
   11              0.000028   syntax keyword typescriptPaymentResponseProp contained payerPhone shippingAddress
   11              0.000130   syntax keyword typescriptPaymentResponseProp contained shippingOption
   11              0.000053   syntax cluster props add=typescriptPaymentResponseProp
   11              0.000022   hi def link typescriptPaymentResponseProp Keyword
   11              0.000034   syntax keyword typescriptPaymentAddressProp contained addressLine careOf city country
   11              0.000029   syntax keyword typescriptPaymentAddressProp contained country dependentLocality languageCode
   11              0.000045   syntax keyword typescriptPaymentAddressProp contained organization phone postalCode
   11              0.000026   syntax keyword typescriptPaymentAddressProp contained recipient region sortingCode
   11              0.000047   syntax cluster props add=typescriptPaymentAddressProp
   11              0.000019   hi def link typescriptPaymentAddressProp Keyword
   11              0.000029   syntax keyword typescriptPaymentShippingOptionProp contained id label amount selected
   11              0.000049   syntax cluster props add=typescriptPaymentShippingOptionProp
   11              0.000015   hi def link typescriptPaymentShippingOptionProp Keyword
                            
   11              0.000046   syntax keyword typescriptDOMNodeProp contained attributes baseURI baseURIObject childNodes
   11              0.000031   syntax keyword typescriptDOMNodeProp contained firstChild lastChild localName namespaceURI
   11              0.000029   syntax keyword typescriptDOMNodeProp contained nextSibling nodeName nodePrincipal
   11              0.000030   syntax keyword typescriptDOMNodeProp contained nodeType nodeValue ownerDocument parentElement
   11              0.000028   syntax keyword typescriptDOMNodeProp contained parentNode prefix previousSibling textContent
   11              0.000046   syntax cluster props add=typescriptDOMNodeProp
   11              0.000020   hi def link typescriptDOMNodeProp Keyword
   11              0.000046   syntax keyword typescriptDOMNodeMethod contained appendChild cloneNode compareDocumentPosition nextgroup=typescriptFuncCallArg
   11              0.000041   syntax keyword typescriptDOMNodeMethod contained getUserData hasAttributes hasChildNodes nextgroup=typescriptFuncCallArg
   11              0.000041   syntax keyword typescriptDOMNodeMethod contained insertBefore isDefaultNamespace isEqualNode nextgroup=typescriptFuncCallArg
   11              0.000039   syntax keyword typescriptDOMNodeMethod contained isSameNode isSupported lookupNamespaceURI nextgroup=typescriptFuncCallArg
   11              0.000040   syntax keyword typescriptDOMNodeMethod contained lookupPrefix normalize removeChild nextgroup=typescriptFuncCallArg
   11              0.000034   syntax keyword typescriptDOMNodeMethod contained replaceChild setUserData nextgroup=typescriptFuncCallArg
   11              0.000063   syntax match typescriptDOMNodeMethod contained /contains/
   11              0.000049   syntax cluster props add=typescriptDOMNodeMethod
   11              0.000018   hi def link typescriptDOMNodeMethod Keyword
   11              0.000030   syntax keyword typescriptDOMNodeType contained ELEMENT_NODE ATTRIBUTE_NODE TEXT_NODE
   11              0.000036   syntax keyword typescriptDOMNodeType contained CDATA_SECTION_NODEN_NODE ENTITY_REFERENCE_NODE
   11              0.000026   syntax keyword typescriptDOMNodeType contained ENTITY_NODE PROCESSING_INSTRUCTION_NODEN_NODE
   11              0.000029   syntax keyword typescriptDOMNodeType contained COMMENT_NODE DOCUMENT_NODE DOCUMENT_TYPE_NODE
   11              0.000023   syntax keyword typescriptDOMNodeType contained DOCUMENT_FRAGMENT_NODE NOTATION_NODE
   11              0.000013   hi def link typescriptDOMNodeType Keyword
                            
   11              0.000034   syntax keyword typescriptDOMElemAttrs contained accessKey clientHeight clientLeft
   11              0.000031   syntax keyword typescriptDOMElemAttrs contained clientTop clientWidth id innerHTML
   11              0.000033   syntax keyword typescriptDOMElemAttrs contained length onafterscriptexecute onbeforescriptexecute
   11              0.000032   syntax keyword typescriptDOMElemAttrs contained oncopy oncut onpaste onwheel scrollHeight
   11              0.000031   syntax keyword typescriptDOMElemAttrs contained scrollLeft scrollTop scrollWidth tagName
   11              0.000029   syntax keyword typescriptDOMElemAttrs contained classList className name outerHTML
   11              0.000019   syntax keyword typescriptDOMElemAttrs contained style
   11              0.000020   hi def link typescriptDOMElemAttrs Keyword
   11              0.000031   syntax keyword typescriptDOMElemFuncs contained getAttributeNS getAttributeNode getAttributeNodeNS
   11              0.000025   syntax keyword typescriptDOMElemFuncs contained getBoundingClientRect getClientRects
   11              0.000026   syntax keyword typescriptDOMElemFuncs contained getElementsByClassName getElementsByTagName
   11              0.000024   syntax keyword typescriptDOMElemFuncs contained getElementsByTagNameNS hasAttribute
   11              0.000023   syntax keyword typescriptDOMElemFuncs contained hasAttributeNS insertAdjacentHTML
   11              0.000026   syntax keyword typescriptDOMElemFuncs contained matches querySelector querySelectorAll
   11              0.000025   syntax keyword typescriptDOMElemFuncs contained removeAttribute removeAttributeNS
   11              0.000024   syntax keyword typescriptDOMElemFuncs contained removeAttributeNode requestFullscreen
   11              0.000024   syntax keyword typescriptDOMElemFuncs contained requestPointerLock scrollIntoView
   11              0.000028   syntax keyword typescriptDOMElemFuncs contained setAttribute setAttributeNS setAttributeNode
   11              0.000027   syntax keyword typescriptDOMElemFuncs contained setAttributeNodeNS setCapture supports
   11              0.000019   syntax keyword typescriptDOMElemFuncs contained getAttribute
   11              0.000013   hi def link typescriptDOMElemFuncs Keyword
                            
   11              0.000032   syntax keyword typescriptDOMDocProp contained activeElement body cookie defaultView
   11              0.000035   syntax keyword typescriptDOMDocProp contained designMode dir domain embeds forms head
   11              0.000031   syntax keyword typescriptDOMDocProp contained images lastModified links location plugins
   11              0.000033   syntax keyword typescriptDOMDocProp contained postMessage readyState referrer registerElement
   11              0.000031   syntax keyword typescriptDOMDocProp contained scripts styleSheets title vlinkColor
   11              0.000028   syntax keyword typescriptDOMDocProp contained xmlEncoding characterSet compatMode
   11              0.000077   syntax keyword typescriptDOMDocProp contained contentType currentScript doctype documentElement
   11              0.000030   syntax keyword typescriptDOMDocProp contained documentURI documentURIObject firstChild
   11              0.000028   syntax keyword typescriptDOMDocProp contained implementation lastStyleSheetSet namespaceURI
   11              0.000028   syntax keyword typescriptDOMDocProp contained nodePrincipal ononline pointerLockElement
   11              0.000042   syntax keyword typescriptDOMDocProp contained popupNode preferredStyleSheetSet selectedStyleSheetSet
   11              0.000028   syntax keyword typescriptDOMDocProp contained styleSheetSets textContent tooltipNode
   11              0.000058   syntax cluster props add=typescriptDOMDocProp
   11              0.000034   hi def link typescriptDOMDocProp Keyword
   11              0.000069   syntax keyword typescriptDOMDocMethod contained caretPositionFromPoint close createNodeIterator nextgroup=typescriptFuncCallArg
   11              0.000045   syntax keyword typescriptDOMDocMethod contained createRange createTreeWalker elementFromPoint nextgroup=typescriptFuncCallArg
   11              0.000046   syntax keyword typescriptDOMDocMethod contained getElementsByName adoptNode createAttribute nextgroup=typescriptFuncCallArg
   11              0.000043   syntax keyword typescriptDOMDocMethod contained createCDATASection createComment createDocumentFragment nextgroup=typescriptFuncCallArg
   11              0.000041   syntax keyword typescriptDOMDocMethod contained createElement createElementNS createEvent nextgroup=typescriptFuncCallArg
   11              0.000038   syntax keyword typescriptDOMDocMethod contained createExpression createNSResolver nextgroup=typescriptFuncCallArg
   11              0.000041   syntax keyword typescriptDOMDocMethod contained createProcessingInstruction createTextNode nextgroup=typescriptFuncCallArg
   11              0.000047   syntax keyword typescriptDOMDocMethod contained enableStyleSheetsForSet evaluate execCommand nextgroup=typescriptFuncCallArg
   11              0.000100   syntax keyword typescriptDOMDocMethod contained exitPointerLock getBoxObjectFor getElementById nextgroup=typescriptFuncCallArg
   11              0.000041   syntax keyword typescriptDOMDocMethod contained getElementsByClassName getElementsByTagName nextgroup=typescriptFuncCallArg
   11              0.000038   syntax keyword typescriptDOMDocMethod contained getElementsByTagNameNS getSelection nextgroup=typescriptFuncCallArg
   11              0.000044   syntax keyword typescriptDOMDocMethod contained hasFocus importNode loadOverlay open nextgroup=typescriptFuncCallArg
   11              0.000037   syntax keyword typescriptDOMDocMethod contained queryCommandSupported querySelector nextgroup=typescriptFuncCallArg
   11              0.000036   syntax keyword typescriptDOMDocMethod contained querySelectorAll write writeln nextgroup=typescriptFuncCallArg
   11              0.000054   syntax cluster props add=typescriptDOMDocMethod
   11              0.000015   hi def link typescriptDOMDocMethod Keyword
                            
   11              0.000048   syntax keyword typescriptDOMEventTargetMethod contained addEventListener removeEventListener nextgroup=typescriptEventFuncCallArg
   11              0.000038   syntax keyword typescriptDOMEventTargetMethod contained dispatchEvent waitUntil nextgroup=typescriptEventFuncCallArg
   11              0.000050   syntax cluster props add=typescriptDOMEventTargetMethod
   11              0.000019   hi def link typescriptDOMEventTargetMethod Keyword
   11              0.000050   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName AnimationEvent
   11              0.000048   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName AudioProcessingEvent
   11              0.000045   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName BeforeInputEvent
   11              0.000044   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName BeforeUnloadEvent
   11              0.000050   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName BlobEvent
   11              0.000045   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName ClipboardEvent
   11              0.000045   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName CloseEvent
   11              0.000046   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName CompositionEvent
   11              0.000045   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName CSSFontFaceLoadEvent
   11              0.000045   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName CustomEvent
   11              0.000044   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName DeviceLightEvent
   11              0.000045   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName DeviceMotionEvent
   11              0.000046   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName DeviceOrientationEvent
   11              0.000044   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName DeviceProximityEvent
   11              0.000048   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName DOMTransactionEvent
   11              0.000046   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName DragEvent
   11              0.000065   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName EditingBeforeInputEvent
   11              0.000046   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName ErrorEvent
   11              0.000043   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName FocusEvent
   11              0.000045   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName GamepadEvent
   11              0.000044   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName HashChangeEvent
   11              0.000046   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName IDBVersionChangeEvent
   11              0.000045   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName KeyboardEvent
   11              0.000043   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName MediaStreamEvent
   11              0.000043   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName MessageEvent
   11              0.000042   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName MouseEvent
   11              0.000047   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName MutationEvent
   11              0.000094   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName OfflineAudioCompletionEvent
   11              0.000046   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName PageTransitionEvent
   11              0.000095   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName PointerEvent
   11              0.000089   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName PopStateEvent
   11              0.000133   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName ProgressEvent
   11              0.000048   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName RelatedEvent
   11              0.000045   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName RTCPeerConnectionIceEvent
   11              0.000052   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName SensorEvent
   11              0.000045   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName StorageEvent
   11              0.000071   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName SVGEvent
   11              0.000056   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName SVGZoomEvent
   11              0.000047   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName TimeEvent
   11              0.000043   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName TouchEvent
   11              0.000042   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName TrackEvent
   11              0.000044   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName TransitionEvent
   11              0.000041   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName UIEvent
   11              0.000052   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName UserProximityEvent
   11              0.000039   syntax keyword typescriptDOMEventCons containedin=typescriptIdentifierName WheelEvent
   11              0.000024   hi def link typescriptDOMEventCons Structure
   11              0.000034   syntax keyword typescriptDOMEventProp contained bubbles cancelable currentTarget defaultPrevented
   11              0.000032   syntax keyword typescriptDOMEventProp contained eventPhase target timeStamp type isTrusted
   11              0.000020   syntax keyword typescriptDOMEventProp contained isReload
   11              0.000058   syntax cluster props add=typescriptDOMEventProp
   11              0.000030   hi def link typescriptDOMEventProp Keyword
   11              0.000048   syntax keyword typescriptDOMEventMethod contained initEvent preventDefault stopImmediatePropagation nextgroup=typescriptEventFuncCallArg
   11              0.000046   syntax keyword typescriptDOMEventMethod contained stopPropagation respondWith default nextgroup=typescriptEventFuncCallArg
   11              0.000048   syntax cluster props add=typescriptDOMEventMethod
   11              0.000014   hi def link typescriptDOMEventMethod Keyword
                            
   11              0.000026   syntax keyword typescriptDOMStorage contained sessionStorage localStorage
   11              0.000017   hi def link typescriptDOMStorage Keyword
   11              0.000029   syntax keyword typescriptDOMStorageProp contained length
   11              0.000053   syntax cluster props add=typescriptDOMStorageProp
   11              0.000020   hi def link typescriptDOMStorageProp Keyword
   11              0.000066   syntax keyword typescriptDOMStorageMethod contained getItem key setItem removeItem nextgroup=typescriptFuncCallArg
   11              0.000031   syntax keyword typescriptDOMStorageMethod contained clear nextgroup=typescriptFuncCallArg
   11              0.000048   syntax cluster props add=typescriptDOMStorageMethod
   11              0.000014   hi def link typescriptDOMStorageMethod Keyword
                            
   11              0.000037   syntax keyword typescriptDOMFormProp contained acceptCharset action elements encoding
   11              0.000029   syntax keyword typescriptDOMFormProp contained enctype length method name target
   11              0.000048   syntax cluster props add=typescriptDOMFormProp
   11              0.000018   hi def link typescriptDOMFormProp Keyword
   11              0.000041   syntax keyword typescriptDOMFormMethod contained reportValidity reset submit nextgroup=typescriptFuncCallArg
   11              0.000058   syntax cluster props add=typescriptDOMFormMethod
   11              0.000013   hi def link typescriptDOMFormMethod Keyword
                            
   11              0.000031   syntax keyword typescriptDOMStyle contained alignContent alignItems alignSelf animation
   11              0.000028   syntax keyword typescriptDOMStyle contained animationDelay animationDirection animationDuration
   11              0.000025   syntax keyword typescriptDOMStyle contained animationFillMode animationIterationCount
   11              0.000027   syntax keyword typescriptDOMStyle contained animationName animationPlayState animationTimingFunction
   11              0.000033   syntax keyword typescriptDOMStyle contained appearance backfaceVisibility background
   11              0.000024   syntax keyword typescriptDOMStyle contained backgroundAttachment backgroundBlendMode
   11              0.000026   syntax keyword typescriptDOMStyle contained backgroundClip backgroundColor backgroundImage
   11              0.000028   syntax keyword typescriptDOMStyle contained backgroundOrigin backgroundPosition backgroundRepeat
   11              0.000028   syntax keyword typescriptDOMStyle contained backgroundSize border borderBottom borderBottomColor
   11              0.000024   syntax keyword typescriptDOMStyle contained borderBottomLeftRadius borderBottomRightRadius
   11              0.000026   syntax keyword typescriptDOMStyle contained borderBottomStyle borderBottomWidth borderCollapse
   11              0.000113   syntax keyword typescriptDOMStyle contained borderColor borderImage borderImageOutset
   11              0.000030   syntax keyword typescriptDOMStyle contained borderImageRepeat borderImageSlice borderImageSource
   11              0.000025   syntax keyword typescriptDOMStyle contained borderImageWidth borderLeft borderLeftColor
   11              0.000026   syntax keyword typescriptDOMStyle contained borderLeftStyle borderLeftWidth borderRadius
   11              0.000026   syntax keyword typescriptDOMStyle contained borderRight borderRightColor borderRightStyle
   11              0.000025   syntax keyword typescriptDOMStyle contained borderRightWidth borderSpacing borderStyle
   11              0.000028   syntax keyword typescriptDOMStyle contained borderTop borderTopColor borderTopLeftRadius
   11              0.000025   syntax keyword typescriptDOMStyle contained borderTopRightRadius borderTopStyle borderTopWidth
   11              0.000024   syntax keyword typescriptDOMStyle contained borderWidth bottom boxDecorationBreak
   11              0.000026   syntax keyword typescriptDOMStyle contained boxShadow boxSizing breakAfter breakBefore
   11              0.000029   syntax keyword typescriptDOMStyle contained breakInside captionSide caretColor caretShape
   11              0.000036   syntax keyword typescriptDOMStyle contained caret clear clip clipPath color columns
   11              0.000032   syntax keyword typescriptDOMStyle contained columnCount columnFill columnGap columnRule
   11              0.000034   syntax keyword typescriptDOMStyle contained columnRuleColor columnRuleStyle columnRuleWidth
   11              0.000033   syntax keyword typescriptDOMStyle contained columnSpan columnWidth content counterIncrement
   11              0.000031   syntax keyword typescriptDOMStyle contained counterReset cursor direction display
   11              0.000030   syntax keyword typescriptDOMStyle contained emptyCells flex flexBasis flexDirection
   11              0.000030   syntax keyword typescriptDOMStyle contained flexFlow flexGrow flexShrink flexWrap
   11              0.000031   syntax keyword typescriptDOMStyle contained float font fontFamily fontFeatureSettings
   11              0.000029   syntax keyword typescriptDOMStyle contained fontKerning fontLanguageOverride fontSize
   11              0.000031   syntax keyword typescriptDOMStyle contained fontSizeAdjust fontStretch fontStyle fontSynthesis
   11              0.000028   syntax keyword typescriptDOMStyle contained fontVariant fontVariantAlternates fontVariantCaps
   11              0.000025   syntax keyword typescriptDOMStyle contained fontVariantEastAsian fontVariantLigatures
   11              0.000036   syntax keyword typescriptDOMStyle contained fontVariantNumeric fontVariantPosition
   11              0.000034   syntax keyword typescriptDOMStyle contained fontWeight grad grid gridArea gridAutoColumns
   11              0.000028   syntax keyword typescriptDOMStyle contained gridAutoFlow gridAutoPosition gridAutoRows
   11              0.000028   syntax keyword typescriptDOMStyle contained gridColumn gridColumnStart gridColumnEnd
   11              0.000031   syntax keyword typescriptDOMStyle contained gridRow gridRowStart gridRowEnd gridTemplate
   11              0.000029   syntax keyword typescriptDOMStyle contained gridTemplateAreas gridTemplateRows gridTemplateColumns
   11              0.000028   syntax keyword typescriptDOMStyle contained height hyphens imageRendering imageResolution
   11              0.000029   syntax keyword typescriptDOMStyle contained imageOrientation imeMode inherit justifyContent
   11              0.000028   syntax keyword typescriptDOMStyle contained left letterSpacing lineBreak lineHeight
   11              0.000026   syntax keyword typescriptDOMStyle contained listStyle listStyleImage listStylePosition
   11              0.000037   syntax keyword typescriptDOMStyle contained listStyleType margin marginBottom marginLeft
   11              0.000028   syntax keyword typescriptDOMStyle contained marginRight marginTop marks mask maskType
   11              0.000032   syntax keyword typescriptDOMStyle contained maxHeight maxWidth minHeight minWidth
   11              0.000027   syntax keyword typescriptDOMStyle contained mixBlendMode objectFit objectPosition
   11              0.000032   syntax keyword typescriptDOMStyle contained opacity order orphans outline outlineColor
   11              0.000027   syntax keyword typescriptDOMStyle contained outlineOffset outlineStyle outlineWidth
   11              0.000029   syntax keyword typescriptDOMStyle contained overflow overflowWrap overflowX overflowY
   11              0.000027   syntax keyword typescriptDOMStyle contained overflowClipBox padding paddingBottom
   11              0.000028   syntax keyword typescriptDOMStyle contained paddingLeft paddingRight paddingTop pageBreakAfter
   11              0.000025   syntax keyword typescriptDOMStyle contained pageBreakBefore pageBreakInside perspective
   11              0.000025   syntax keyword typescriptDOMStyle contained perspectiveOrigin pointerEvents position
   11              0.000028   syntax keyword typescriptDOMStyle contained quotes resize right shapeImageThreshold
   11              0.000081   syntax keyword typescriptDOMStyle contained shapeMargin shapeOutside tableLayout tabSize
   11              0.000029   syntax keyword typescriptDOMStyle contained textAlign textAlignLast textCombineHorizontal
   11              0.000029   syntax keyword typescriptDOMStyle contained textDecoration textDecorationColor textDecorationLine
   11              0.000027   syntax keyword typescriptDOMStyle contained textDecorationStyle textIndent textOrientation
   11              0.000026   syntax keyword typescriptDOMStyle contained textOverflow textRendering textShadow
   11              0.000028   syntax keyword typescriptDOMStyle contained textTransform textUnderlinePosition top
   11              0.000027   syntax keyword typescriptDOMStyle contained touchAction transform transformOrigin
   11              0.000027   syntax keyword typescriptDOMStyle contained transformStyle transition transitionDelay
   11              0.000024   syntax keyword typescriptDOMStyle contained transitionDuration transitionProperty
   11              0.000030   syntax keyword typescriptDOMStyle contained transitionTimingFunction unicodeBidi unicodeRange
   11              0.000028   syntax keyword typescriptDOMStyle contained userSelect userZoom verticalAlign visibility
   11              0.000026   syntax keyword typescriptDOMStyle contained whiteSpace width willChange wordBreak
   11              0.000025   syntax keyword typescriptDOMStyle contained wordSpacing wordWrap writingMode zIndex
   11              0.000017   hi def link typescriptDOMStyle Keyword
                            
                            
                            
   11              0.000069   let typescript_props = 1
   11              0.000027   syntax keyword typescriptAnimationEvent contained animationend animationiteration
   11              0.000026   syntax keyword typescriptAnimationEvent contained animationstart beginEvent endEvent
   11              0.000019   syntax keyword typescriptAnimationEvent contained repeatEvent
   11              0.000036   syntax cluster events add=typescriptAnimationEvent
   11              0.000019   hi def link typescriptAnimationEvent Title
   11              0.000029   syntax keyword typescriptCSSEvent contained CssRuleViewRefreshed CssRuleViewChanged
   11              0.000025   syntax keyword typescriptCSSEvent contained CssRuleViewCSSLinkClicked transitionend
   11              0.000046   syntax cluster events add=typescriptCSSEvent
   11              0.000017   hi def link typescriptCSSEvent Title
   11              0.000209   syntax keyword typescriptDatabaseEvent contained blocked complete error success upgradeneeded
   11              0.000024   syntax keyword typescriptDatabaseEvent contained versionchange
   11              0.000036   syntax cluster events add=typescriptDatabaseEvent
   11              0.000018   hi def link typescriptDatabaseEvent Title
   11              0.000032   syntax keyword typescriptDocumentEvent contained DOMLinkAdded DOMLinkRemoved DOMMetaAdded
   11              0.000025   syntax keyword typescriptDocumentEvent contained DOMMetaRemoved DOMWillOpenModalDialog
   11              0.000024   syntax keyword typescriptDocumentEvent contained DOMModalDialogClosed unload
   11              0.000034   syntax cluster events add=typescriptDocumentEvent
   11              0.000017   hi def link typescriptDocumentEvent Title
   11              0.000029   syntax keyword typescriptDOMMutationEvent contained DOMAttributeNameChanged DOMAttrModified
   11              0.000028   syntax keyword typescriptDOMMutationEvent contained DOMCharacterDataModified DOMContentLoaded
   11              0.000026   syntax keyword typescriptDOMMutationEvent contained DOMElementNameChanged DOMNodeInserted
   11              0.000026   syntax keyword typescriptDOMMutationEvent contained DOMNodeInsertedIntoDocument DOMNodeRemoved
   11              0.000024   syntax keyword typescriptDOMMutationEvent contained DOMNodeRemovedFromDocument DOMSubtreeModified
   11              0.000034   syntax cluster events add=typescriptDOMMutationEvent
   11              0.000021   hi def link typescriptDOMMutationEvent Title
   11              0.000034   syntax keyword typescriptDragEvent contained drag dragdrop dragend dragenter dragexit
   11              0.000028   syntax keyword typescriptDragEvent contained draggesture dragleave dragover dragstart
   11              0.000018   syntax keyword typescriptDragEvent contained drop
   11              0.000032   syntax cluster events add=typescriptDragEvent
   11              0.000017   hi def link typescriptDragEvent Title
   11              0.000030   syntax keyword typescriptElementEvent contained invalid overflow underflow DOMAutoComplete
   11              0.000024   syntax keyword typescriptElementEvent contained command commandupdate
   11              0.000033   syntax cluster events add=typescriptElementEvent
   11              0.000017   hi def link typescriptElementEvent Title
   11              0.000034   syntax keyword typescriptFocusEvent contained blur change DOMFocusIn DOMFocusOut focus
   11              0.000022   syntax keyword typescriptFocusEvent contained focusin focusout
   11              0.000033   syntax cluster events add=typescriptFocusEvent
   11              0.000016   hi def link typescriptFocusEvent Title
   11              0.000022   syntax keyword typescriptFormEvent contained reset submit
   11              0.000037   syntax cluster events add=typescriptFormEvent
   11              0.000016   hi def link typescriptFormEvent Title
   11              0.000021   syntax keyword typescriptFrameEvent contained DOMFrameContentLoaded
   11              0.000034   syntax cluster events add=typescriptFrameEvent
   11              0.000073   hi def link typescriptFrameEvent Title
   11              0.000034   syntax keyword typescriptInputDeviceEvent contained click contextmenu DOMMouseScroll
   11              0.000029   syntax keyword typescriptInputDeviceEvent contained dblclick gamepadconnected gamepaddisconnected
   11              0.000031   syntax keyword typescriptInputDeviceEvent contained keydown keypress keyup MozGamepadButtonDown
   11              0.000027   syntax keyword typescriptInputDeviceEvent contained MozGamepadButtonUp mousedown mouseenter
   11              0.000026   syntax keyword typescriptInputDeviceEvent contained mouseleave mousemove mouseout
   11              0.000028   syntax keyword typescriptInputDeviceEvent contained mouseover mouseup mousewheel MozMousePixelScroll
   11              0.000023   syntax keyword typescriptInputDeviceEvent contained pointerlockchange pointerlockerror
   11              0.000018   syntax keyword typescriptInputDeviceEvent contained wheel
   11              0.000044   syntax cluster events add=typescriptInputDeviceEvent
   11              0.000018   hi def link typescriptInputDeviceEvent Title
   11              0.000033   syntax keyword typescriptMediaEvent contained audioprocess canplay canplaythrough
   11              0.000033   syntax keyword typescriptMediaEvent contained durationchange emptied ended ended loadeddata
   11              0.000027   syntax keyword typescriptMediaEvent contained loadedmetadata MozAudioAvailable pause
   11              0.000030   syntax keyword typescriptMediaEvent contained play playing ratechange seeked seeking
   11              0.000076   syntax keyword typescriptMediaEvent contained stalled suspend timeupdate volumechange
   11              0.000023   syntax keyword typescriptMediaEvent contained waiting complete
   11              0.000035   syntax cluster events add=typescriptMediaEvent
   11              0.000018   hi def link typescriptMediaEvent Title
   11              0.000024   syntax keyword typescriptMenuEvent contained DOMMenuItemActive DOMMenuItemInactive
   11              0.000033   syntax cluster events add=typescriptMenuEvent
   11              0.000016   hi def link typescriptMenuEvent Title
   11              0.000035   syntax keyword typescriptNetworkEvent contained datachange dataerror disabled enabled
   11              0.000031   syntax keyword typescriptNetworkEvent contained offline online statuschange connectionInfoUpdate
   11              0.000036   syntax cluster events add=typescriptNetworkEvent
   11              0.000017   hi def link typescriptNetworkEvent Title
   11              0.000033   syntax keyword typescriptProgressEvent contained abort error load loadend loadstart
   11              0.000025   syntax keyword typescriptProgressEvent contained progress timeout uploadprogress
   11              0.000035   syntax cluster events add=typescriptProgressEvent
   11              0.000017   hi def link typescriptProgressEvent Title
   11              0.000027   syntax keyword typescriptResourceEvent contained cached error load
   11              0.000036   syntax cluster events add=typescriptResourceEvent
   11              0.000017   hi def link typescriptResourceEvent Title
   11              0.000025   syntax keyword typescriptScriptEvent contained afterscriptexecute beforescriptexecute
   11              0.000036   syntax cluster events add=typescriptScriptEvent
   11              0.000018   hi def link typescriptScriptEvent Title
   11              0.000045   syntax keyword typescriptSensorEvent contained compassneedscalibration devicelight
   11              0.000029   syntax keyword typescriptSensorEvent contained devicemotion deviceorientation deviceproximity
   11              0.000023   syntax keyword typescriptSensorEvent contained orientationchange userproximity
   11              0.000037   syntax cluster events add=typescriptSensorEvent
   11              0.000017   hi def link typescriptSensorEvent Title
   11              0.000026   syntax keyword typescriptSessionHistoryEvent contained pagehide pageshow popstate
   11              0.000039   syntax cluster events add=typescriptSessionHistoryEvent
   11              0.000017   hi def link typescriptSessionHistoryEvent Title
   11              0.000025   syntax keyword typescriptStorageEvent contained change storage
   11              0.000036   syntax cluster events add=typescriptStorageEvent
   11              0.000017   hi def link typescriptStorageEvent Title
   11              0.000034   syntax keyword typescriptSVGEvent contained SVGAbort SVGError SVGLoad SVGResize SVGScroll
   11              0.000021   syntax keyword typescriptSVGEvent contained SVGUnload SVGZoom
   11              0.000037   syntax cluster events add=typescriptSVGEvent
   11              0.000016   hi def link typescriptSVGEvent Title
   11              0.000022   syntax keyword typescriptTabEvent contained visibilitychange
   11              0.000036   syntax cluster events add=typescriptTabEvent
   11              0.000017   hi def link typescriptTabEvent Title
   11              0.000032   syntax keyword typescriptTextEvent contained compositionend compositionstart compositionupdate
   11              0.000031   syntax keyword typescriptTextEvent contained copy cut paste select text
   11              0.000038   syntax cluster events add=typescriptTextEvent
   11              0.000017   hi def link typescriptTextEvent Title
   11              0.000033   syntax keyword typescriptTouchEvent contained touchcancel touchend touchenter touchleave
   11              0.000070   syntax keyword typescriptTouchEvent contained touchmove touchstart
   11              0.000040   syntax cluster events add=typescriptTouchEvent
   11              0.000017   hi def link typescriptTouchEvent Title
   11              0.000031   syntax keyword typescriptUpdateEvent contained checking downloading error noupdate
   11              0.000024   syntax keyword typescriptUpdateEvent contained obsolete updateready
   11              0.000038   syntax cluster events add=typescriptUpdateEvent
   11              0.000017   hi def link typescriptUpdateEvent Title
   11              0.000027   syntax keyword typescriptValueChangeEvent contained hashchange input readystatechange
   11              0.000040   syntax cluster events add=typescriptValueChangeEvent
   11              0.000018   hi def link typescriptValueChangeEvent Title
   11              0.000030   syntax keyword typescriptViewEvent contained fullscreen fullscreenchange fullscreenerror
   11              0.000053   syntax keyword typescriptViewEvent contained resize scroll
   11              0.000041   syntax cluster events add=typescriptViewEvent
   11              0.000017   hi def link typescriptViewEvent Title
   11              0.000031   syntax keyword typescriptWebsocketEvent contained close error message open
   11              0.000041   syntax cluster events add=typescriptWebsocketEvent
   11              0.000018   hi def link typescriptWebsocketEvent Title
   11              0.000028   syntax keyword typescriptWindowEvent contained DOMWindowCreated DOMWindowClose DOMTitleChanged
   11              0.000038   syntax cluster events add=typescriptWindowEvent
   11              0.000016   hi def link typescriptWindowEvent Title
   11              0.000030   syntax keyword typescriptUncategorizedEvent contained beforeunload message open show
   11              0.000041   syntax cluster events add=typescriptUncategorizedEvent
   11              0.000017   hi def link typescriptUncategorizedEvent Title
   11              0.000026   syntax keyword typescriptServiceWorkerEvent contained install activate fetch
   11              0.000041   syntax cluster events add=typescriptServiceWorkerEvent
   11              0.000013   hi def link typescriptServiceWorkerEvent Title
                            
                            
   11              0.000011 endif
                            
                            " patch
                            " patch for generated code
   11              0.000129 syntax keyword typescriptGlobal Promise
                              \ nextgroup=typescriptGlobalPromiseDot,typescriptFuncCallArg,typescriptTypeArguments oneline
   11              0.000080 syntax keyword typescriptGlobal Map WeakMap
                              \ nextgroup=typescriptGlobalPromiseDot,typescriptFuncCallArg,typescriptTypeArguments oneline
                            
   11              0.000055 syntax keyword typescriptConstructor           contained constructor
                              \ nextgroup=@typescriptCallSignature
                              \ skipwhite skipempty
                            
                            
   11              0.000080 syntax cluster memberNextGroup contains=typescriptMemberOptionality,typescriptTypeAnnotation,@typescriptCallSignature
                            
   11              0.000090 syntax match typescriptMember /#\?\K\k*/
                              \ nextgroup=@memberNextGroup
                              \ contained skipwhite
                            
   11              0.000084 syntax match typescriptMethodAccessor contained /\v(get|set)\s\K/me=e-1
                              \ nextgroup=@typescriptMembers
                            
   11              0.000129 syntax cluster typescriptPropertyMemberDeclaration contains=
                              \ typescriptClassStatic,
                              \ typescriptAccessibilityModifier,
                              \ typescriptReadonlyModifier,
                              \ typescriptMethodAccessor,
                              \ @typescriptMembers
                              " \ typescriptMemberVariableDeclaration
                            
   11              0.000090 syntax match typescriptMemberOptionality /?\|!/ contained
                              \ nextgroup=typescriptTypeAnnotation,@typescriptCallSignature
                              \ skipwhite skipempty
                            
   11              0.000059 syntax cluster typescriptMembers contains=typescriptMember,typescriptStringMember,typescriptComputedMember
                            
   11              0.000080 syntax keyword typescriptClassStatic static
                              \ nextgroup=@typescriptMembers,typescriptAsyncFuncKeyword,typescriptReadonlyModifier
                              \ skipwhite contained
                            
   11              0.000025 syntax keyword typescriptAccessibilityModifier public private protected contained
                            
   11              0.000018 syntax keyword typescriptReadonlyModifier readonly contained
                            
   11              0.000158 syntax region  typescriptStringMember   contained
                              \ start=/\z(["']\)/  skip=/\\\\\|\\\z1\|\\\n/  end=/\z1/
                              \ nextgroup=@memberNextGroup
                              \ skipwhite skipempty
                            
   11              0.000138 syntax region  typescriptComputedMember   contained matchgroup=typescriptProperty
                              \ start=/\[/rs=s+1 end=/]/
                              \ contains=@typescriptValue,typescriptMember,typescriptMappedIn
                              \ nextgroup=@memberNextGroup
                              \ skipwhite skipempty
                            
                            "don't add typescriptMembers to nextgroup, let outer scope match it
                            " so we won't match abstract method outside abstract class
   11              0.000071 syntax keyword typescriptAbstract              abstract
                              \ nextgroup=typescriptClassKeyword
                              \ skipwhite skipnl
   11              0.000077 syntax keyword typescriptClassKeyword          class
                              \ nextgroup=typescriptClassName,typescriptClassExtends,typescriptClassBlock
                              \ skipwhite
                            
   11              0.000168 syntax match   typescriptClassName             contained /\K\k*/
                              \ nextgroup=typescriptClassBlock,typescriptClassExtends,typescriptClassTypeParameter
                              \ skipwhite skipnl
                            
   11              0.000204 syntax region typescriptClassTypeParameter
                              \ start=/</ end=/>/
                              \ contains=@typescriptTypeParameterCluster
                              \ nextgroup=typescriptClassBlock,typescriptClassExtends
                              \ contained skipwhite skipnl
                            
   11              0.000064 syntax keyword typescriptClassExtends          contained extends implements nextgroup=typescriptClassHeritage skipwhite skipnl
                            
   11              0.000150 syntax match   typescriptClassHeritage         contained /\v(\k|\.|\(|\))+/
                              \ nextgroup=typescriptClassBlock,typescriptClassExtends,typescriptMixinComma,typescriptClassTypeArguments
                              \ contains=@typescriptValue
                              \ skipwhite skipnl
                              \ contained
                            
   11              0.000138 syntax region typescriptClassTypeArguments matchgroup=typescriptTypeBrackets
                              \ start=/</ end=/>/
                              \ contains=@typescriptType
                              \ nextgroup=typescriptClassExtends,typescriptClassBlock,typescriptMixinComma
                              \ contained skipwhite skipnl
                            
   11              0.000037 syntax match typescriptMixinComma /,/ contained nextgroup=typescriptClassHeritage skipwhite skipnl
                            
                            " we need add arrowFunc to class block for high order arrow func
                            " see test case
   11              0.000188 syntax region  typescriptClassBlock matchgroup=typescriptBraces start=/{/ end=/}/
                              \ contains=@typescriptPropertyMemberDeclaration,typescriptAbstract,@typescriptComments,typescriptBlock,typescriptAssign,typescriptDecorator,typescriptAsyncFuncKeyword,typescriptArrowFunc
                              \ contained fold
                            
   11              0.000072 syntax keyword typescriptInterfaceKeyword          interface nextgroup=typescriptInterfaceName skipwhite
   11              0.000102 syntax match   typescriptInterfaceName             contained /\k\+/
                              \ nextgroup=typescriptObjectType,typescriptInterfaceExtends,typescriptInterfaceTypeParameter
                              \ skipwhite skipnl
   11              0.000113 syntax region typescriptInterfaceTypeParameter
                              \ start=/</ end=/>/
                              \ contains=@typescriptTypeParameterCluster
                              \ nextgroup=typescriptObjectType,typescriptInterfaceExtends
                              \ contained
                              \ skipwhite skipnl
                            
   11              0.000036 syntax keyword typescriptInterfaceExtends          contained extends nextgroup=typescriptInterfaceHeritage skipwhite skipnl
                            
   11              0.000084 syntax match typescriptInterfaceHeritage contained /\v(\k|\.)+/
                              \ nextgroup=typescriptObjectType,typescriptInterfaceComma,typescriptInterfaceTypeArguments
                              \ skipwhite
                            
   11              0.000132 syntax region typescriptInterfaceTypeArguments matchgroup=typescriptTypeBrackets
                              \ start=/</ end=/>/ skip=/\s*,\s*/
                              \ contains=@typescriptType
                              \ nextgroup=typescriptObjectType,typescriptInterfaceComma
                              \ contained skipwhite
                            
   11              0.000035 syntax match typescriptInterfaceComma /,/ contained nextgroup=typescriptInterfaceHeritage skipwhite skipnl
                            
                            "Block VariableStatement EmptyStatement ExpressionStatement IfStatement IterationStatement ContinueStatement BreakStatement ReturnStatement WithStatement LabelledStatement SwitchStatement ThrowStatement TryStatement DebuggerStatement
   11              0.000339 syntax cluster typescriptStatement
                              \ contains=typescriptBlock,typescriptVariable,
                              \ @typescriptTopExpression,typescriptAssign,
                              \ typescriptConditional,typescriptRepeat,typescriptBranch,
                              \ typescriptLabel,typescriptStatementKeyword,
                              \ typescriptFuncKeyword,
                              \ typescriptTry,typescriptExceptions,typescriptDebugger,
                              \ typescriptExport,typescriptInterfaceKeyword,typescriptEnum,
                              \ typescriptModule,typescriptAliasKeyword,typescriptImport
                            
   11              0.000092 syntax cluster typescriptPrimitive  contains=typescriptString,typescriptTemplate,typescriptRegexpString,typescriptNumber,typescriptBoolean,typescriptNull,typescriptArray
                            
   11              0.000077 syntax cluster typescriptEventTypes            contains=typescriptEventString,typescriptTemplate,typescriptNumber,typescriptBoolean,typescriptNull
                            
                            " top level expression: no arrow func
                            " also no func keyword. funcKeyword is contained in statement
                            " funcKeyword allows overloading (func without body)
                            " funcImpl requires body
   11              0.000216 syntax cluster typescriptTopExpression
                              \ contains=@typescriptPrimitive,
                              \ typescriptIdentifier,typescriptIdentifierName,
                              \ typescriptOperator,typescriptUnaryOp,
                              \ typescriptParenExp,typescriptRegexpString,
                              \ typescriptGlobal,typescriptAsyncFuncKeyword,
                              \ typescriptClassKeyword,typescriptTypeCast
                            
                            " no object literal, used in type cast and arrow func
                            " TODO: change func keyword to funcImpl
   11              0.000112 syntax cluster typescriptExpression
                              \ contains=@typescriptTopExpression,
                              \ typescriptArrowFuncDef,
                              \ typescriptFuncImpl
                            
   11              0.000061 syntax cluster typescriptValue
                              \ contains=@typescriptExpression,typescriptObjectLiteral
                            
   11              0.000138 syntax cluster typescriptEventExpression       contains=typescriptArrowFuncDef,typescriptParenExp,@typescriptValue,typescriptRegexpString,@typescriptEventTypes,typescriptOperator,typescriptGlobal,jsxRegion
                            
   11              0.000104 syntax keyword typescriptAsyncFuncKeyword      async
                              \ nextgroup=typescriptFuncKeyword,typescriptArrowFuncDef
                              \ skipwhite
                            
   11              0.000070 syntax keyword typescriptAsyncFuncKeyword      await
                              \ nextgroup=@typescriptValue
                              \ skipwhite
                            
   11              0.000082 syntax keyword typescriptFuncKeyword           function
                              \ nextgroup=typescriptAsyncFunc,typescriptFuncName,@typescriptCallSignature
                              \ skipwhite skipempty
                            
   11              0.000066 syntax match   typescriptAsyncFunc             contained /*/
                              \ nextgroup=typescriptFuncName,@typescriptCallSignature
                              \ skipwhite skipempty
                            
   11              0.000055 syntax match   typescriptFuncName              contained /\K\k*/
                              \ nextgroup=@typescriptCallSignature
                              \ skipwhite
                            
                            " destructuring ({ a: ee }) =>
   11              0.000198 syntax match   typescriptArrowFuncDef          contained /(\(\s*\({\_[^}]*}\|\k\+\)\(:\_[^)]\)\?,\?\)\+)\s*=>/
                              \ contains=typescriptArrowFuncArg,typescriptArrowFunc
                              \ nextgroup=@typescriptExpression,typescriptBlock
                              \ skipwhite skipempty
                            
                            " matches `(a) =>` or `([a]) =>` or
                            " `(
                            "  a) =>`
   11              0.000140 syntax match   typescriptArrowFuncDef          contained /(\(\_s*[a-zA-Z\$_\[.]\_[^)]*\)*)\s*=>/
                              \ contains=typescriptArrowFuncArg,typescriptArrowFunc
                              \ nextgroup=@typescriptExpression,typescriptBlock
                              \ skipwhite skipempty
                            
   11              0.000155 syntax match   typescriptArrowFuncDef          contained /\K\k*\s*=>/
                              \ contains=typescriptArrowFuncArg,typescriptArrowFunc
                              \ nextgroup=@typescriptExpression,typescriptBlock
                              \ skipwhite skipempty
                            
                            " TODO: optimize this pattern
   11              0.000152 syntax region   typescriptArrowFuncDef          contained start=/(\_[^(^)]*):/ end=/=>/
                              \ contains=typescriptArrowFuncArg,typescriptArrowFunc,typescriptTypeAnnotation
                              \ nextgroup=@typescriptExpression,typescriptBlock
                              \ skipwhite skipempty keepend
                            
   11              0.000054 syntax match   typescriptArrowFunc             /=>/
   11              0.000032 syntax match   typescriptArrowFuncArg          contained /\K\k*/
   11              0.000065 syntax region  typescriptArrowFuncArg          contained start=/<\|(/ end=/\ze=>/ contains=@typescriptCallSignature
                            
   11              0.000076 syntax region typescriptReturnAnnotation contained start=/:/ end=/{/me=e-1 contains=@typescriptType nextgroup=typescriptBlock
                            
                            
   11              0.000084 syntax region typescriptFuncImpl contained start=/function\>/ end=/{/me=e-1
                              \ contains=typescriptFuncKeyword
                              \ nextgroup=typescriptBlock
                            
   11              0.000053 syntax cluster typescriptCallImpl contains=typescriptGenericImpl,typescriptParamImpl
   11              0.000120 syntax region typescriptGenericImpl matchgroup=typescriptTypeBrackets
                              \ start=/</ end=/>/ skip=/\s*,\s*/
                              \ contains=typescriptTypeParameter
                              \ nextgroup=typescriptParamImpl
                              \ contained skipwhite
   11              0.000133 syntax region typescriptParamImpl matchgroup=typescriptParens
                              \ start=/(/ end=/)/
                              \ contains=typescriptDecorator,@typescriptParameterList,@typescriptComments
                              \ nextgroup=typescriptReturnAnnotation,typescriptBlock
                              \ contained skipwhite skipnl
                            
   11              0.000153 syntax match typescriptDecorator /@\([_$a-zA-Z][_$a-zA-Z0-9]*\.\)*[_$a-zA-Z][_$a-zA-Z0-9]*\>/
                              \ nextgroup=typescriptFuncCallArg,typescriptTypeArguments
                              \ contains=@_semantic,typescriptDotNotation
                            
                            " Define the default highlighting.
   11              0.000023 hi def link typescriptReserved             Error
                            
   11              0.000020 hi def link typescriptEndColons            Exception
   11              0.000020 hi def link typescriptSymbols              Normal
   11              0.000017 hi def link typescriptBraces               Function
   11              0.000016 hi def link typescriptParens               Normal
   11              0.000018 hi def link typescriptComment              Comment
   11              0.000017 hi def link typescriptLineComment          Comment
   11              0.000016 hi def link typescriptDocComment           Comment
   11              0.000018 hi def link typescriptCommentTodo          Todo
   11              0.000019 hi def link typescriptMagicComment         SpecialComment
   11              0.000093 hi def link typescriptRef                  Include
   11              0.000020 hi def link typescriptDocNotation          SpecialComment
   11              0.000018 hi def link typescriptDocTags              SpecialComment
   11              0.000019 hi def link typescriptDocNGParam           typescriptDocParam
   11              0.000016 hi def link typescriptDocParam             Function
   11              0.000016 hi def link typescriptDocNumParam          Function
   11              0.000025 hi def link typescriptDocEventRef          Function
   11              0.000017 hi def link typescriptDocNamedParamType    Type
   11              0.000017 hi def link typescriptDocParamName         Type
   11              0.000015 hi def link typescriptDocParamType         Type
   11              0.000016 hi def link typescriptString               String
   11              0.000019 hi def link typescriptSpecial              Special
   11              0.000017 hi def link typescriptStringLiteralType    String
   11              0.000016 hi def link typescriptTemplateLiteralType  String
   11              0.000017 hi def link typescriptStringMember         String
   11              0.000016 hi def link typescriptTemplate             String
   11              0.000015 hi def link typescriptEventString          String
   11              0.000015 hi def link typescriptDestructureString    String
   11              0.000017 hi def link typescriptASCII                Special
   11              0.000017 hi def link typescriptTemplateSB           Label
   11              0.000015 hi def link typescriptRegexpString         String
   11              0.000016 hi def link typescriptGlobal               Constant
   11              0.000018 hi def link typescriptTestGlobal           Function
   11              0.000016 hi def link typescriptPrototype            Type
   11              0.000018 hi def link typescriptConditional          Conditional
   11              0.000018 hi def link typescriptConditionalElse      Conditional
   11              0.000019 hi def link typescriptCase                 Conditional
   11              0.000018 hi def link typescriptDefault              typescriptCase
   11              0.000016 hi def link typescriptBranch               Conditional
   11              0.000016 hi def link typescriptIdentifier           Structure
   11              0.000018 hi def link typescriptVariable             Identifier
   11              0.000017 hi def link typescriptDestructureVariable  PreProc
   11              0.000017 hi def link typescriptEnumKeyword          Identifier
   11              0.000015 hi def link typescriptRepeat               Repeat
   11              0.000016 hi def link typescriptForOperator          Repeat
   11              0.000017 hi def link typescriptStatementKeyword     Statement
   11              0.000016 hi def link typescriptMessage              Keyword
   11              0.000016 hi def link typescriptOperator             Identifier
   11              0.000016 hi def link typescriptKeywordOp            Identifier
   11              0.000016 hi def link typescriptCastKeyword          Special
   11              0.000016 hi def link typescriptType                 Type
   11              0.000015 hi def link typescriptNull                 Boolean
   11              0.000015 hi def link typescriptNumber               Number
   11              0.000015 hi def link typescriptBoolean              Boolean
   11              0.000018 hi def link typescriptObjectLabel          typescriptLabel
   11              0.000016 hi def link typescriptDestructureLabel     Function
   11              0.000016 hi def link typescriptLabel                Label
   11              0.000016 hi def link typescriptTupleLable           Label
   11              0.000016 hi def link typescriptStringProperty       String
   11              0.000015 hi def link typescriptImport               Special
   11              0.000017 hi def link typescriptImportType           Special
   11              0.000017 hi def link typescriptAmbientDeclaration   Special
   11              0.000015 hi def link typescriptExport               Special
   11              0.000015 hi def link typescriptExportType           Special
   11              0.000015 hi def link typescriptModule               Special
   11              0.000015 hi def link typescriptTry                  Special
   11              0.000012 hi def link typescriptExceptions           Special
                            
   11              0.000015 hi def link typescriptMember              Function
   11              0.000014 hi def link typescriptMethodAccessor       Operator
                            
   11              0.000019 hi def link typescriptAsyncFuncKeyword     Keyword
   11              0.000015 hi def link typescriptObjectAsyncKeyword   Keyword
   11              0.000015 hi def link typescriptAsyncFor             Keyword
   11              0.000015 hi def link typescriptFuncKeyword          Keyword
   11              0.000014 hi def link typescriptAsyncFunc            Keyword
   11              0.000015 hi def link typescriptArrowFunc            Type
   11              0.000016 hi def link typescriptFuncName             Function
   11              0.000016 hi def link typescriptFuncArg              PreProc
   11              0.000015 hi def link typescriptArrowFuncArg         PreProc
   11              0.000014 hi def link typescriptFuncComma            Operator
                            
   11              0.000015 hi def link typescriptClassKeyword         Keyword
   11              0.000015 hi def link typescriptClassExtends         Keyword
                            " hi def link typescriptClassName            Function
   11              0.000014 hi def link typescriptAbstract             Special
                            " hi def link typescriptClassHeritage        Function
                            " hi def link typescriptInterfaceHeritage    Function
   11              0.000017 hi def link typescriptClassStatic          StorageClass
   11              0.000016 hi def link typescriptReadonlyModifier     Keyword
   11              0.000014 hi def link typescriptInterfaceKeyword     Keyword
   11              0.000061 hi def link typescriptInterfaceExtends     Keyword
   11              0.000015 hi def link typescriptInterfaceName        Function
                            
   11              0.000012 hi def link shellbang                      Comment
                            
   11              0.000017 hi def link typescriptTypeParameter         Identifier
   11              0.000015 hi def link typescriptConstraint            Keyword
   11              0.000017 hi def link typescriptPredefinedType        Type
   11              0.000017 hi def link typescriptReadonlyArrayKeyword  Keyword
   11              0.000016 hi def link typescriptUnion                 Operator
   11              0.000017 hi def link typescriptFuncTypeArrow         Function
   11              0.000016 hi def link typescriptConstructorType       Function
   11              0.000016 hi def link typescriptTypeQuery             Keyword
   11              0.000017 hi def link typescriptAccessibilityModifier Keyword
   11              0.000020 hi def link typescriptOptionalMark          PreProc
   11              0.000015 hi def link typescriptFuncType              Special
   11              0.000015 hi def link typescriptMappedIn              Special
   11              0.000016 hi def link typescriptCall                  PreProc
   11              0.000015 hi def link typescriptParamImpl             PreProc
   11              0.000017 hi def link typescriptConstructSignature    Identifier
   11              0.000017 hi def link typescriptAliasDeclaration      Identifier
   11              0.000015 hi def link typescriptAliasKeyword          Keyword
   11              0.000016 hi def link typescriptUserDefinedType       Keyword
   11              0.000016 hi def link typescriptTypeReference         Identifier
   11              0.000016 hi def link typescriptConstructor           Keyword
   11              0.000015 hi def link typescriptDecorator             Special
   11              0.000015 hi def link typescriptAssertType            Keyword
                            
   11              0.000012 hi link typeScript             NONE
                            
   11              0.000114 if exists('s:cpo_save')
   11              0.000175   let &cpo = s:cpo_save
   11              0.000028   unlet s:cpo_save
   11              0.000125 endif

SCRIPT  C:\Users\ds13\AppData\Local\nvim-data\site\pack\packer\start\splitjoin.vim\ftplugin\typescriptreact\splitjoin.vim
Sourced 1 time
Total time:   0.003904
 Self time:   0.003605

count  total (s)   self (s)
    1   0.003870   0.003570 runtime ftplugin/tsx/splitjoin.vim

SCRIPT  C:\Users\ds13\AppData\Local\nvim-data\site\pack\packer\start\splitjoin.vim\ftplugin\tsx\splitjoin.vim
Sourced 1 time
Total time:   0.000285
 Self time:   0.000285

count  total (s)   self (s)
    1              0.000028 let b:splitjoin_split_callbacks = [
                                  \ 'sj#jsx#SplitJsxExpression',
                                  \ 'sj#html#SplitTags',
                                  \ 'sj#html#SplitAttributes',
                                  \ 'sj#js#SplitObjectLiteral',
                                  \ 'sj#js#SplitFatArrowFunction',
                                  \ 'sj#js#SplitArray',
                                  \ 'sj#js#SplitFunction',
                                  \ 'sj#js#SplitOneLineIf',
                                  \ 'sj#js#SplitArgs',
                                  \ 'sj#jsx#SplitSelfClosingTag'
                                  \ ]
                            
    1              0.000021 let b:splitjoin_join_callbacks = [
                                  \ 'sj#jsx#JoinJsxExpression',
                                  \ 'sj#html#JoinAttributes',
                                  \ 'sj#jsx#JoinHtmlTag',
                                  \ 'sj#js#JoinFatArrowFunction',
                                  \ 'sj#js#JoinArray',
                                  \ 'sj#js#JoinArgs',
                                  \ 'sj#js#JoinFunction',
                                  \ 'sj#js#JoinOneLineIf',
                                  \ 'sj#js#JoinObjectLiteral',
                                  \ ]

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\ftplugin\typescriptreact.vim
Sourced 1 time
Total time:   0.007565
 Self time:   0.007333

count  total (s)   self (s)
                            " Vim filetype plugin file
                            " Language:	TypeScript React
                            " Maintainer:	Doug Kearns <dougkearns@gmail.com>
                            " Last Change:	2020 Aug 09
                            
    1              0.000009 let s:match_words = ""
    1              0.000002 let s:undo_ftplugin = ""
                            
    1   0.007459   0.007227 runtime! ftplugin/typescript.vim
                            
    1              0.000007 let s:cpo_save = &cpo
    1              0.000007 set cpo-=C
                            
    1              0.000004 if exists("b:match_words")
                                let s:match_words = b:match_words
    1              0.000001 endif
    1              0.000003 if exists("b:undo_ftplugin")
    1              0.000002     let s:undo_ftplugin = b:undo_ftplugin
    1              0.000001 endif
                            
                            " Matchit configuration
    1              0.000002 if exists("loaded_matchit")
    1              0.000002     let b:match_ignorecase = 0
    1              0.000007     let b:match_words = s:match_words .
                            		\	'<:>,' .
                            		\	'<\@<=\([^ \t>/]\+\)\%(\s\+[^>]*\%([^/]>\|$\)\|>\|$\):<\@<=/\1>,' .
                            		\	'<\@<=\%([^ \t>/]\+\)\%(\s\+[^/>]*\|$\):/>'
    1              0.000001 endif
                            
    1              0.000003 let b:undo_ftplugin = "unlet! b:match_words b:match_ignorecase | " . s:undo_ftplugin
                            
    1              0.000006 let &cpo = s:cpo_save
    1              0.000010 unlet s:cpo_save

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\ftplugin\typescript.vim
Sourced 2 times
Total time:   0.000430
 Self time:   0.000430

count  total (s)   self (s)
                            " Vim filetype plugin file
                            " Language:	TypeScript
                            " Maintainer:	Doug Kearns <dougkearns@gmail.com>
                            " Last Change:	2019 Aug 30
                            
    2              0.000033 if exists("b:did_ftplugin")
                              finish
    2              0.000002 endif
    2              0.000008 let b:did_ftplugin = 1
                            
    2              0.000027 let s:cpo_save = &cpo
    2              0.000023 set cpo-=C
                            
                            " Set 'formatoptions' to break comment lines but not other lines,
                            " and insert the comment leader when hitting <CR> or using "o".
    2              0.000021 setlocal formatoptions-=t formatoptions+=croql
                            
                            " Set 'comments' to format dashed lists in comments.
    2              0.000009 setlocal comments=sO:*\ -,mO:*\ \ ,exO:*/,s1:/*,mb:*,ex:*/,://
                            
    2              0.000015 setlocal commentstring=//%s
                            
    2              0.000006 setlocal suffixesadd+=.ts,.d.ts,.tsx,.js,.jsx,.cjs,.mjs
                            
                            " Change the :browse e filter to primarily show TypeScript-related files.
    2              0.000088 if (has("gui_win32") || has("gui_gtk")) && !exists("b:browsefilter")
                                let  b:browsefilter="TypeScript Files (*.ts)\t*.ts\n" .
                            		\	"TypeScript Declaration Files (*.d.ts)\t*.d.ts\n" .
                            		\	"TSX Files (*.tsx)\t*.tsx\n" .
                            		\	"JavaScript Files (*.js)\t*.js\n" .
                            		\	"JavaScript Modules (*.es, *.cjs, *.mjs)\t*.es;*.cjs;*.mjs\n" .
                            		\	"JSON Files (*.json)\t*.json\n" .
                            		\	"All Files (*.*)\t*.*\n"
    2              0.000002 endif
                                   
    2              0.000005 let b:undo_ftplugin = "setl fo< com< cms< sua< | unlet! b:browsefilter" 
                            
    2              0.000027 let &cpo = s:cpo_save
    2              0.000033 unlet s:cpo_save

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\ftplugin\qf.vim
Sourced 1 time
Total time:   0.000135
 Self time:   0.000135

count  total (s)   self (s)
                            " Vim filetype plugin file
                            " Language:     Vim's quickfix window
                            " Maintainer:   Lech Lorens <Lech.Lorens@gmail.com>
                            " Last Change: 	2019 Jul 15
                            
    1              0.000011 if exists("b:did_ftplugin")
                              finish
    1              0.000001 endif
                            
                            " Don't load another plugin for this buffer
    1              0.000004 let b:did_ftplugin = 1
                            
    1              0.000004 if !get(g:, 'qf_disable_statusline')
    1              0.000002   let b:undo_ftplugin = "set stl<"
                            
                              " Display the command that produced the list in the quickfix window:
    1              0.000012   setlocal stl=%t%{exists('w:quickfix_title')?\ '\ '.w:quickfix_title\ :\ ''}\ %=%-15(%l,%c%V%)\ %P
    1              0.000001 endif
                            
    1              0.000005 function! s:setup_toc() abort
                              if get(w:, 'quickfix_title') !~# '\<TOC$' || &syntax != 'qf'
                                return
                              endif
                            
                              let list = getloclist(0)
                              if empty(list)
                                return
                              endif
                            
                              let bufnr = list[0].bufnr
                              setlocal modifiable
                              silent %delete _
                              call setline(1, map(list, 'v:val.text'))
                              setlocal nomodifiable nomodified
                              let &syntax = getbufvar(bufnr, '&syntax')
                            endfunction
                            
    1              0.000003 augroup qf_toc
    1              0.000022   autocmd!
    1              0.000008   autocmd Syntax <buffer> call s:setup_toc()
    1              0.000011 augroup END

SCRIPT  C:\Users\ds13\AppData\Local\nvim-data\site\pack\packer\start\nvim-bqf\after\ftplugin\qf\bqf.vim
Sourced 1 time
Total time:   0.084820
 Self time:   0.084820

count  total (s)   self (s)
    1              0.000026 if !has('nvim-0.6.1')
                                call v:lua.vim.notify('nvim-bqf failed to initialize, RTFM.')
                                finish
    1              0.000001 endif
                            
    1              0.000011 com! -buffer BqfEnable lua require('bqf').enable()
    1              0.000009 com! -buffer BqfDisable lua require('bqf').disable()
    1              0.000009 com! -buffer BqfToggle lua require('bqf').toggle()
                            
    1              0.084730 lua require('bqf').bootstrap()

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\syntax\qf.vim
Sourced 1 time
Total time:   0.000086
 Self time:   0.000086

count  total (s)   self (s)
                            " Vim syntax file
                            " Language:	Quickfix window
                            " Maintainer:	Bram Moolenaar <Bram@vim.org>
                            " Last change:	2001 Jan 15
                            
                            " Quit when a syntax file was already loaded
    1              0.000011 if exists("b:current_syntax")
                              finish
    1              0.000001 endif
                            
                            " A bunch of useful C keywords
    1              0.000015 syn match	qfFileName	"^[^|]*" nextgroup=qfSeparator
    1              0.000006 syn match	qfSeparator	"|" nextgroup=qfLineNr contained
    1              0.000005 syn match	qfLineNr	"[^|]*" contained contains=qfError
    1              0.000004 syn match	qfError		"error" contained
                            
                            " The default highlighting.
    1              0.000003 hi def link qfFileName	Directory
    1              0.000001 hi def link qfLineNr	LineNr
    1              0.000001 hi def link qfError	Error
                            
    1              0.000004 let b:current_syntax = "qf"
                            
                            " vim: ts=8

SCRIPT  C:\Users\ds13\AppData\Local\nvim-data\site\pack\packer\start\splitjoin.vim\ftplugin\scss\splitjoin.vim
Sourced 2 times
Total time:   0.000135
 Self time:   0.000135

count  total (s)   self (s)
    2              0.000032 if !exists('b:splitjoin_split_callbacks')
    2              0.000018   let b:splitjoin_split_callbacks = [
                                    \ 'sj#css#SplitMultilineSelector',
                                    \ 'sj#scss#SplitNestedDefinition',
                                    \ 'sj#css#SplitDefinition',
                                    \ ]
    2              0.000003 endif
                            
    2              0.000006 if !exists('b:splitjoin_join_callbacks')
    2              0.000011   let b:splitjoin_join_callbacks = [
                                    \ 'sj#scss#JoinNestedDefinition',
                                    \ 'sj#css#JoinDefinition',
                                    \ 'sj#css#JoinMultilineSelector',
                                    \ ]
    2              0.000017 endif

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\ftplugin\scss.vim
Sourced 2 times
Total time:   0.016996
 Self time:   0.016680

count  total (s)   self (s)
                            " Vim filetype plugin
                            " Language:	SCSS
                            " Maintainer:	Tim Pope <vimNOSPAM@tpope.org>
                            " Last Change:	2016 Aug 29
                            
    2              0.000023 if exists("b:did_ftplugin")
                              finish
    2              0.000002 endif
                            
    2   0.016826   0.016511 runtime! ftplugin/sass.vim
    2              0.000021 setlocal comments=s1:/*,mb:*,ex:*/,://
                            
                            " vim:set sw=2:

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\ftplugin\sass.vim
Sourced 2 times
Total time:   0.000246
 Self time:   0.000246

count  total (s)   self (s)
                            " Vim filetype plugin
                            " Language:	Sass
                            " Maintainer:	Tim Pope <vimNOSPAM@tpope.org>
                            " Last Change:	2019 Dec 05
                            
                            " Only do this when not done yet for this buffer
    2              0.000022 if exists("b:did_ftplugin")
                              finish
    2              0.000002 endif
    2              0.000008 let b:did_ftplugin = 1
                            
    2              0.000005 let b:undo_ftplugin = "setl com< cms< def< inc< inex< ofu< sua<"
                            
    2              0.000016 setlocal comments=://
    2              0.000008 setlocal commentstring=//\ %s
    2              0.000008 setlocal includeexpr=SassIncludeExpr(v:fname)
    2              0.000006 setlocal omnifunc=csscomplete#CompleteCSS
    2              0.000007 setlocal suffixesadd=.sass,.scss,.css
    2              0.000033 if &filetype =~# '\<s[ac]ss]\>'
                              setlocal iskeyword+=-
                              setlocal iskeyword+=$
                              setlocal iskeyword+=%
                              let b:undo_ftplugin .= ' isk<'
    2              0.000001 endif
                            
    2              0.000010 let &l:define = '^\C\v\s*%(\@function|\@mixin|\=)|^\s*%(\$[[:alnum:]-]+:|[%.][:alnum:]-]+\s*%(\{|$))@='
    2              0.000006 let &l:include = '^\s*@import\s\+\%(url(\)\=["'']\='
                            
    2              0.000008 function! SassIncludeExpr(file) abort
                              let partial = substitute(a:file, '\%(.*/\|^\)\zs', '_', '')
                              if !empty(findfile(partial))
                                return partial
                              endif
                              return a:file
                            endfunction
                            
                            " vim:set sw=2:

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\indent\scss.vim
Sourced 2 times
Total time:   0.017470
 Self time:   0.017122

count  total (s)   self (s)
                            " Vim indent file
                            " Language:	SCSS
                            " Maintainer:	Tim Pope <vimNOSPAM@tpope.org>
                            " Last Change:	2010 Jul 26
                            
    2              0.000021 if exists("b:did_indent")
                              finish
    2              0.000002 endif
                            
    2   0.017369   0.017021 runtime! indent/css.vim
                            
                            " vim:set sw=2:

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\indent\css.vim
Sourced 3 times
Total time:   0.000519
 Self time:   0.000519

count  total (s)   self (s)
                            " Vim indent file
                            " Language:		CSS
                            " Maintainer:		Doug Kearns <dougkearns@gmail.com>
                            " Previous Maintainer:	Nikolai Weibull <now@bitwi.se>
                            " Last Change:		24 Sep 2021
                            
                            " Use of shiftwidth() added by Oleg Zubchenko.
                            
    3              0.000203 if exists("b:did_indent")
                              finish
    3              0.000004 endif
    3              0.000012 let b:did_indent = 1
                            
    3              0.000029 setlocal indentexpr=GetCSSIndent()
    3              0.000012 setlocal indentkeys=0{,0},!^F,o,O
    3              0.000019 setlocal nosmartindent
                            
    3              0.000008 let b:undo_indent = "setl inde< indk< si<"
                            
    3              0.000011 if exists("*GetCSSIndent")
    2              0.000003   finish
    1              0.000001 endif
    1              0.000007 let s:keepcpo= &cpo
    1              0.000006 set cpo&vim
                            
    1              0.000003 function s:prevnonblanknoncomment(lnum)
                              let lnum = a:lnum
                              while lnum > 1
                                let lnum = prevnonblank(lnum)
                                let line = getline(lnum)
                                if line =~ '\*/'
                                  while lnum > 1 && line !~ '/\*'
                                    let lnum -= 1
                                  endwhile
                                  if line =~ '^\s*/\*'
                                    let lnum -= 1
                                  else
                                    break
                                  endif
                                else
                                  break
                                endif
                              endwhile
                              return lnum
                            endfunction
                            
    1              0.000002 function s:count_braces(lnum, count_open)
                              let n_open = 0
                              let n_close = 0
                              let line = getline(a:lnum)
                              let pattern = '[{}]'
                              let i = match(line, pattern)
                              while i != -1
                                if synIDattr(synID(a:lnum, i + 1, 0), 'name') !~ 'css\%(Comment\|StringQ\{1,2}\)'
                                  if line[i] == '{'
                                    let n_open += 1
                                  elseif line[i] == '}'
                                    if n_open > 0
                                      let n_open -= 1
                                    else
                                      let n_close += 1
                                    endif
                                  endif
                                endif
                                let i = match(line, pattern, i + 1)
                              endwhile
                              return a:count_open ? n_open : n_close
                            endfunction
                            
    1              0.000001 function GetCSSIndent()
                              let line = getline(v:lnum)
                              if line =~ '^\s*\*'
                                return cindent(v:lnum)
                              endif
                            
                              let pnum = s:prevnonblanknoncomment(v:lnum - 1)
                              if pnum == 0
                                return 0
                              endif
                            
                              return indent(pnum) + s:count_braces(pnum, 1) * shiftwidth()
                                    \ - s:count_braces(v:lnum, 0) * shiftwidth()
                            endfunction
                            
    1              0.000007 let &cpo = s:keepcpo
    1              0.000013 unlet s:keepcpo

SCRIPT  C:\Users\ds13\AppData\Local\nvim-data\site\pack\packer\opt\vim-repeat\autoload\repeat.vim
Sourced 1 time
Total time:   0.000544
 Self time:   0.000544

count  total (s)   self (s)
                            " repeat.vim - Let the repeat command repeat plugin maps
                            " Maintainer:   Tim Pope
                            " Version:      1.2
                            " GetLatestVimScripts: 2136 1 :AutoInstall: repeat.vim
                            
                            " Installation:
                            " Place in either ~/.vim/plugin/repeat.vim (to load at start up) or
                            " ~/.vim/autoload/repeat.vim (to load automatically as needed).
                            "
                            " License:
                            " Copyright (c) Tim Pope.  Distributed under the same terms as Vim itself.
                            " See :help license
                            "
                            " Developers:
                            " Basic usage is as follows:
                            "
                            "   silent! call repeat#set("\<Plug>MappingToRepeatCommand",3)
                            "
                            " The first argument is the mapping that will be invoked when the |.| key is
                            " pressed.  Typically, it will be the same as the mapping the user invoked.
                            " This sequence will be stuffed into the input queue literally.  Thus you must
                            " encode special keys by prefixing them with a backslash inside double quotes.
                            "
                            " The second argument is the default count.  This is the number that will be
                            " prefixed to the mapping if no explicit numeric argument was given.  The
                            " value of the v:count variable is usually correct and it will be used if the
                            " second parameter is omitted.  If your mapping doesn't accept a numeric
                            " argument and you never want to receive one, pass a value of -1.
                            "
                            " Make sure to call the repeat#set function _after_ making changes to the
                            " file.
                            "
                            " For mappings that use a register and want the same register used on
                            " repetition, use:
                            "
                            "   silent! call repeat#setreg("\<Plug>MappingToRepeatCommand", v:register)
                            "
                            " This function can (and probably needs to be) called before making changes to
                            " the file (as those typically clear v:register).  Therefore, the call sequence
                            " in your mapping will look like this:
                            "
                            "   nnoremap <silent> <Plug>MyMap
                            "   \   :<C-U>execute 'silent! call repeat#setreg("\<lt>Plug>MyMap", v:register)'<Bar>
                            "   \   call <SID>MyFunction(v:register, ...)<Bar>
                            "   \   silent! call repeat#set("\<lt>Plug>MyMap")<CR>
                            
    1              0.000020 if exists("g:loaded_repeat") || &cp || v:version < 700
                                finish
    1              0.000001 endif
    1              0.000004 let g:loaded_repeat = 1
                            
    1              0.000002 let g:repeat_tick = -1
    1              0.000003 let g:repeat_reg = ['', '']
                            
                            " Special function to avoid spurious repeats in a related, naturally repeating
                            " mapping when your repeatable mapping doesn't increase b:changedtick.
    1              0.000003 function! repeat#invalidate()
                                autocmd! repeat_custom_motion
                                let g:repeat_tick = -1
                            endfunction
                            
    1              0.000002 function! repeat#set(sequence,...)
                                let g:repeat_sequence = a:sequence
                                let g:repeat_count = a:0 ? a:1 : v:count
                                let g:repeat_tick = b:changedtick
                                augroup repeat_custom_motion
                                    autocmd!
                                    autocmd CursorMoved <buffer> let g:repeat_tick = b:changedtick | autocmd! repeat_custom_motion
                                augroup END
                            endfunction
                            
    1              0.000002 function! repeat#setreg(sequence,register)
                                let g:repeat_reg = [a:sequence, a:register]
                            endfunction
                            
                            
    1              0.000003 function! s:default_register()
                                let values = split(&clipboard, ',')
                                if index(values, 'unnamedplus') != -1
                                    return '+'
                                elseif index(values, 'unnamed') != -1
                                    return '*'
                                else
                                    return '"'
                                endif
                            endfunction
                            
    1              0.000002 function! repeat#run(count)
                                let s:errmsg = ''
                                try
                                    if g:repeat_tick == b:changedtick
                                        let r = ''
                                        if g:repeat_reg[0] ==# g:repeat_sequence && !empty(g:repeat_reg[1])
                                            " Take the original register, unless another (non-default, we
                                            " unfortunately cannot detect no vs. a given default register)
                                            " register has been supplied to the repeat command (as an
                                            " explicit override).
                                            let regname = v:register ==# s:default_register() ? g:repeat_reg[1] : v:register
                                            if regname ==# '='
                                                " This causes a re-evaluation of the expression on repeat, which
                                                " is what we want.
                                                let r = '"=' . getreg('=', 1) . "\<CR>"
                                            else
                                                let r = '"' . regname
                                            endif
                                        endif
                            
                                        let c = g:repeat_count
                                        let s = g:repeat_sequence
                                        let cnt = c == -1 ? "" : (a:count ? a:count : (c ? c : ''))
                                        if ((v:version == 703 && has('patch100')) || (v:version == 704 && !has('patch601')))
                                            exe 'norm ' . r . cnt . s
                                        elseif v:version <= 703
                                            call feedkeys(r . cnt, 'n')
                                            call feedkeys(s, '')
                                        else
                                            call feedkeys(s, 'i')
                                            call feedkeys(r . cnt, 'ni')
                                        endif
                                    else
                                        if ((v:version == 703 && has('patch100')) || (v:version == 704 && !has('patch601')))
                                            exe 'norm! '.(a:count ? a:count : '') . '.'
                                        else
                                            call feedkeys((a:count ? a:count : '') . '.', 'ni')
                                        endif
                                    endif
                                catch /^Vim(normal):/
                                    let s:errmsg = v:errmsg
                                    return 0
                                endtry
                                return 1
                            endfunction
    1              0.000002 function! repeat#errmsg()
                                return s:errmsg
                            endfunction
                            
    1              0.000002 function! repeat#wrap(command,count)
                                let preserve = (g:repeat_tick == b:changedtick)
                                call feedkeys((a:count ? a:count : '').a:command, 'n')
                                exe (&foldopen =~# 'undo\|all' ? 'norm! zv' : '')
                                if preserve
                                    let g:repeat_tick = b:changedtick
                                endif
                            endfunction
                            
    1              0.000051 nnoremap <silent> <Plug>(RepeatDot)      :<C-U>if !repeat#run(v:count)<Bar>echoerr repeat#errmsg()<Bar>endif<CR>
    1              0.000017 nnoremap <silent> <Plug>(RepeatUndo)     :<C-U>call repeat#wrap('u',v:count)<CR>
    1              0.000017 nnoremap <silent> <Plug>(RepeatUndoLine) :<C-U>call repeat#wrap('U',v:count)<CR>
    1              0.000019 nnoremap <silent> <Plug>(RepeatRedo)     :<C-U>call repeat#wrap("\<Lt>C-R>",v:count)<CR>
                            
    1              0.000058 if !hasmapto('<Plug>(RepeatDot)', 'n')
    1              0.000008     nmap . <Plug>(RepeatDot)
    1              0.000002 endif
    1              0.000020 if !hasmapto('<Plug>(RepeatUndo)', 'n')
    1              0.000005     nmap u <Plug>(RepeatUndo)
    1              0.000001 endif
    1              0.000029 if maparg('U','n') ==# '' && !hasmapto('<Plug>(RepeatUndoLine)', 'n')
    1              0.000006     nmap U <Plug>(RepeatUndoLine)
    1              0.000001 endif
    1              0.000015 if !hasmapto('<Plug>(RepeatRedo)', 'n')
    1              0.000010     nmap <C-R> <Plug>(RepeatRedo)
    1              0.000001 endif
                            
    1              0.000004 augroup repeatPlugin
    1              0.000028     autocmd!
    1              0.000028     autocmd BufLeave,BufWritePre,BufReadPre * let g:repeat_tick = (g:repeat_tick == b:changedtick || g:repeat_tick == 0) ? 0 : -1
    1              0.000008     autocmd BufEnter,BufWritePost * if g:repeat_tick == 0|let g:repeat_tick = b:changedtick|endif
    1              0.000001 augroup END
                            
                            " vim:set ft=vim et sw=4 sts=4:

SCRIPT  C:\Users\ds13\AppData\Local\nvim-data\site\pack\packer\start\telescope.nvim\ftplugin\TelescopePrompt.lua
Sourced 18 times
Total time:   0.003930
 Self time:   0.003930

count  total (s)   self (s)
                            -- Don't wrap textwidth things
                            vim.opt_local.formatoptions:remove "t"
                            vim.opt_local.formatoptions:remove "c"
                            
                            -- Don't include `showbreak` when calculating strdisplaywidth
                            vim.opt_local.wrap = false
                            
                            -- There's also no reason to enable textwidth here anyway
                            vim.opt_local.textwidth = 0
                            vim.opt_local.scrollbind = false
                            
                            vim.opt_local.signcolumn = "no"

SCRIPT  C:\Users\ds13\AppData\Local\nvim-data\site\pack\packer\start\telescope.nvim\ftplugin\TelescopeResults.lua
Sourced 18 times
Total time:   0.003081
 Self time:   0.003081

count  total (s)   self (s)
                            -- Don't have scrolloff, it makes things weird.
                            vim.opt_local.scrolloff = 0
                            vim.opt_local.scrollbind = false
                            
                            vim.opt_local.signcolumn = "no"

SCRIPT  C:\Users\ds13\AppData\Local\nvim-data\site\pack\packer\start\splitjoin.vim\ftplugin\vim\splitjoin.vim
Sourced 3 times
Total time:   0.000219
 Self time:   0.000219

count  total (s)   self (s)
    3              0.000048 if !exists('b:splitjoin_split_callbacks')
    2              0.000017   let b:splitjoin_split_callbacks = [
                                    \ 'sj#vim#SplitIfClause',
                                    \ 'sj#vim#Split',
                                    \ ]
    3              0.000004 endif
                            
    3              0.000009 if !exists('b:splitjoin_join_callbacks')
    2              0.000008   let b:splitjoin_join_callbacks = [
                                    \ 'sj#vim#JoinIfClause',
                                    \ 'sj#vim#Join',
                                    \ ]
    3              0.000028 endif

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\ftplugin\vim.vim
Sourced 3 times
Total time:   0.001587
 Self time:   0.001587

count  total (s)   self (s)
                            " Vim filetype plugin
                            " Language:	Vim
                            " Maintainer:	Bram Moolenaar <Bram@vim.org>
                            " Last Change:	2022 Sep 09
                            
                            " Only do this when not done yet for this buffer
    3              0.000036 if exists("b:did_ftplugin")
                              finish
    3              0.000003 endif
                            
                            " Don't load another plugin for this buffer
    3              0.000012 let b:did_ftplugin = 1
                            
    3              0.000022 let s:cpo_save = &cpo
    3              0.000028 set cpo&vim
                            
    3              0.000013 if !exists('*VimFtpluginUndo')
    1              0.000002   func VimFtpluginUndo()
                                setl fo< isk< com< tw< commentstring< keywordprg<
                                if exists('b:did_add_maps')
                                  silent! nunmap <buffer> [[
                                  silent! vunmap <buffer> [[
                                  silent! nunmap <buffer> ]]
                                  silent! vunmap <buffer> ]]
                                  silent! nunmap <buffer> []
                                  silent! vunmap <buffer> []
                                  silent! nunmap <buffer> ][
                                  silent! vunmap <buffer> ][
                                  silent! nunmap <buffer> ]"
                                  silent! vunmap <buffer> ]"
                                  silent! nunmap <buffer> ["
                                  silent! vunmap <buffer> ["
                                 endif
                                unlet! b:match_ignorecase b:match_words b:match_skip b:did_add_maps
                              endfunc
    3              0.000002 endif
                            
    3              0.000006 let b:undo_ftplugin = "call VimFtpluginUndo()"
                            
                            " Set 'formatoptions' to break comment lines but not other lines,
                            " and insert the comment leader when hitting <CR> or using "o".
    3              0.000026 setlocal fo-=t fo+=croql
                            
                            " To allow tag lookup via CTRL-] for autoload functions, '#' must be a
                            " keyword character.  E.g., for netrw#Nread().
    3              0.000103 setlocal isk+=#
                            
                            " Use :help to lookup the keyword under the cursor with K.
    3              0.000008 setlocal keywordprg=:help
                            
                            " if "\n" .. getline(1, 10)->join("\n") =~# '\n\s*vim9\%[script]\>'
    3              0.000082 if "\n" .. join(getline(1, 10), "\n") =~# '\n\s*vim9\%[script]\>'
                              " Set 'comments' to format dashed lists in comments
                              setlocal com=sO:#\ -,mO:#\ \ ,eO:##,:#
                              " Comments starts with # in Vim9 script
                              setlocal commentstring=#%s
    3              0.000003 else
    3              0.000017   setlocal com=sO:\"\ -,mO:\"\ \ ,eO:\"\",:\"
                              " Comments starts with a double quote in legacy script
    3              0.000008   setlocal commentstring=\"%s
    3              0.000002 endif
                            
                            
                            " Format comments to be up to 78 characters long
    3              0.000047 if &tw == 0
                              setlocal tw=78
    3              0.000002 endif
                            
                            " Prefer Vim help instead of manpages.
    3              0.000008 setlocal keywordprg=:help
                            
    3              0.000014 if !exists("no_plugin_maps") && !exists("no_vim_maps")
    3              0.000006   let b:did_add_maps = 1
                            
                              " Move around functions.
    3              0.000063   nnoremap <silent><buffer> [[ m':call search('^\s*\(fu\%[nction]\\|def\)\>', "bW")<CR>
    3              0.000073   vnoremap <silent><buffer> [[ m':<C-U>exe "normal! gv"<Bar>call search('^\s*\(fu\%[nction]\\|def\)\>', "bW")<CR>
    3              0.000051   nnoremap <silent><buffer> ]] m':call search('^\s*\(fu\%[nction]\\|def\)\>', "W")<CR>
    3              0.000068   vnoremap <silent><buffer> ]] m':<C-U>exe "normal! gv"<Bar>call search('^\s*\(fu\%[nction]\\|def\)\>', "W")<CR>
    3              0.000054   nnoremap <silent><buffer> [] m':call search('^\s*end\(f\%[unction]\\|def\)\>', "bW")<CR>
    3              0.000072   vnoremap <silent><buffer> [] m':<C-U>exe "normal! gv"<Bar>call search('^\s*end\(f\%[unction]\\|def\)\>', "bW")<CR>
    3              0.000051   nnoremap <silent><buffer> ][ m':call search('^\s*end\(f\%[unction]\\|def\)\>', "W")<CR>
    3              0.000070   vnoremap <silent><buffer> ][ m':<C-U>exe "normal! gv"<Bar>call search('^\s*end\(f\%[unction]\\|def\)\>', "W")<CR>
                            
                              " Move around comments
    3              0.000047   nnoremap <silent><buffer> ]" :call search('^\(\s*".*\n\)\@<!\(\s*"\)', "W")<CR>
    3              0.000066   vnoremap <silent><buffer> ]" :<C-U>exe "normal! gv"<Bar>call search('^\(\s*".*\n\)\@<!\(\s*"\)', "W")<CR>
    3              0.000048   nnoremap <silent><buffer> [" :call search('\%(^\s*".*\n\)\%(^\s*"\)\@!', "bW")<CR>
    3              0.000065   vnoremap <silent><buffer> [" :<C-U>exe "normal! gv"<Bar>call search('\%(^\s*".*\n\)\%(^\s*"\)\@!', "bW")<CR>
    3              0.000002 endif
                            
                            " Let the matchit plugin know what items can be matched.
    3              0.000008 if exists("loaded_matchit")
    3              0.000006   let b:match_ignorecase = 0
                              " "func" can also be used as a type:
                              "   var Ref: func
                              " or to list functions:
                              "   func name
                              " require a parenthesis following, then there can be an "endfunc".
    3              0.000085   let b:match_words =
                            	\ '\<\%(fu\%[nction]\|def\)!\=\s\+\S\+(:\%(\%(^\||\)\s*\)\@<=\<retu\%[rn]\>:\%(\%(^\||\)\s*\)\@<=\<\%(endf\%[unction]\|enddef\)\>,' .
                            	\ '\<\(wh\%[ile]\|for\)\>:\%(\%(^\||\)\s*\)\@<=\<brea\%[k]\>:\%(\%(^\||\)\s*\)\@<=\<con\%[tinue]\>:\%(\%(^\||\)\s*\)\@<=\<end\(w\%[hile]\|fo\%[r]\)\>,' .
                            	\ '\<if\>:\%(\%(^\||\)\s*\)\@<=\<el\%[seif]\>:\%(\%(^\||\)\s*\)\@<=\<en\%[dif]\>,' .
                            	\ '{:},' .
                            	\ '\<try\>:\%(\%(^\||\)\s*\)\@<=\<cat\%[ch]\>:\%(\%(^\||\)\s*\)\@<=\<fina\%[lly]\>:\%(\%(^\||\)\s*\)\@<=\<endt\%[ry]\>,' .
                            	\ '\<aug\%[roup]\s\+\%(END\>\)\@!\S:\<aug\%[roup]\s\+END\>,'
                              " Ignore syntax region commands and settings, any 'en*' would clobber
                              " if-endif.
                              " - set spl=de,en
                              " - au! FileType javascript syntax region foldBraces start=/{/ end=/}/ …
    3              0.000011   let b:match_skip = 'synIDattr(synID(line("."),col("."),1),"name")
                                    \ =~? "comment\\|string\\|vimLetHereDoc\\|vimSynReg\\|vimSet"'
    3              0.000002 endif
                            
    3              0.000022 let &cpo = s:cpo_save
    3              0.000006 unlet s:cpo_save
                            
                            " removed this, because 'cpoptions' is a global option.
                            " setlocal cpo+=M		" makes \%( match \)

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\indent\vim.vim
Sourced 3 times
Total time:   0.000426
 Self time:   0.000426

count  total (s)   self (s)
                            " Vim indent file
                            " Language:	Vim script
                            " Maintainer:	Bram Moolenaar <Bram@vim.org>
                            " Last Change:	2022 Jun 24
                            
                            " Only load this indent file when no other was loaded.
    3              0.000042 if exists("b:did_indent")
                              finish
    3              0.000003 endif
    3              0.000012 let b:did_indent = 1
                            
    3              0.000028 setlocal indentexpr=GetVimIndent()
    3              0.000017 setlocal indentkeys+==endif,=enddef,=endfu,=endfor,=endwh,=endtry,=},=else,=cat,=finall,=END,0\\,0=\"\\\ 
    3              0.000009 setlocal indentkeys-=0#
    3              0.000009 setlocal indentkeys-=:
                            
    3              0.000007 let b:undo_indent = "setl indentkeys< indentexpr<"
                            
                            " Only define the function once.
    3              0.000010 if exists("*GetVimIndent")
    2              0.000002   finish
    1              0.000001 endif
    1              0.000007 let s:keepcpo= &cpo
    1              0.000005 set cpo&vim
                            
    1              0.000003 function GetVimIndent()
                              let ignorecase_save = &ignorecase
                              try
                                let &ignorecase = 0
                                return GetVimIndentIntern()
                              finally
                                let &ignorecase = ignorecase_save
                              endtry
                            endfunc
                            
                            " Legacy script line continuation and Vim9 script operators that must mean an
                            " expression that continues from the previous line.
    1              0.000002 let s:lineContPat = '^\s*\(\\\|"\\ \|->\)'
                            
    1              0.000002 function GetVimIndentIntern()
                              " If the current line has line continuation and the previous one too, use
                              " the same indent.  This does not skip empty lines.
                              let cur_text = getline(v:lnum)
                              let cur_has_linecont = cur_text =~ s:lineContPat
                              if cur_has_linecont && v:lnum > 1 && getline(v:lnum - 1) =~ s:lineContPat
                                return indent(v:lnum - 1)
                              endif
                            
                              " Find a non-blank line above the current line.
                              let lnum = prevnonblank(v:lnum - 1)
                            
                              " The previous line, ignoring line continuation
                              let prev_text_end = lnum > 0 ? getline(lnum) : ''
                            
                              " If the current line doesn't start with '\' or '"\ ' and below a line that
                              " starts with '\' or '"\ ', use the indent of the line above it.
                              if !cur_has_linecont
                                while lnum > 0 && getline(lnum) =~ s:lineContPat
                                  let lnum = lnum - 1
                                endwhile
                              endif
                            
                              " At the start of the file use zero indent.
                              if lnum == 0
                                return 0
                              endif
                            
                              " the start of the previous line, skipping over line continuation
                              let prev_text = getline(lnum)
                              let found_cont = 0
                            
                              " Add a 'shiftwidth' after :if, :while, :try, :catch, :finally, :function
                              " and :else.  Add it three times for a line that starts with '\' or '"\ '
                              " after a line that doesn't (or g:vim_indent_cont if it exists).
                              let ind = indent(lnum)
                            
                              " In heredoc indenting works completely differently.
                              if has('syntax_items') 
                                let syn_here = synIDattr(synID(v:lnum, 1, 1), "name")
                                if syn_here =~ 'vimLetHereDocStop'
                                  " End of heredoc: use indent of matching start line
                                  let lnum = v:lnum - 1
                                  while lnum > 0
                            	let attr = synIDattr(synID(lnum, 1, 1), "name")
                            	if attr != '' && attr !~ 'vimLetHereDoc'
                            	  return indent(lnum)
                            	endif
                            	let lnum -= 1
                                  endwhile
                                  return 0
                                endif
                                if syn_here =~ 'vimLetHereDoc'
                                  if synIDattr(synID(lnum, 1, 1), "name") !~ 'vimLetHereDoc'
                            	" First line in heredoc: increase indent
                            	return ind + shiftwidth()
                                  endif
                                  " Heredoc continues: no change in indent
                                  return ind
                                endif
                              endif
                            
                              if cur_text =~ s:lineContPat && v:lnum > 1 && prev_text !~ s:lineContPat
                                let found_cont = 1
                                if exists("g:vim_indent_cont")
                                  let ind = ind + g:vim_indent_cont
                                else
                                  let ind = ind + shiftwidth() * 3
                                endif
                              elseif prev_text =~ '^\s*aug\%[roup]\s\+' && prev_text !~ '^\s*aug\%[roup]\s\+[eE][nN][dD]\>'
                                let ind = ind + shiftwidth()
                              else
                                " A line starting with :au does not increment/decrement indent.
                                " A { may start a block or a dict.  Assume that when a } follows it's a
                                " terminated dict.
                                " ":function" starts a block but "function(" doesn't.
                                if prev_text !~ '^\s*au\%[tocmd]' && prev_text !~ '^\s*{.*}'
                                  let i = match(prev_text, '\(^\||\)\s*\(export\s\+\)\?\({\|\(if\|wh\%[ile]\|for\|try\|cat\%[ch]\|fina\|finall\%[y]\|def\|el\%[seif]\)\>\|fu\%[nction][! ]\)')
                                  if i >= 0
                                    let ind += shiftwidth()
                            	if strpart(prev_text, i, 1) == '|' && has('syntax_items')
                            	      \ && synIDattr(synID(lnum, i, 1), "name") =~ '\(Comment\|String\|PatSep\)$'
                            	  let ind -= shiftwidth()
                            	endif
                                  endif
                                endif
                              endif
                            
                              " If the previous line contains an "end" after a pipe, but not in an ":au"
                              " command.  And not when there is a backslash before the pipe.
                              " And when syntax HL is enabled avoid a match inside a string.
                              let i = match(prev_text, '[^\\]|\s*\(ene\@!\)')
                              if i > 0 && prev_text !~ '^\s*au\%[tocmd]'
                                if !has('syntax_items') || synIDattr(synID(lnum, i + 2, 1), "name") !~ '\(Comment\|String\)$'
                                  let ind = ind - shiftwidth()
                                endif
                              endif
                            
                              " For a line starting with "}" find the matching "{".  Align with that line,
                              " it is either the matching block start or dictionary start.
                              " Use the mapped "%" from matchit to find the match, otherwise we may match
                              " a { inside a comment or string.
                              if cur_text =~ '^\s*}'
                                if maparg('%') != ''
                                  exe v:lnum
                                  silent! normal %
                                  if line('.') < v:lnum
                            	let ind = indent('.')
                                  endif
                                else
                                  " todo: use searchpair() to find a match
                                endif
                              endif
                            
                              " Look back for a line to align with
                              while lnum > 1
                                " Below a line starting with "}" find the matching "{".
                                if prev_text =~ '^\s*}'
                                  if maparg('%') != ''
                            	exe lnum
                            	silent! normal %
                            	if line('.') < lnum
                            	  let lnum = line('.')
                            	  let ind = indent(lnum)
                            	  let prev_text = getline(lnum)
                            	else
                            	  break
                            	endif
                                  else
                            	" todo: use searchpair() to find a match
                            	break
                                  endif
                                elseif prev_text =~ s:lineContPat
                                  " looks like a continuation like, go back one line
                                  let lnum = lnum - 1
                                  let ind = indent(lnum)
                                  let prev_text = getline(lnum)
                                else
                                  break
                                endif
                              endwhile
                            
                              " Below a line starting with "]" we must be below the end of a list.
                              " Include a "}" and "},} in case a dictionary ends too.
                              if prev_text_end =~ '^\s*\(},\=\s*\)\=]'
                                let ind = ind - shiftwidth()
                              endif
                            
                              let ends_in_comment = has('syntax_items')
                            	\ && synIDattr(synID(lnum, len(getline(lnum)), 1), "name") =~ '\(Comment\|String\)$'
                            
                              " A line ending in "{" or "[" is most likely the start of a dict/list literal,
                              " indent the next line more.  Not for a continuation line or {{{.
                              if !ends_in_comment && prev_text_end =~ '\s[{[]\s*$' && !found_cont
                                let ind = ind + shiftwidth()
                              endif
                            
                              " Subtract a 'shiftwidth' on a :endif, :endwhile, :endfor, :catch, :finally,
                              " :endtry, :endfun, :enddef, :else and :augroup END.
                              " Although ":en" would be enough only match short command names as in
                              " 'indentkeys'.
                              if cur_text =~ '^\s*\(endif\|endwh\|endfor\|endtry\|endfu\|enddef\|cat\|finall\|else\|aug\%[roup]\s\+[eE][nN][dD]\)'
                                let ind = ind - shiftwidth()
                                if ind < 0
                                  let ind = 0
                                endif
                              endif
                            
                              return ind
                            endfunction
                            
    1              0.000008 let &cpo = s:keepcpo
    1              0.000002 unlet s:keepcpo
                            
                            " vim:sw=2

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\syntax\vim.vim
Sourced 7 times
Total time:   0.085512
 Self time:   0.063343

count  total (s)   self (s)
                            " Vim syntax file
                            
                            " #############################################################################
                            " #############################################################################
                            " Note: Be careful when merging the upstream version of this file.
                            "       Much of this is generated by scripts/genvimvim.lua
                            "       (installs to $VIMRUNTIME/syntax/vim/generated.vim)
                            " #############################################################################
                            " #############################################################################
                            
                            " Quit when a syntax file was already loaded {{{2
    7              0.000089 if exists("b:current_syntax")
                              finish
    7              0.000007 endif
    7              0.000064 let s:keepcpo = &cpo
    7              0.000065 set cpo&vim
                            
                            " vimTodo: contains common special-notices for comments {{{2
                            " Use the vimCommentGroup cluster to add your own.
    7              0.000045 syn keyword vimTodo contained	COMBAK	FIXME	TODO	XXX
    7              0.000051 syn cluster vimCommentGroup	contains=vimTodo,@Spell
                            
                            " Special and plugin vim commands {{{2
    7              0.000068 syn match   vimCommand contained	"\<z[-+^.=]\=\>"
    7              0.000043 syn keyword vimOnlyCommand contained	fix[del] op[en] sh[ell] P[rint]
    7              0.000116 syn keyword vimStdPlugin contained Arguments Asm Break Cfilter Clear Continue DiffOrig Evaluate Finish Gdb Lfilter Man N[ext] Over P[rint] Program Run S Source Step Stop Termdebug TermdebugCommand TOhtml Until Winbar XMLent XMLns
                            
                            " Vim-specific options {{{2
    7              0.000098 syn keyword vimOnlyOption contained	biosk bioskey cp compatible consk conskey cm cryptmethod edcompatible guipty key macatsui mzq mzquantum osfiletype oft renderoptions rop st shelltype sn shortname tenc termencoding ta textauto tx textmode tf ttyfast ttym ttymouse tbi ttybuiltin wiv weirdinvert
                            
                            " Turn-off setting variants
    7              0.000050 syn keyword vimOnlyOption contained	nobiosk nobioskey noconsk noconskey nocp nocompatible noguipty nomacatsui nosn noshortname nota notextauto notx notextmode notf nottyfast notbi nottybuiltin nowiv noweirdinvert
                            
                            " Invertible setting variants
    7              0.000045 syn keyword vimOnlyOption contained	invbiosk invbioskey invconsk invconskey invcp invcompatible invguipty invmacatsui invsn invshortname invta invtextauto invtx invtextmode invtf invttyfast invtbi invttybuiltin invwiv invweirdinvert
                            " termcap codes (which can also be set) {{{2
    7              0.000861 syn keyword vimTermOption contained	t_8b t_AB t_al t_bc t_ce t_cl t_Co t_Cs t_CV t_db t_DL t_Ds t_F1 t_F2 t_F3 t_F4 t_F5 t_F6 t_F7 t_F8 t_F9 t_fs t_IE t_IS t_k1 t_K1 t_k2 t_k3 t_K3 t_k4 t_K4 t_k5 t_K5 t_k6 t_K6 t_k7 t_K7 t_k8 t_K8 t_k9 t_K9 t_KA t_kb t_kB t_KB t_KC t_kd t_kD t_KD t_ke t_KE t_KF t_KG t_KH t_KI t_KJ t_KK t_kl t_KL t_kN t_kP t_kr t_ks t_ku t_le t_mb t_md t_me t_mr t_ms t_nd t_op t_RB t_RI t_RV t_Sb t_se t_Sf t_SI t_so t_sr t_SR t_te t_ti t_ts t_u7 t_ue t_us t_Us t_ut t_vb t_ve t_vi t_vs t_WP t_WS t_xn t_xs t_ZH t_ZR
    7              0.000034 syn keyword vimTermOption contained	t_8f t_AF t_AL t_cd t_Ce t_cm t_cs t_CS t_da t_dl t_ds t_EI t_kh t_kI
    7              0.000036 syn match   vimTermOption contained	"t_%1"
    7              0.000021 syn match   vimTermOption contained	"t_#2"
    7              0.000017 syn match   vimTermOption contained	"t_#4"
    7              0.000017 syn match   vimTermOption contained	"t_@7"
    7              0.000017 syn match   vimTermOption contained	"t_*7"
    7              0.000016 syn match   vimTermOption contained	"t_&8"
    7              0.000055 syn match   vimTermOption contained	"t_%i"
    7              0.000019 syn match   vimTermOption contained	"t_k;"
                            
                            " unsupported settings: these are supported by vi but don't do anything in vim {{{2
    7              0.000019 syn keyword vimErrSetting contained	hardtabs ht w1200 w300 w9600
                            "}}}2
    7              0.000015 syn case ignore
                            " Highlight commonly used Groupnames {{{2
    7              0.000122 syn keyword vimGroup contained	Comment Constant String Character Number Boolean Float Identifier Function Statement Conditional Repeat Label Operator Keyword Exception PreProc Include Define Macro PreCondit Type StorageClass Structure Typedef Special SpecialChar Tag Delimiter SpecialComment Debug Underlined Ignore Error Todo
                            
                            " Default highlighting groups {{{2
    7              0.000228 syn keyword vimHLGroup contained	ColorColumn Cursor CursorColumn CursorIM CursorLine CursorLineFold CursorLineNr CursorLineSign DiffAdd DiffChange DiffDelete DiffText Directory EndOfBuffer ErrorMsg FoldColumn Folded IncSearch LineNr MatchParen Menu MessageWindow ModeMsg MoreMsg NonText Normal Pmenu PmenuSbar PmenuSel PmenuThumb Question QuickFixLine Scrollbar Search SignColumn SpecialKey SpellBad SpellCap SpellLocal SpellRare StatusLine StatusLineNC TabLine TabLineFill TabLineSel Title Tooltip VertSplit Visual WarningMsg WildMenu
    7              0.000123 syn match vimHLGroup contained	"Conceal"
    7              0.000031 syn keyword vimOnlyHLGroup contained	LineNrAbove LineNrBelow StatusLineTerm Terminal VisualNOS
    7              0.000019 syn keyword nvimHLGroup contained	Substitute TermCursor TermCursorNC
                            "}}}2
    7              0.000012 syn case match
                            " Special Vim Highlighting (not automatic) {{{1
                            
                            " Set up folding commands {{{2
    7              0.000047 if exists("g:vimsyn_folding") && g:vimsyn_folding =~# '[afhlmpPrt]'
                             if g:vimsyn_folding =~# 'a'
                              com! -nargs=* VimFolda <args> fold
                             else
                              com! -nargs=* VimFolda <args>
                             endif
                             if g:vimsyn_folding =~# 'f'
                              com! -nargs=* VimFoldf <args> fold
                             else
                              com! -nargs=* VimFoldf <args>
                             endif
                             if g:vimsyn_folding =~# 'h'
                              com! -nargs=* VimFoldh <args> fold
                             else
                              com! -nargs=* VimFoldh <args>
                             endif
                             if g:vimsyn_folding =~# 'l'
                              com! -nargs=* VimFoldl <args> fold
                             else
                              com! -nargs=* VimFoldl <args>
                             endif
                             if g:vimsyn_folding =~# 'm'
                              com! -nargs=* VimFoldm <args> fold
                             else
                              com! -nargs=* VimFoldm <args>
                             endif
                             if g:vimsyn_folding =~# 'p'
                              com! -nargs=* VimFoldp <args> fold
                             else
                              com! -nargs=* VimFoldp <args>
                             endif
                             if g:vimsyn_folding =~# 'P'
                              com! -nargs=* VimFoldP <args> fold
                             else
                              com! -nargs=* VimFoldP <args>
                             endif
                             if g:vimsyn_folding =~# 'r'
                              com! -nargs=* VimFoldr <args> fold
                             else
                              com! -nargs=* VimFoldr <args>
                             endif
                             if g:vimsyn_folding =~# 't'
                              com! -nargs=* VimFoldt <args> fold
                             else
                              com! -nargs=* VimFoldt <args>
                             endif
    7              0.000006 else
    7              0.000142  com! -nargs=*	VimFolda	<args>
    7              0.000056  com! -nargs=*	VimFoldf	<args>
    7              0.000052  com! -nargs=*	VimFoldh	<args>
    7              0.000049  com! -nargs=*	VimFoldl	<args>
    7              0.000048  com! -nargs=*	VimFoldm	<args>
    7              0.000048  com! -nargs=*	VimFoldp	<args>
    7              0.000057  com! -nargs=*	VimFoldP	<args>
    7              0.000065  com! -nargs=*	VimFoldr	<args>
    7              0.000071  com! -nargs=*	VimFoldt	<args>
    7              0.000007 endif
                            
                            " Deprecated variable options {{{2
    7              0.000023 if exists("g:vim_minlines")
                             let g:vimsyn_minlines= g:vim_minlines
    7              0.000005 endif
    7              0.000015 if exists("g:vim_maxlines")
                             let g:vimsyn_maxlines= g:vim_maxlines
    7              0.000005 endif
    7              0.000017 if exists("g:vimsyntax_noerror")
                             let g:vimsyn_noerror= g:vimsyntax_noerror
    7              0.000004 endif
                            
                            " Variable options {{{2
    7              0.000014 if exists("g:vim_maxlines")
                             let s:vimsyn_maxlines= g:vim_maxlines
    7              0.000015 else
    7              0.000017  let s:vimsyn_maxlines= 60
    7              0.000005 endif
                            
                            " Numbers {{{2
                            " =======
    7              0.000098 syn match vimNumber	'\<\d\+\%(\.\d\+\%([eE][+-]\=\d\+\)\=\)\=' skipwhite nextgroup=vimGlobal,vimSubst,vimCommand,vimComment,vim9Comment
    7              0.000068 syn match vimNumber	'-\d\+\%(\.\d\+\%([eE][+-]\=\d\+\)\=\)\='  skipwhite nextgroup=vimGlobal,vimSubst,vimCommand,vimComment,vim9Comment
    7              0.000051 syn match vimNumber	'\<0[xX]\x\+'		       skipwhite nextgroup=vimGlobal,vimSubst,vimCommand,vimComment,vim9Comment
    7              0.000077 syn match vimNumber	'\%(^\|\A\)\zs#\x\{6}'             	       skipwhite nextgroup=vimGlobal,vimSubst,vimCommand,vimComment,vim9Comment
    7              0.000059 syn match vimNumber	'\<0[zZ][a-zA-Z0-9.]\+'                    skipwhite nextgroup=vimGlobal,vimSubst,vimCommand,vimComment,vim9Comment
    7              0.000056 syn match vimNumber	'0[0-7]\+'		       skipwhite nextgroup=vimGlobal,vimSubst,vimCommand,vimComment,vim9Comment
    7              0.000043 syn match vimNumber	'0[bB][01]\+'		       skipwhite nextgroup=vimGlobal,vimSubst,vimCommand,vimComment,vim9Comment
                            
                            " All vimCommands are contained by vimIsCommand. {{{2
    7              0.000087 syn match vimCmdSep	"[:|]\+"	skipwhite nextgroup=vimAddress,vimAutoCmd,vimEcho,vimIsCommand,vimExtCmd,vimFilter,vimLet,vimMap,vimMark,vimSet,vimSyntax,vimUserCmd
    7              0.000030 syn match vimIsCommand	"\<\h\w*\>"	contains=vimCommand
    7              0.000029 syn match vimVar	      contained	"\<\h[a-zA-Z0-9#_]*\>"
    7              0.000036 syn match vimVar		"\<[bwglstav]:\h[a-zA-Z0-9#_]*\>"
    7              0.000023 syn match vimVar	      	"\s\zs&\a\+\>"
    7              0.000029 syn match vimFBVar      contained   "\<[bwglstav]:\h[a-zA-Z0-9#_]*\>"
    7              0.000012 syn keyword vimCommand  contained	in
                            
                            " Insertions And Appends: insert append {{{2
                            "   (buftype != nofile test avoids having append, change, insert show up in the command window)
                            " =======================
    7              0.000082 if &buftype != 'nofile'
    3              0.000039  syn region vimInsert	matchgroup=vimCommand start="^[: \t]*\(\d\+\(,\d\+\)\=\)\=a\%[ppend]$"		matchgroup=vimCommand end="^\.$""
    3              0.000024  syn region vimInsert	matchgroup=vimCommand start="^[: \t]*\(\d\+\(,\d\+\)\=\)\=c\%[hange]$"		matchgroup=vimCommand end="^\.$""
    3              0.000020  syn region vimInsert	matchgroup=vimCommand start="^[: \t]*\(\d\+\(,\d\+\)\=\)\=i\%[nsert]$"		matchgroup=vimCommand end="^\.$""
    7              0.000006 endif
                            
                            " Behave! {{{2
                            " =======
    7              0.000043 syn match   vimBehave	"\<be\%[have]\>" skipwhite nextgroup=vimBehaveModel,vimBehaveError
    7              0.000016 syn keyword vimBehaveModel contained	mswin	xterm
    7              0.000037 if !exists("g:vimsyn_noerror") && !exists("g:vimsyn_nobehaveerror")
    7              0.000024  syn match   vimBehaveError contained	"[^ ]\+"
    7              0.000009 endif
                            
                            " Filetypes {{{2
                            " =========
    7              0.000058 syn match   vimFiletype	"\<filet\%[ype]\(\s\+\I\i*\)*"	skipwhite contains=vimFTCmd,vimFTOption,vimFTError
    7              0.000029 if !exists("g:vimsyn_noerror") && !exists("g:vimsyn_vimFTError")
    7              0.000017  syn match   vimFTError  contained	"\I\i*"
    7              0.000006 endif
    7              0.000017 syn keyword vimFTCmd    contained	filet[ype]
    7              0.000018 syn keyword vimFTOption contained	detect indent off on plugin
                            
                            " Augroup : vimAugroupError removed because long augroups caused sync'ing problems. {{{2
                            " ======= : Trade-off: Increasing synclines with slower editing vs augroup END error checking.
    7              0.000289 syn cluster vimAugroupList	contains=vimAugroup,vimIsCommand,vimUserCmd,vimExecute,vimNotFunc,vimFuncName,vimFunction,vimFunctionError,vimLineComment,vimNotFunc,vimMap,vimSpecFile,vimOper,vimNumber,vimOperParen,vimComment,vim9Comment,vimString,vimSubst,vimMark,vimRegister,vimAddress,vimFilter,vimCmplxRepeat,vimComment,vim9Comment,vimLet,vimSet,vimAutoCmd,vimRegion,vimSynLine,vimNotation,vimCtrlChar,vimFuncVar,vimContinue,vimSetEqual,vimOption
    7              0.000026 if exists("g:vimsyn_folding") && g:vimsyn_folding =~# 'a'
                             syn region  vimAugroup	fold matchgroup=vimAugroupKey start="\<aug\%[roup]\>\ze\s\+\K\k*" end="\<aug\%[roup]\>\ze\s\+[eE][nN][dD]\>"	contains=vimAutoCmd,@vimAugroupList
    7              0.000013 else
    7              0.000100  syn region  vimAugroup	matchgroup=vimAugroupKey start="\<aug\%[roup]\>\ze\s\+\K\k*" end="\<aug\%[roup]\>\ze\s\+[eE][nN][dD]\>"		contains=vimAutoCmd,@vimAugroupList
    7              0.000007 endif
    7              0.000039 syn match   vimAugroup	"aug\%[roup]!"	contains=vimAugroupKey
    7              0.000034 if !exists("g:vimsyn_noerror") && !exists("g:vimsyn_noaugrouperror")
    7              0.000035  syn match   vimAugroupError	"\<aug\%[roup]\>\s\+[eE][nN][dD]\>"
    7              0.000006 endif
    7              0.000016 syn keyword vimAugroupKey contained	aug[roup]
                            
                            " Operators: {{{2
                            " =========
    7              0.000089 syn cluster	vimOperGroup	contains=vimEnvvar,vimFunc,vimFuncVar,vimOper,vimOperParen,vimNumber,vimString,vimType,vimRegister,vimContinue,vim9Comment,vimVar
    7              0.000040 syn match	vimOper	"||\|&&\|[-+.!]"				skipwhite nextgroup=vimString,vimSpecFile
    7              0.000112 syn match	vimOper	"\%#=1\(==\|!=\|>=\|<=\|=\~\|!\~\|>\|<\|=\|!\~#\)[?#]\{0,2}"	skipwhite nextgroup=vimString,vimSpecFile
    7              0.000055 syn match	vimOper	"\(\<is\|\<isnot\)[?#]\{0,2}\>"			skipwhite nextgroup=vimString,vimSpecFile
    7              0.000079 syn region	vimOperParen 	matchgroup=vimParenSep	start="(" end=")" contains=vimoperStar,@vimOperGroup
    7              0.000094 syn region	vimOperParen	matchgroup=vimSep		start="#\={" end="}" contains=@vimOperGroup nextgroup=vimVar,vimFuncVar
    7              0.000061 if !exists("g:vimsyn_noerror") && !exists("g:vimsyn_noopererror")
    7              0.000139  syn match	vimOperError	")"
    7              0.000007 endif
                            
                            " Functions : Tag is provided for those who wish to highlight tagged functions {{{2
                            " =========
    7              0.000065 syn cluster	vimFuncList	contains=vimCommand,vimFunctionError,vimFuncKey,Tag,vimFuncSID
    7              0.000600 syn cluster	vimFuncBodyList	contains=vimAbb,vimAddress,vimAugroupKey,vimAutoCmd,vimCmplxRepeat,vimComment,vim9Comment,vimContinue,vimCtrlChar,vimEcho,vimEchoHL,vimEnvvar,vimExecute,vimIsCommand,vimFBVar,vimFunc,vimFunction,vimFuncVar,vimGlobal,vimHighlight,vimIsCommand,vimLet,vimLetHereDoc,vimLineComment,vimMap,vimMark,vimNorm,vimNotation,vimNotFunc,vimNumber,vimOper,vimOperParen,vimRegion,vimRegister,vimSearch,vimSet,vimSpecFile,vimString,vimSubst,vimSynLine,vimUnmap,vimUserCommand
    7              0.000123 syn match	vimFunction	"\<\(fu\%[nction]\)!\=\s\+\%(<[sS][iI][dD]>\|[sSgGbBwWtTlL]:\)\=\%(\i\|[#.]\|{.\{-1,}}\)*\ze\s*("	contains=@vimFuncList nextgroup=vimFuncBody
    7              0.000055  syn match	vimFunction	"\<def!\=\ze\s*(" contains=@vimFuncList nextgroup=vimFuncBody
                            
    7              0.000114 if exists("g:vimsyn_folding") && g:vimsyn_folding =~# 'f'
                             syn region	vimFuncBody  contained	fold start="\ze\s*("	matchgroup=vimCommand end="\<\(endf\>\|endfu\%[nction]\>\|enddef\>\)"		contains=@vimFuncBodyList
    7              0.000012 else
    7              0.000077  syn region	vimFuncBody  contained	start="\ze\s*("		matchgroup=vimCommand end="\<\(endf\>\|endfu\%[nction]\>\|enddef\>\)"		contains=@vimFuncBodyList
    7              0.000007 endif
    7              0.000031 syn match	vimFuncVar   contained	"a:\(\K\k*\|\d\+\)"
    7              0.000025 syn match	vimFuncSID   contained	"\c<sid>\|\<s:"
    7              0.000020 syn keyword	vimFuncKey   contained	fu[nction]
    7              0.000024 syn match	vimFuncBlank contained	"\s\+"
                            
    7              0.000016 syn keyword	vimPattern   contained	start	skip	end
                            
                            " vimTypes : new for vim9
    7              0.000086  syn match	vimType	":\s*\zs\<\(bool\|number\|float\|string\|blob\|list<\|dict<\|job\|channel\|func\)\>"
                            
                            " Special Filenames, Modifiers, Extension Removal: {{{2
                            " ===============================================
    7              0.000048 syn match	vimSpecFile	"<c\(word\|WORD\)>"	nextgroup=vimSpecFileMod,vimSubst
    7              0.000041 syn match	vimSpecFile	"<\([acs]file\|amatch\|abuf\)>"	nextgroup=vimSpecFileMod,vimSubst
    7              0.000035 syn match	vimSpecFile	"\s%[ \t:]"ms=s+1,me=e-1	nextgroup=vimSpecFileMod,vimSubst
    7              0.000027 syn match	vimSpecFile	"\s%$"ms=s+1	nextgroup=vimSpecFileMod,vimSubst
    7              0.000026 syn match	vimSpecFile	"\s%<"ms=s+1,me=e-1	nextgroup=vimSpecFileMod,vimSubst
    7              0.000031 syn match	vimSpecFile	"#\d\+\|[#%]<\>"	nextgroup=vimSpecFileMod,vimSubst
    7              0.000027 syn match	vimSpecFileMod	"\(:[phtre]\)\+"	contained
                            
                            " User-Specified Commands: {{{2
                            " =======================
    7              0.000200 syn cluster	vimUserCmdList	contains=vimAddress,vimSyntax,vimHighlight,vimAutoCmd,vimCmplxRepeat,vimComment,vim9Comment,vimCtrlChar,vimEscapeBrace,vimFunc,vimFuncName,vimFunction,vimFunctionError,vimIsCommand,vimMark,vimNotation,vimNumber,vimOper,vimRegion,vimRegister,vimLet,vimSet,vimSetEqual,vimSetString,vimSpecFile,vimString,vimSubst,vimSubstRep,vimSubstRange,vimSynLine
    7              0.000019 syn keyword	vimUserCommand	contained	com[mand]
    7              0.000061 syn match	vimUserCmd	"\<com\%[mand]!\=\>.*$"	contains=vimUserAttrb,vimUserAttrbError,vimUserCommand,@vimUserCmdList,vimComFilter
    7              0.000022 syn match	vimUserAttrbError	contained	"-\a\+\ze\s"
    7              0.000037 syn match	vimUserAttrb	contained	"-nargs=[01*?+]"	contains=vimUserAttrbKey,vimOper
    7              0.000064 syn match	vimUserAttrb	contained	"-complete="		contains=vimUserAttrbKey,vimOper nextgroup=vimUserAttrbCmplt,vimUserCmdError
    7              0.000077 syn match	vimUserAttrb	contained	"-range\(=%\|=\d\+\)\="	contains=vimNumber,vimOper,vimUserAttrbKey
    7              0.000050 syn match	vimUserAttrb	contained	"-count\(=\d\+\)\="	contains=vimNumber,vimOper,vimUserAttrbKey
    7              0.000034 syn match	vimUserAttrb	contained	"-bang\>"		contains=vimOper,vimUserAttrbKey
    7              0.000042 syn match	vimUserAttrb	contained	"-bar\>"		contains=vimOper,vimUserAttrbKey
    7              0.000029 syn match	vimUserAttrb	contained	"-buffer\>"		contains=vimOper,vimUserAttrbKey
    7              0.000031 syn match	vimUserAttrb	contained	"-register\>"		contains=vimOper,vimUserAttrbKey
    7              0.000042 if !exists("g:vimsyn_noerror") && !exists("g:vimsyn_nousercmderror")
    7              0.000020  syn match	vimUserCmdError	contained	"\S\+\>"
    7              0.000006 endif
    7              0.000015 syn case ignore
    7              0.000068 syn keyword	vimUserAttrbKey   contained	bar	ban[g]	cou[nt]	ra[nge] com[plete]	n[args]	re[gister]
    7              0.000132 syn keyword	vimUserAttrbCmplt contained	augroup buffer behave color command compiler cscope dir environment event expression file file_in_path filetype function help highlight history locale mapping menu option packadd shellcmd sign syntax syntime tag tag_listfiles user var
    7              0.000041 syn keyword	vimUserAttrbCmplt contained	custom customlist nextgroup=vimUserAttrbCmpltFunc,vimUserCmdError
    7              0.000110 syn match	vimUserAttrbCmpltFunc contained	",\%([sS]:\|<[sS][iI][dD]>\)\=\%(\h\w*\%(#\h\w*\)\+\|\h\w*\)"hs=s+1 nextgroup=vimUserCmdError
                            
    7              0.000030 syn case match
    7              0.000060 syn match	vimUserAttrbCmplt contained	"custom,\u\w*"
                            
                            " Lower Priority Comments: after some vim commands... {{{2
                            " =======================
    7              0.000069 syn match	vimComment	excludenl +\s"[^\-:.%#=*].*$+lc=1	contains=@vimCommentGroup,vimCommentString
    7              0.000061 syn match	vimComment	+\<endif\s\+".*$+lc=5	contains=@vimCommentGroup,vimCommentString
    7              0.000039 syn match	vimComment	+\<else\s\+".*$+lc=4	contains=@vimCommentGroup,vimCommentString
    7              0.000042 syn region	vimCommentString	contained oneline start='\S\s\+"'ms=e	end='"'
                            " Vim9 comments - TODO: might be highlighted while they don't work
    7              0.000121 syn match	vim9Comment	excludenl +\s#[^{].*$+lc=1	contains=@vimCommentGroup,vimCommentString
    7              0.000040 syn match	vim9Comment	+\<endif\s\+#[^{].*$+lc=5	contains=@vimCommentGroup,vimCommentString
    7              0.000042 syn match	vim9Comment	+\<else\s\+#[^{].*$+lc=4	contains=@vimCommentGroup,vimCommentString
                            " Vim9 comment inside expression
    7              0.000035 syn match	vim9Comment	+\s\zs#[^{].*$+ms=s+1	contains=@vimCommentGroup,vimCommentString
    7              0.000033 syn match	vim9Comment	+^\s*#[^{].*$+	contains=@vimCommentGroup,vimCommentString
    7              0.000028 syn match	vim9Comment	+^\s*#$+	contains=@vimCommentGroup,vimCommentString
                            
                            " Environment Variables: {{{2
                            " =====================
    7              0.000020 syn match	vimEnvvar	"\$\I\i*"
    7              0.000020 syn match	vimEnvvar	"\${\I\i*}"
                            
                            " In-String Specials: {{{2
                            " Try to catch strings, if nothing else matches (therefore it must precede the others!)
                            "  vimEscapeBrace handles ["]  []"] (ie. "s don't terminate string inside [])
    7              0.000064 syn region	vimEscapeBrace	oneline   contained transparent start="[^\\]\(\\\\\)*\[\zs\^\=\]\=" skip="\\\\\|\\\]" end="]"me=e-1
    7              0.000020 syn match	vimPatSepErr	contained	"\\)"
    7              0.000019 syn match	vimPatSep	contained	"\\|"
    7              0.000072 syn region	vimPatSepZone	oneline   contained   matchgroup=vimPatSepZ start="\\%\=\ze(" skip="\\\\" end="\\)\|[^\\]['"]"	contains=@vimStringGroup
    7              0.000051 syn region	vimPatRegion	contained transparent matchgroup=vimPatSepR start="\\[z%]\=(" end="\\)"	contains=@vimSubstList oneline
    7              0.000019 syn match	vimNotPatSep	contained	"\\\\"
    7              0.000058 syn cluster	vimStringGroup	contains=vimEscape,vimEscapeBrace,vimPatSep,vimNotPatSep,vimPatSepErr,vimPatSepZone,@Spell
    7              0.000067 syn region	vimString	oneline keepend	start=+[^a-zA-Z>!\\@]"+lc=1 skip=+\\\\\|\\"+ matchgroup=vimStringEnd end=+"+	contains=@vimStringGroup
    7              0.000049 syn region	vimString	oneline keepend	start=+[^a-zA-Z>!\\@]'+lc=1 end=+'+
    7              0.000049 syn region	vimString	oneline	start=+=!+lc=1	skip=+\\\\\|\\!+ end=+!+	contains=@vimStringGroup
    7              0.000075 syn region	vimString	oneline	start="=+"lc=1	skip="\\\\\|\\+" end="+"	contains=@vimStringGroup
                            "syn region	vimString	oneline	start="\s/\s*\A"lc=1 skip="\\\\\|\\+" end="/"	contains=@vimStringGroup  " see tst45.vim
    7              0.000028 syn match	vimString	contained	+"[^"]*\\$+	skipnl nextgroup=vimStringCont
    7              0.000029 syn match	vimStringCont	contained	+\(\\\\\|.\)\{-}[^\\]"+
    7              0.000015 syn match	vimEscape	contained	"\\."
                            
                            " Substitutions: {{{2
                            " =============
    7              0.000048 syn cluster	vimSubstList	contains=vimPatSep,vimPatRegion,vimPatSepErr,vimSubstTwoBS,vimSubstRange,vimNotation
    7              0.000035 syn cluster	vimSubstRepList	contains=vimSubstSubstr,vimSubstTwoBS,vimNotation
    7              0.000027 syn cluster	vimSubstList	add=vimCollection
    7              0.000086 syn match	vimSubst	"\(:\+\s*\|^\s*\||\s*\)\<\%(\<s\%[ubstitute]\>\|\<sm\%[agic]\>\|\<sno\%[magic]\>\)[:#[:alpha:]]\@!" nextgroup=vimSubstPat
                            "syn match	vimSubst	"\%(^\|[^\\]\)\<s\%[ubstitute]\>[:#[:alpha:]]\@!"	nextgroup=vimSubstPat contained
    7              0.000057 syn match	vimSubst	"\%(^\|[^\\\"']\)\<s\%[ubstitute]\>[:#[:alpha:]\"']\@!"	nextgroup=vimSubstPat contained
    7              0.000036 syn match	vimSubst	"/\zs\<s\%[ubstitute]\>\ze/"		nextgroup=vimSubstPat
    7              0.000040 syn match	vimSubst	"\(:\+\s*\|^\s*\)s\ze#.\{-}#.\{-}#"		nextgroup=vimSubstPat
    7              0.000031 syn match	vimSubst1       contained	"\<s\%[ubstitute]\>"	nextgroup=vimSubstPat
    7              0.000033 syn match	vimSubst2       contained	"s\%[ubstitute]\>"	nextgroup=vimSubstPat
    7              0.000086 syn region	vimSubstPat     contained	matchgroup=vimSubstDelim start="\z([^a-zA-Z( \t[\]&]\)"rs=s+1 skip="\\\\\|\\\z1" end="\z1"re=e-1,me=e-1	 contains=@vimSubstList	nextgroup=vimSubstRep4	oneline
    7              0.000088 syn region	vimSubstRep4    contained	matchgroup=vimSubstDelim start="\z(.\)" skip="\\\\\|\\\z1" end="\z1" matchgroup=vimNotation end="<[cC][rR]>" contains=@vimSubstRepList	nextgroup=vimSubstFlagErr	oneline
    7              0.000050 syn region	vimCollection   contained transparent	start="\\\@<!\[" skip="\\\[" end="\]"	contains=vimCollClass
    7              0.000026 syn match	vimCollClassErr contained	"\[:.\{-\}:\]"
    7              0.000088 syn match	vimCollClass    contained transparent	"\%#=1\[:\(alnum\|alpha\|blank\|cntrl\|digit\|graph\|lower\|print\|punct\|space\|upper\|xdigit\|return\|tab\|escape\|backspace\):\]"
    7              0.000018 syn match	vimSubstSubstr  contained	"\\z\=\d"
    7              0.000017 syn match	vimSubstTwoBS   contained	"\\\\"
    7              0.000033 syn match	vimSubstFlagErr contained	"[^< \t\r|]\+" contains=vimSubstFlags
    7              0.000037 syn match	vimSubstFlags   contained	"[&cegiIlnpr#]\+"
                            
                            " 'String': {{{2
    7              0.000028 syn match	vimString	"[^(,]'[^']\{-}\zs'"
                            
                            " Marks, Registers, Addresses, Filters: {{{2
    7              0.000047 syn match	vimMark	"'[a-zA-Z0-9]\ze[-+,!]"	nextgroup=vimFilter,vimMarkNumber,vimSubst
    7              0.000034 syn match	vimMark	"'[<>]\ze[-+,!]"		nextgroup=vimFilter,vimMarkNumber,vimSubst
    7              0.000033 syn match	vimMark	",\zs'[<>]\ze"		nextgroup=vimFilter,vimMarkNumber,vimSubst
    7              0.000037 syn match	vimMark	"[!,:]\zs'[a-zA-Z0-9]"	nextgroup=vimFilter,vimMarkNumber,vimSubst
    7              0.000043 syn match	vimMark	"\<norm\%[al]\s\zs'[a-zA-Z0-9]"	nextgroup=vimFilter,vimMarkNumber,vimSubst
    7              0.000030 syn match	vimMarkNumber	"[-+]\d\+"		contained contains=vimOper nextgroup=vimSubst2
    7              0.000023 syn match	vimPlainMark contained	"'[a-zA-Z0-9]"
    7              0.000039 syn match	vimRange	"[`'][a-zA-Z0-9],[`'][a-zA-Z0-9]"	contains=vimMark	skipwhite nextgroup=vimFilter
                            
    7              0.000047 syn match	vimRegister	'[^,;[{: \t]\zs"[a-zA-Z0-9.%#:_\-/]\ze[^a-zA-Z_":0-9]'
    7              0.000034 syn match	vimRegister	'\<norm\s\+\zs"[a-zA-Z0-9]'
    7              0.000027 syn match	vimRegister	'\<normal\s\+\zs"[a-zA-Z0-9]'
    7              0.000018 syn match	vimRegister	'@"'
    7              0.000028 syn match	vimPlainRegister contained	'"[a-zA-Z0-9\-:.%#*+=]'
                            
    7              0.000027 syn match	vimAddress	",\zs[.$]"	skipwhite nextgroup=vimSubst1
    7              0.000026 syn match	vimAddress	"%\ze\a"	skipwhite nextgroup=vimString,vimSubst1
                            
    7              0.000043 syn match	vimFilter 		"^!!\=[^"]\{-}\(|\|\ze\"\|$\)"	contains=vimOper,vimSpecFile
    7              0.000046 syn match	vimFilter    contained	"!!\=[^"]\{-}\(|\|\ze\"\|$\)"	contains=vimOper,vimSpecFile
    7              0.000032 syn match	vimComFilter contained	"|!!\=[^"]\{-}\(|\|\ze\"\|$\)"      contains=vimOper,vimSpecFile
                            
                            " Complex Repeats: (:h complex-repeat) {{{2
    7              0.000033 syn match	vimCmplxRepeat	'[^a-zA-Z_/\\()]q[0-9a-zA-Z"]\>'lc=1
    7              0.000040 syn match	vimCmplxRepeat	'@[0-9a-z".=@:]\ze\($\|[^a-zA-Z]\>\)'
                            
                            " Set command and associated set-options (vimOptions) with comment {{{2
    7              0.000199 syn region	vimSet		matchgroup=vimCommand start="\<\%(setl\%[ocal]\|setg\%[lobal]\|se\%[t]\)\>" skip="\%(\\\\\)*\\.\n\@!" end="$" end="|" matchgroup=vimNotation end="<[cC][rR]>" keepend contains=vimSetEqual,vimOption,vimErrSetting,vimComment,vim9Comment,vimSetString,vimSetMod
    7              0.000247  syn region	vimSetEqual	contained	start="[=:]\|[-+^]=" skip="\\\\\|\\\s" end="[| \t]"me=e-1 end="$"	contains=vimCtrlChar,vimSetSep,vimNotation,vimEnvvar
    7              0.000058 syn region	vimSetString	contained	start=+="+hs=s+1	skip=+\\\\\|\\"+  end=+"+		contains=vimCtrlChar
    7              0.000021 syn match	vimSetSep	contained	"[,:]"
    7              0.000042 syn match	vimSetMod	contained	"&vim\=\|[!&?<]\|all&"
                            
                            " Let: {{{2
                            " ===
    7              0.000061 syn keyword	vimLet	let	unl[et]	skipwhite nextgroup=vimVar,vimFuncVar,vimLetHereDoc
    7              0.000261 VimFoldh syn region vimLetHereDoc matchgroup=vimLetHereDocStart start='=<<\s\+\%(trim\s\+\)\=\%(eval\s\+\)\=\s*\z(\L\S*\)' matchgroup=vimLetHereDocStop end='^\s*\z1\s*$'
                            
                            " Abbreviations: {{{2
                            " =============
    7              0.000094 syn keyword vimAbb	ab[breviate] ca[bbrev] inorea[bbrev] cnorea[bbrev] norea[bbrev] ia[bbrev] skipwhite nextgroup=vimMapMod,vimMapLhs
                            
                            " Autocmd: {{{2
                            " =======
    7              0.000126 syn match	vimAutoEventList	contained	"\(!\s\+\)\=\(\a\+,\)*\a\+"	contains=vimAutoEvent,nvimAutoEvent nextgroup=vimAutoCmdSpace
    7              0.000029 syn match	vimAutoCmdSpace	contained	"\s\+"	nextgroup=vimAutoCmdSfxList
    7              0.000024 syn match	vimAutoCmdSfxList	contained	"\S*"	skipwhite nextgroup=vimAutoCmdMod
    7              0.000053 syn keyword	vimAutoCmd	au[tocmd] do[autocmd] doautoa[ll]	skipwhite nextgroup=vimAutoEventList
    7              0.000031 syn match	vimAutoCmdMod	"\(++\)\=\(once\|nested\)"
                            
                            " Echo and Execute: -- prefer strings! {{{2
                            " ================
    7              0.000084 syn region	vimEcho	oneline excludenl matchgroup=vimCommand start="\<ec\%[ho]\>" skip="\(\\\\\)*\\|" end="$\||" contains=vimFunc,vimFuncVar,vimString,vimVar
    7              0.000111 syn region	vimExecute	oneline excludenl matchgroup=vimCommand start="\<exe\%[cute]\>" skip="\(\\\\\)*\\|" end="$\||\|<[cC][rR]>" contains=vimFuncVar,vimIsCommand,vimOper,vimNotation,vimOperParen,vimString,vimVar
    7              0.000046 syn match	vimEchoHL	"echohl\="	skipwhite nextgroup=vimGroup,vimHLGroup,vimEchoHLNone,vimOnlyHLGroup,nvimHLGroup
    7              0.000012 syn case ignore
    7              0.000016 syn keyword	vimEchoHLNone	none
    7              0.000009 syn case match
                            
                            " Maps: {{{2
                            " ====
    7              0.000120 syn match	vimMap		"\<map\>!\=\ze\s*[^(]" skipwhite nextgroup=vimMapMod,vimMapLhs
    7              0.000203 syn keyword	vimMap		cm[ap] cno[remap] im[ap] ino[remap] lm[ap] ln[oremap] nm[ap] nn[oremap] no[remap] om[ap] ono[remap] smap snor[emap] tno[remap] tm[ap] vm[ap] vmapc[lear] vn[oremap] xm[ap] xn[oremap] skipwhite nextgroup=vimMapBang,vimMapMod,vimMapLhs
    7              0.000039 syn keyword	nvimMap		tn[oremap] tm[ap] skipwhite nextgroup=vimMapBang,vimMapMod,vimMapLhs
    7              0.000026 syn keyword	vimMap		mapc[lear] smapc[lear]
    7              0.000081 syn keyword	vimUnmap		cu[nmap] iu[nmap] lu[nmap] nun[map] ou[nmap] sunm[ap] unm[ap] unm[ap] vu[nmap] xu[nmap] skipwhite nextgroup=vimMapBang,vimMapMod,vimMapLhs
    7              0.000030 syn keyword	nvimUnmap 		tunm[ap] skipwhite nextgroup=vimMapBang,vimMapMod,vimMapLhs
    7              0.000036 syn match	vimMapLhs	contained	"\S\+"			contains=vimNotation,vimCtrlChar skipwhite nextgroup=vimMapRhs
    7              0.000029 syn match	vimMapBang	contained	"!"			skipwhite nextgroup=vimMapMod,vimMapLhs
    7              0.000095 syn match	vimMapMod	contained	"\%#=1\c<\(buffer\|expr\|\(local\)\=leader\|nowait\|plug\|script\|sid\|unique\|silent\)\+>" contains=vimMapModKey,vimMapModErr skipwhite nextgroup=vimMapMod,vimMapLhs
    7              0.000034 syn match	vimMapRhs	contained	".*" contains=vimNotation,vimCtrlChar	skipnl nextgroup=vimMapRhsExtend
    7              0.000026 syn match	vimMapRhsExtend	contained	"^\s*\\.*$"			contains=vimContinue
    7              0.000015 syn case ignore
    7              0.000035 syn keyword	vimMapModKey	contained	buffer	expr	leader	localleader	nowait	plug	script	sid	silent	unique
    7              0.000009 syn case match
                            
                            " Menus: {{{2
                            " =====
    7              0.000060 syn cluster	vimMenuList contains=vimMenuBang,vimMenuPriority,vimMenuName,vimMenuMod
    7              0.000156 syn keyword	vimCommand	am[enu] an[oremenu] aun[menu] cme[nu] cnoreme[nu] cunme[nu] ime[nu] inoreme[nu] iunme[nu] me[nu] nme[nu] nnoreme[nu] noreme[nu] nunme[nu] ome[nu] onoreme[nu] ounme[nu] tlm[enu] tln[oremenu] tlu[nmenu] unme[nu] vme[nu] vnoreme[nu] vunme[nu] skipwhite nextgroup=@vimMenuList
    7              0.000036 syn match	vimMenuName	"[^ \t\\<]\+"	contained nextgroup=vimMenuNameMore,vimMenuMap
    7              0.000039 syn match	vimMenuPriority	"\d\+\(\.\d\+\)*"	contained skipwhite nextgroup=vimMenuName
    7              0.000041 syn match	vimMenuNameMore	"\c\\\s\|<tab>\|\\\."	contained nextgroup=vimMenuName,vimMenuNameMore contains=vimNotation
    7              0.000054 syn match	vimMenuMod    contained	"\c<\(script\|silent\)\+>"  skipwhite contains=vimMapModKey,vimMapModErr nextgroup=@vimMenuList
    7              0.000022 syn match	vimMenuMap	"\s"	contained skipwhite nextgroup=vimMenuRhs
    7              0.000034 syn match	vimMenuRhs	".*$"	contained contains=vimString,vimComment,vim9Comment,vimIsCommand
    7              0.000020 syn match	vimMenuBang	"!"	contained skipwhite nextgroup=@vimMenuList
                            
                            " Angle-Bracket Notation: (tnx to Michael Geddes) {{{2
                            " ======================
    7              0.000022 syn case ignore
    7              0.000209 syn match	vimNotation	"\%#=1\(\\\|<lt>\)\=<\([scamd]-\)\{0,4}x\=\(f\d\{1,2}\|[^ \t:]\|cmd\|cr\|lf\|linefeed\|return\|enter\|k\=del\%[ete]\|bs\|backspace\|tab\|esc\|right\|left\|help\|undo\|insert\|ins\|mouse\|k\=home\|k\=end\|kplus\|kminus\|kdivide\|kmultiply\|kenter\|kpoint\|space\|k\=\(page\)\=\(\|down\|up\|k\d\>\)\)>" contains=vimBracket
    7              0.000079 syn match	vimNotation	"\%#=1\(\\\|<lt>\)\=<\([scam2-4]-\)\{0,4}\(right\|left\|middle\)\(mouse\)\=\(drag\|release\)\=>"	contains=vimBracket
    7              0.000076 syn match	vimNotation	"\%#=1\(\\\|<lt>\)\=<\(bslash\|plug\|sid\|space\|bar\|nop\|nul\|lt\)>"			contains=vimBracket
    7              0.000053 syn match	vimNotation	'\(\\\|<lt>\)\=<C-R>[0-9a-z"%#:.\-=]'he=e-1				contains=vimBracket
    7              0.000083 syn match	vimNotation	'\%#=1\(\\\|<lt>\)\=<\%(q-\)\=\(line[12]\|count\|bang\|reg\|args\|mods\|f-args\|f-mods\|lt\)>'	contains=vimBracket
    7              0.000063 syn match	vimNotation	"\%#=1\(\\\|<lt>\)\=<\([cas]file\|abuf\|amatch\|cword\|cWORD\|client\)>"		contains=vimBracket
    7              0.000018 syn match	vimBracket contained	"[\\<>]"
    7              0.000009 syn case match
                            
                            " User Function Highlighting: {{{2
                            " (following Gautam Iyer's suggestion)
                            " ==========================
    7              0.000099 syn match vimFunc		"\%(\%([sSgGbBwWtTlL]:\|<[sS][iI][dD]>\)\=\%(\w\+\.\)*\I[a-zA-Z0-9_.]*\)\ze\s*("		contains=vimFuncEcho,vimFuncName,vimUserFunc,vimExecute
    7              0.000075 syn match vimUserFunc contained	"\%(\%([sSgGbBwWtTlL]:\|<[sS][iI][dD]>\)\=\%(\w\+\.\)*\I[a-zA-Z0-9_.]*\)\|\<\u[a-zA-Z0-9.]*\>\|\<if\>"	contains=vimNotation
    7              0.000016 syn keyword vimFuncEcho contained	ec ech echo
                            
                            " User Command Highlighting: {{{2
    7              0.000054 syn match vimUsrCmd	'^\s*\zs\u\%(\w*\)\@>\%([(#[]\|\s\+\%([-+*/%]\=\|\.\.\)=\)\@!'
                            
                            " Errors And Warnings: {{{2
                            " ====================
    7              0.000052 if !exists("g:vimsyn_noerror") && !exists("g:vimsyn_novimfunctionerror")
    7              0.000101  syn match	vimFunctionError	"\s\zs[a-z0-9]\i\{-}\ze\s*("			contained contains=vimFuncKey,vimFuncBlank
    7              0.000141  syn match	vimFunctionError	"\s\zs\%(<[sS][iI][dD]>\|[sSgGbBwWtTlL]:\)\d\i\{-}\ze\s*("	contained contains=vimFuncKey,vimFuncBlank
    7              0.000053  syn match	vimElseIfErr	"\<else\s\+if\>"
    7              0.000036  syn match	vimBufnrWarn	/\<bufnr\s*(\s*["']\.['"]\s*)/
    7              0.000006 endif
                            
    7              0.000069 syn match vimNotFunc	"\<if\>\|\<el\%[seif]\>\|\<return\>\|\<while\>"	skipwhite nextgroup=vimOper,vimOperParen,vimVar,vimFunc,vimNotation
                            
                            " Norm: {{{2
                            " ====
    7              0.000032 syn match	vimNorm		"\<norm\%[al]!\=" skipwhite nextgroup=vimNormCmds
    7              0.000020 syn match	vimNormCmds contained	".*$"
                            
                            " Syntax: {{{2
                            "=======
    7              0.000036 syn match	vimGroupList	contained	"@\=[^ \t,]*"	contains=vimGroupSpecial,vimPatSep
    7              0.000036 syn match	vimGroupList	contained	"@\=[^ \t,]*,"	nextgroup=vimGroupList contains=vimGroupSpecial,vimPatSep
    7              0.000020 syn keyword	vimGroupSpecial	contained	ALL	ALLBUT	CONTAINED	TOP
    7              0.000035 if !exists("g:vimsyn_noerror") && !exists("g:vimsyn_novimsynerror")
    7              0.000019  syn match	vimSynError	contained	"\i\+"
    7              0.000022  syn match	vimSynError	contained	"\i\+="	nextgroup=vimGroupList
    7              0.000007 endif
    7              0.000034 syn match	vimSynContains	contained	"\<contain\(s\|edin\)="	nextgroup=vimGroupList
    7              0.000026 syn match	vimSynKeyContainedin	contained	"\<containedin="	nextgroup=vimGroupList
    7              0.000025 syn match	vimSynNextgroup	contained	"nextgroup="	nextgroup=vimGroupList
                            
    7              0.000048 syn match	vimSyntax	"\<sy\%[ntax]\>"	contains=vimCommand skipwhite nextgroup=vimSynType,vimComment,vim9Comment
    7              0.000037 syn match	vimAuSyntax	contained	"\s+sy\%[ntax]"	contains=vimCommand skipwhite nextgroup=vimSynType,vimComment,vim9Comment
    7              0.000043 syn cluster vimFuncBodyList add=vimSyntax
                            
                            " Syntax: case {{{2
    7              0.000026 syn keyword	vimSynType	contained	case	skipwhite nextgroup=vimSynCase,vimSynCaseError
    7              0.000029 if !exists("g:vimsyn_noerror") && !exists("g:vimsyn_novimsyncaseerror")
    7              0.000016  syn match	vimSynCaseError	contained	"\i\+"
    7              0.000006 endif
    7              0.000012 syn keyword	vimSynCase	contained	ignore	match
                            
                            " Syntax: clear {{{2
    7              0.000017 syn keyword	vimSynType	contained	clear	skipwhite nextgroup=vimGroupList
                            
                            " Syntax: cluster {{{2
    7              0.000023 syn keyword	vimSynType	contained	cluster	skipwhite nextgroup=vimClusterName
    7              0.000078 syn region	vimClusterName	contained	matchgroup=vimGroupName start="\h\w*" skip="\\\\\|\\|" matchgroup=vimSep end="$\||" contains=vimGroupAdd,vimGroupRem,vimSynContains,vimSynError
    7              0.000030 syn match	vimGroupAdd	contained	"add="	nextgroup=vimGroupList
    7              0.000049 syn match	vimGroupRem	contained	"remove="	nextgroup=vimGroupList
    7              0.000036 syn cluster vimFuncBodyList add=vimSynType,vimGroupAdd,vimGroupRem
                            
                            " Syntax: iskeyword {{{2
    7              0.000018 syn keyword	vimSynType	contained	iskeyword	skipwhite nextgroup=vimIskList
    7              0.000021 syn match	vimIskList	contained	'\S\+'	contains=vimIskSep
    7              0.000014 syn match	vimIskSep	contained	','
                            
                            " Syntax: include {{{2
    7              0.000016 syn keyword	vimSynType	contained	include	skipwhite nextgroup=vimGroupList
    7              0.000025 syn cluster vimFuncBodyList add=vimSynType
                            
                            " Syntax: keyword {{{2
    7              0.000037 syn cluster	vimSynKeyGroup	contains=vimSynNextgroup,vimSynKeyOpt,vimSynKeyContainedin
    7              0.000021 syn keyword	vimSynType	contained	keyword	skipwhite nextgroup=vimSynKeyRegion
    7              0.000105 syn region	vimSynKeyRegion	contained oneline keepend	matchgroup=vimGroupName start="\h\w*" skip="\\\\\|\\|" matchgroup=vimSep end="|\|$" contains=@vimSynKeyGroup
    7              0.000062 syn match	vimSynKeyOpt	contained	"\%#=1\<\(conceal\|contained\|transparent\|skipempty\|skipwhite\|skipnl\)\>"
    7              0.000027 syn cluster vimFuncBodyList add=vimSynType
                            
                            " Syntax: match {{{2
    7              0.000060 syn cluster	vimSynMtchGroup	contains=vimMtchComment,vimSynContains,vimSynError,vimSynMtchOpt,vimSynNextgroup,vimSynRegPat,vimNotation,vim9Comment
    7              0.000022 syn keyword	vimSynType	contained	match	skipwhite nextgroup=vimSynMatchRegion
    7              0.000050 syn region	vimSynMatchRegion	contained keepend	matchgroup=vimGroupName start="\h\w*" matchgroup=vimSep end="|\|$" contains=@vimSynMtchGroup
    7              0.000074 syn match	vimSynMtchOpt	contained	"\%#=1\<\(conceal\|transparent\|contained\|excludenl\|keepend\|skipempty\|skipwhite\|display\|extend\|skipnl\|fold\)\>"
    7              0.000041 if has("conceal")
    7              0.000026  syn match	vimSynMtchOpt	contained	"\<cchar="	nextgroup=vimSynMtchCchar
    7              0.000014  syn match	vimSynMtchCchar	contained	"\S"
    7              0.000006 endif
    7              0.000026 syn cluster vimFuncBodyList add=vimSynMtchGroup
                            
                            " Syntax: off and on {{{2
    7              0.000024 syn keyword	vimSynType	contained	enable	list	manual	off	on	reset
                            
                            " Syntax: region {{{2
    7              0.000072 syn cluster	vimSynRegPatGroup	contains=vimPatSep,vimNotPatSep,vimSynPatRange,vimSynNotPatRange,vimSubstSubstr,vimPatRegion,vimPatSepErr,vimNotation
    7              0.000044 syn cluster	vimSynRegGroup	contains=vimSynContains,vimSynNextgroup,vimSynRegOpt,vimSynReg,vimSynMtchGrp
    7              0.000020 syn keyword	vimSynType	contained	region	skipwhite nextgroup=vimSynRegion
    7              0.000061 syn region	vimSynRegion	contained keepend	matchgroup=vimGroupName start="\h\w*" skip="\\\\\|\\|" end="|\|$" contains=@vimSynRegGroup
    7              0.000087 syn match	vimSynRegOpt	contained	"\%#=1\<\(conceal\(ends\)\=\|transparent\|contained\|excludenl\|skipempty\|skipwhite\|display\|keepend\|oneline\|extend\|skipnl\|fold\)\>"
    7              0.000038 syn match	vimSynReg	contained	"\(start\|skip\|end\)="he=e-1	nextgroup=vimSynRegPat
    7              0.000042 syn match	vimSynMtchGrp	contained	"matchgroup="	nextgroup=vimGroup,vimHLGroup,vimOnlyHLGroup,nvimHLGroup
    7              0.000081 syn region	vimSynRegPat	contained extend	start="\z([-`~!@#$%^&*_=+;:'",./?]\)"  skip="\\\\\|\\\z1"  end="\z1"  contains=@vimSynRegPatGroup skipwhite nextgroup=vimSynPatMod,vimSynReg
    7              0.000046 syn match	vimSynPatMod	contained	"\%#=1\(hs\|ms\|me\|hs\|he\|rs\|re\)=[se]\([-+]\d\+\)\="
    7              0.000043 syn match	vimSynPatMod	contained	"\%#=1\(hs\|ms\|me\|hs\|he\|rs\|re\)=[se]\([-+]\d\+\)\=," nextgroup=vimSynPatMod
    7              0.000021 syn match	vimSynPatMod	contained	"lc=\d\+"
    7              0.000066 syn match	vimSynPatMod	contained	"lc=\d\+," nextgroup=vimSynPatMod
    7              0.000048 syn region	vimSynPatRange	contained	start="\["	skip="\\\\\|\\]"   end="]"
    7              0.000019 syn match	vimSynNotPatRange	contained	"\\\\\|\\\["
    7              0.000023 syn match	vimMtchComment	contained	'"[^"]\+$'
    7              0.000029 syn cluster vimFuncBodyList add=vimSynType
                            
                            " Syntax: sync {{{2
                            " ============
    7              0.000054 syn keyword vimSynType	contained	sync	skipwhite	nextgroup=vimSyncC,vimSyncLines,vimSyncMatch,vimSyncError,vimSyncLinebreak,vimSyncLinecont,vimSyncRegion
    7              0.000039 if !exists("g:vimsyn_noerror") && !exists("g:vimsyn_novimsyncerror")
    7              0.000018  syn match	vimSyncError	contained	"\i\+"
    7              0.000007 endif
    7              0.000021 syn keyword	vimSyncC	contained	ccomment	clear	fromstart
    7              0.000022 syn keyword	vimSyncMatch	contained	match	skipwhite	nextgroup=vimSyncGroupName
    7              0.000019 syn keyword	vimSyncRegion	contained	region	skipwhite	nextgroup=vimSynReg
    7              0.000031 syn match	vimSyncLinebreak	contained	"\<linebreaks="	skipwhite	nextgroup=vimNumber
    7              0.000048 syn keyword	vimSyncLinecont	contained	linecont	skipwhite	nextgroup=vimSynRegPat
    7              0.000039 syn match	vimSyncLines	contained	"\(min\|max\)\=lines="	nextgroup=vimNumber
    7              0.000026 syn match	vimSyncGroupName	contained	"\h\w*"	skipwhite	nextgroup=vimSyncKey
    7              0.000036 syn match	vimSyncKey	contained	"\<groupthere\|grouphere\>"	skipwhite nextgroup=vimSyncGroup
    7              0.000026 syn match	vimSyncGroup	contained	"\h\w*"	skipwhite	nextgroup=vimSynRegPat,vimSyncNone
    7              0.000010 syn keyword	vimSyncNone	contained	NONE
                            
                            " Additional IsCommand: here by reasons of precedence {{{2
                            " ====================
    7              0.000081 syn match	vimIsCommand	"<Bar>\s*\a\+"	transparent contains=vimCommand,vimNotation
                            
                            " Highlighting: {{{2
                            " ============
    7              0.000049 syn cluster	vimHighlightCluster		contains=vimHiLink,vimHiClear,vimHiKeyList,vimComment,vim9Comment
    7              0.000038 if !exists("g:vimsyn_noerror") && !exists("g:vimsyn_novimhictermerror")
    7              0.000020  syn match	vimHiCtermError	contained	"\D\i*"
    7              0.000015 endif
    7              0.000063 syn match	vimHighlight	"\<hi\%[ghlight]\>"	skipwhite nextgroup=vimHiBang,@vimHighlightCluster
    7              0.000024 syn match	vimHiBang	contained	"!"	skipwhite nextgroup=@vimHighlightCluster
                            
    7              0.000017 syn match	vimHiGroup	contained	"\i\+"
    7              0.000032 syn case ignore
    7              0.000149 syn keyword	vimHiAttrib	contained	none bold inverse italic nocombine reverse standout strikethrough underline undercurl underdouble underdotted underdashed
    7              0.000099 syn keyword	vimFgBgAttrib	contained	none bg background fg foreground
    7              0.000012 syn case match
    7              0.000028 syn match	vimHiAttribList	contained	"\i\+"	contains=vimHiAttrib
    7              0.000031 syn match	vimHiAttribList	contained	"\i\+,"he=e-1	contains=vimHiAttrib nextgroup=vimHiAttribList
    7              0.000023 syn case ignore
    7              0.000584 syn keyword	vimHiCtermColor	contained	black blue brown cyan darkblue darkcyan darkgray darkgreen darkgrey darkmagenta darkred darkyellow gray green grey grey40 grey50 grey90 lightblue lightcyan lightgray lightgreen lightgrey lightmagenta lightred lightyellow magenta red seagreen white yellow
    7              0.000054 syn match	vimHiCtermColor	contained	"\<color\d\{1,3}\>"
                            
    7              0.000011 syn case match
    7              0.000141 syn match	vimHiFontname	contained	"[a-zA-Z\-*]\+"
    7              0.000038 syn match	vimHiGuiFontname	contained	"'[a-zA-Z\-* ]\+'"
    7              0.000034 syn match	vimHiGuiRgb	contained	"#\x\{6}"
                            
                            " Highlighting: hi group key=arg ... {{{2
    7              0.000207 syn cluster	vimHiCluster contains=vimGroup,vimHiBlend,vimHiGroup,vimHiTerm,vimHiCTerm,vimHiStartStop,vimHiCtermFgBg,vimHiCtermul,vimHiGui,vimHiGuiFont,vimHiGuiFgBg,vimHiKeyError,vimNotation
    7              0.000066 syn region	vimHiKeyList	contained oneline start="\i\+" skip="\\\\\|\\|" end="$\||"	contains=@vimHiCluster
    7              0.000043 if !exists("g:vimsyn_noerror") && !exists("g:vimsyn_vimhikeyerror")
    7              0.000021  syn match	vimHiKeyError	contained	"\i\+="he=e-1
    7              0.000007 endif
    7              0.000029 syn match	vimHiTerm	contained	"\cterm="he=e-1		nextgroup=vimHiAttribList
    7              0.000041 syn match	vimHiStartStop	contained	"\c\(start\|stop\)="he=e-1	nextgroup=vimHiTermcap,vimOption
    7              0.000031 syn match	vimHiCTerm	contained	"\ccterm="he=e-1		nextgroup=vimHiAttribList
    7              0.000047 syn match	vimHiCtermFgBg	contained	"\ccterm[fb]g="he=e-1	nextgroup=vimHiNmbr,vimHiCtermColor,vimFgBgAttrib,vimHiCtermError
    7              0.000039 syn match	vimHiCtermul	contained	"\cctermul="he=e-1	nextgroup=vimHiNmbr,vimHiCtermColor,vimFgBgAttrib,vimHiCtermError
    7              0.000023 syn match	vimHiGui	contained	"\cgui="he=e-1		nextgroup=vimHiAttribList
    7              0.000025 syn match	vimHiGuiFont	contained	"\cfont="he=e-1		nextgroup=vimHiFontname
    7              0.000046 syn match	vimHiGuiFgBg	contained	"\cgui\%([fb]g\|sp\)="he=e-1	nextgroup=vimHiGroup,vimHiGuiFontname,vimHiGuiRgb,vimFgBgAttrib
    7              0.000024 syn match	vimHiTermcap	contained	"\S\+"		contains=vimNotation
    7              0.000024 syn match	vimHiBlend	contained	"\cblend="he=e-1		nextgroup=vimHiNmbr
    7              0.000014 syn match	vimHiNmbr	contained	'\d\+'
                            
                            " Highlight: clear {{{2
    7              0.000019 syn keyword	vimHiClear	contained	clear	nextgroup=vimHiGroup
                            
                            " Highlight: link {{{2
                            " see tst24 (hi def vs hi) (Jul 06, 2018)
                            "syn region	vimHiLink	contained oneline matchgroup=vimCommand start="\(\<hi\%[ghlight]\s\+\)\@<=\(\(def\%[ault]\s\+\)\=link\>\|\<def\>\)" end="$"	contains=vimHiGroup,vimGroup,vimHLGroup,vimNotation
    7              0.000101 syn region	vimHiLink	contained oneline matchgroup=vimCommand start="\(\<hi\%[ghlight]\s\+\)\@<=\(\(def\%[ault]\s\+\)\=link\>\|\<def\>\)" end="$"	contains=@vimHiCluster
    7              0.000032 syn cluster vimFuncBodyList add=vimHiLink
                            
                            " Control Characters: {{{2
                            " ==================
    7              0.000025 syn match	vimCtrlChar	"[--]"
                            
                            " Beginners - Patterns that involve ^ {{{2
                            " =========
    7              0.000061 syn match	vimLineComment	+^[ \t:]*"\("[^"]*"\|[^"]\)*$+	contains=@vimCommentGroup,vimCommentString,vimCommentTitle
    7              0.000051 syn match	vim9LineComment	+^[ \t:]\+#.*$+	contains=@vimCommentGroup,vimCommentString,vimCommentTitle
    7              0.000070 syn match	vimCommentTitle	'"\s*\%([sS]:\|\h\w*#\)\=\u\w*\(\s\+\u\w*\)*:'hs=s+1	contained contains=vimCommentTitleLeader,vimTodo,@vimCommentGroup
    7              0.000025 syn match	vimContinue	"^\s*\\"
    7              0.000073 syn region	vimString	start="^\s*\\\z(['"]\)" skip='\\\\\|\\\z1' end="\z1" oneline keepend contains=@vimStringGroup,vimContinue
    7              0.000019 syn match	vimCommentTitleLeader	'"\s\+'ms=s+1	contained
                            
                            " Searches And Globals: {{{2
                            " ====================
    7              0.000034 syn match	vimSearch	'^\s*[/?].*'		contains=vimSearchDelim
    7              0.000040 syn match	vimSearchDelim	'^\s*\zs[/?]\|[/?]$'	contained
    7              0.000066 syn region	vimGlobal	matchgroup=Statement start='\<g\%[lobal]!\=/'  skip='\\.' end='/'	skipwhite nextgroup=vimSubst
    7              0.000063 syn region	vimGlobal	matchgroup=Statement start='\<v\%[global]!\=/' skip='\\.' end='/'	skipwhite nextgroup=vimSubst
                            
                            " Embedded Scripts:  {{{2
                            " ================
                            "   perl,ruby     : Benoit Cerrina
                            "   python,tcl    : Johannes Zellner
                            "   mzscheme, lua : Charles Campbell
                            
                            " Allows users to specify the type of embedded script highlighting
                            " they want:  (perl/python/ruby/tcl support)
                            "   g:vimsyn_embed == 0   : don't embed any scripts
                            "   g:vimsyn_embed =~# 'l' : embed lua
                            "   g:vimsyn_embed =~# 'm' : embed mzscheme
                            "   g:vimsyn_embed =~# 'p' : embed perl
                            "   g:vimsyn_embed =~# 'P' : embed python
                            "   g:vimsyn_embed =~# 'r' : embed ruby
                            "   g:vimsyn_embed =~# 't' : embed tcl
    7              0.000025 if !exists("g:vimsyn_embed")
    1              0.000002  let g:vimsyn_embed = 'l'
    7              0.000005 endif
                            
                            " [-- lua --] {{{3
    7              0.001665 let s:luapath= fnameescape(expand("<sfile>:p:h")."/lua.vim")
    7              0.002241 if !filereadable(s:luapath)
                             for s:luapath in split(globpath(&rtp,"syntax/lua.vim"),"\n")
                              if filereadable(fnameescape(s:luapath))
                               let s:luapath= fnameescape(s:luapath)
                               break
                              endif
                             endfor
    7              0.000007 endif
    7              0.003874 if g:vimsyn_embed =~# 'l' && filereadable(s:luapath)
    7              0.000047  unlet! b:current_syntax
    7              0.000066  syn cluster vimFuncBodyList	add=vimLuaRegion
    7   0.030983   0.008814  exe "syn include @vimLuaScript ".s:luapath
    7              0.000157  VimFoldl syn region vimLuaRegion matchgroup=vimScriptDelim start=+lua\s*<<\s*\z(.*\)$+ end=+^\z1$+	contains=@vimLuaScript
    7              0.000086  VimFoldl syn region vimLuaRegion matchgroup=vimScriptDelim start=+lua\s*<<\s*$+ end=+\.$+	contains=@vimLuaScript
    7              0.000036  syn cluster vimFuncBodyList	add=vimLuaRegion
                            else
                             syn region vimEmbedError start=+lua\s*<<\s*\z(.*\)$+ end=+^\z1$+
                             syn region vimEmbedError start=+lua\s*<<\s*$+ end=+\.$+
    7              0.000009 endif
    7              0.000016 unlet s:luapath
                            
                            " [-- perl --] {{{3
    7              0.001479 let s:perlpath= fnameescape(expand("<sfile>:p:h")."/perl.vim")
    7              0.002062 if !filereadable(s:perlpath)
                             for s:perlpath in split(globpath(&rtp,"syntax/perl.vim"),"\n")
                              if filereadable(fnameescape(s:perlpath))
                               let s:perlpath= fnameescape(s:perlpath)
                               break
                              endif
                             endfor
    7              0.000007 endif
    7              0.000047 if g:vimsyn_embed =~# 'p' && filereadable(s:perlpath)
                             unlet! b:current_syntax
                             syn cluster vimFuncBodyList	add=vimPerlRegion
                             let s:foldmethod = &l:foldmethod
                             exe "syn include @vimPerlScript ".s:perlpath
                             let &l:foldmethod = s:foldmethod
                             VimFoldp syn region vimPerlRegion  matchgroup=vimScriptDelim start=+pe\%[rl]\s*<<\s*\z(\S*\)\ze\(\s*["#].*\)\=$+ end=+^\z1\ze\(\s*[#"].*\)\=$+	contains=@vimPerlScript
                             VimFoldp syn region vimPerlRegion	matchgroup=vimScriptDelim start=+pe\%[rl]\s*<<\s*$+ end=+\.$+			contains=@vimPerlScript
                             syn cluster vimFuncBodyList	add=vimPerlRegion
    7              0.000008 else
    7              0.000085  syn region vimEmbedError start=+pe\%[rl]\s*<<\s*\z(.*\)$+ end=+^\z1$+
    7              0.000047  syn region vimEmbedError start=+pe\%[rl]\s*<<\s*$+ end=+\.$+
    7              0.000005 endif
    7              0.000013 unlet s:perlpath
                            
                            " [-- ruby --] {{{3
    7              0.000986 let s:rubypath= fnameescape(expand("<sfile>:p:h")."/ruby.vim")
    7              0.001613 if !filereadable(s:rubypath)
                             for s:rubypath in split(globpath(&rtp,"syntax/ruby.vim"),"\n")
                              if filereadable(fnameescape(s:rubypath))
                               let s:rubypath= fnameescape(s:rubypath)
                               break
                              endif
                             endfor
    7              0.000007 endif
    7              0.000062 if g:vimsyn_embed =~# 'r' && filereadable(s:rubypath)
                             syn cluster vimFuncBodyList	add=vimRubyRegion
                             unlet! b:current_syntax
                             let s:foldmethod = &l:foldmethod
                             exe "syn include @vimRubyScript ".s:rubypath
                             let &l:foldmethod = s:foldmethod
                             VimFoldr syn region vimRubyRegion	matchgroup=vimScriptDelim start=+rub[y]\s*<<\s*\z(\S*\)\ze\(\s*#.*\)\=$+ end=+^\z1\ze\(\s*".*\)\=$+	contains=@vimRubyScript
                             syn region vimRubyRegion	matchgroup=vimScriptDelim start=+rub[y]\s*<<\s*$+ end=+\.$+			contains=@vimRubyScript
                             syn cluster vimFuncBodyList	add=vimRubyRegion
    7              0.000008 else
    7              0.000071  syn region vimEmbedError start=+rub[y]\s*<<\s*\z(.*\)$+ end=+^\z1$+
    7              0.000041  syn region vimEmbedError start=+rub[y]\s*<<\s*$+ end=+\.$+
    7              0.000005 endif
    7              0.000014 unlet s:rubypath
                            
                            " [-- python --] {{{3
    7              0.001173 let s:pythonpath= fnameescape(expand("<sfile>:p:h")."/python.vim")
    7              0.002011 if !filereadable(s:pythonpath)
                             for s:pythonpath in split(globpath(&rtp,"syntax/python.vim"),"\n")
                              if filereadable(fnameescape(s:pythonpath))
                               let s:pythonpath= fnameescape(s:pythonpath)
                               break
                              endif
                             endfor
    7              0.000007 endif
    7              0.000042 if g:vimsyn_embed =~# 'P' && filereadable(s:pythonpath)
                             unlet! b:current_syntax
                             syn cluster vimFuncBodyList	add=vimPythonRegion
                             exe "syn include @vimPythonScript ".s:pythonpath
                             VimFoldP syn region vimPythonRegion matchgroup=vimScriptDelim start=+py\%[thon][3x]\=\s*<<\s*\%(trim\s*\)\=\z(\S*\)\ze\(\s*#.*\)\=$+ end=+^\z1\ze\(\s*".*\)\=$+	contains=@vimPythonScript
                             VimFoldP syn region vimPythonRegion matchgroup=vimScriptDelim start=+py\%[thon][3x]\=\s*<<\s*\%(trim\s*\)\=$+ end=+\.$+				contains=@vimPythonScript
                             VimFoldP syn region vimPythonRegion matchgroup=vimScriptDelim start=+Py\%[thon]2or3\s*<<\s*\%(trim\s*\)\=\z(\S*\)\ze\(\s*#.*\)\=$+ end=+^\z1\ze\(\s*".*\)\=$+	contains=@vimPythonScript
                             VimFoldP syn region vimPythonRegion matchgroup=vimScriptDelim start=+Py\%[thon]2or3\=\s*<<\s*\%(trim\s*\)\=$+ end=+\.$+				contains=@vimPythonScript
                             syn cluster vimFuncBodyList	add=vimPythonRegion
    7              0.000008 else
    7              0.000158  syn region vimEmbedError start=+py\%[thon]3\=\s*<<\s*\z(.*\)$+ end=+^\z1$+
    7              0.000056  syn region vimEmbedError start=+py\%[thon]3\=\s*<<\s*$+ end=+\.$+
    7              0.000006 endif
    7              0.000027 unlet s:pythonpath
                            
                            " [-- tcl --] {{{3
    7              0.000046 if has("win32") || has("win95") || has("win64") || has("win16")
                             " apparently has("tcl") has been hanging vim on some windows systems with cygwin
    7              0.000128  let s:trytcl= (&shell !~ '\<\%(bash\>\|4[nN][tT]\|\<zsh\)\>\%(\.exe\)\=$')
                            else
                             let s:trytcl= 1
    7              0.000005 endif
    7              0.000009 if s:trytcl
    7              0.001017  let s:tclpath= fnameescape(expand("<sfile>:p:h")."/tcl.vim")
    7              0.001836  if !filereadable(s:tclpath)
                              for s:tclpath in split(globpath(&rtp,"syntax/tcl.vim"),"\n")
                               if filereadable(fnameescape(s:tclpath))
                                let s:tclpath= fnameescape(s:tclpath)
                                break
                               endif
                              endfor
    7              0.000007  endif
    7              0.000039  if g:vimsyn_embed =~# 't' && filereadable(s:tclpath)
                              unlet! b:current_syntax
                              syn cluster vimFuncBodyList	add=vimTclRegion
                              exe "syn include @vimTclScript ".s:tclpath
                              VimFoldt syn region vimTclRegion matchgroup=vimScriptDelim start=+tc[l]\=\s*<<\s*\z(.*\)$+ end=+^\z1$+	contains=@vimTclScript
                              VimFoldt syn region vimTclRegion matchgroup=vimScriptDelim start=+tc[l]\=\s*<<\s*$+ end=+\.$+	contains=@vimTclScript
                              syn cluster vimFuncBodyList	add=vimTclScript
    7              0.000008  else
    7              0.000076   syn region vimEmbedError start=+tc[l]\=\s*<<\s*\z(.*\)$+ end=+^\z1$+
    7              0.000047   syn region vimEmbedError start=+tc[l]\=\s*<<\s*$+ end=+\.$+
    7              0.000005  endif
    7              0.000013  unlet s:tclpath
                            else
                             syn region vimEmbedError start=+tc[l]\=\s*<<\s*\z(.*\)$+ end=+^\z1$+
                             syn region vimEmbedError start=+tc[l]\=\s*<<\s*$+ end=+\.$+
    7              0.000011 endif
    7              0.000014 unlet s:trytcl
                            
                            " [-- mzscheme --] {{{3
    7              0.001045 let s:mzschemepath= fnameescape(expand("<sfile>:p:h")."/scheme.vim")
    7              0.001810 if !filereadable(s:mzschemepath)
                             for s:mzschemepath in split(globpath(&rtp,"syntax/mzscheme.vim"),"\n")
                              if filereadable(fnameescape(s:mzschemepath))
                               let s:mzschemepath= fnameescape(s:mzschemepath)
                               break
                              endif
                             endfor
    7              0.000007 endif
    7              0.000054 if g:vimsyn_embed =~# 'm' && filereadable(s:mzschemepath)
                             unlet! b:current_syntax
                             let s:iskKeep= &isk
                             syn cluster vimFuncBodyList	add=vimMzSchemeRegion
                             exe "syn include @vimMzSchemeScript ".s:mzschemepath
                             let &isk= s:iskKeep
                             unlet s:iskKeep
                             VimFoldm syn region vimMzSchemeRegion matchgroup=vimScriptDelim start=+mz\%[scheme]\s*<<\s*\z(.*\)$+ end=+^\z1$+	contains=@vimMzSchemeScript
                             VimFoldm syn region vimMzSchemeRegion matchgroup=vimScriptDelim start=+mz\%[scheme]\s*<<\s*$+ end=+\.$+		contains=@vimMzSchemeScript
                             syn cluster vimFuncBodyList	add=vimMzSchemeRegion
    7              0.000007 else
    7              0.000083  syn region vimEmbedError start=+mz\%[scheme]\s*<<\s*\z(.*\)$+ end=+^\z1$+
    7              0.000060  syn region vimEmbedError start=+mz\%[scheme]\s*<<\s*$+ end=+\.$+
    7              0.000006 endif
    7              0.000013 unlet s:mzschemepath
                            
                            " Synchronize (speed) {{{2
                            "============
    7              0.000024 if exists("g:vimsyn_minlines")
                             exe "syn sync minlines=".g:vimsyn_minlines
    7              0.000005 endif
    7              0.000141 exe "syn sync maxlines=".s:vimsyn_maxlines
    7              0.000029 syn sync linecont	"^\s\+\\"
    7              0.000056 syn sync match vimAugroupSyncA	groupthere NONE	"\<aug\%[roup]\>\s\+[eE][nN][dD]"
                            
                            " ====================
                            " Highlighting Settings {{{2
                            " ====================
                            
    7              0.000022 if !exists("skip_vim_syntax_inits")
    7              0.000016  if !exists("g:vimsyn_noerror")
    7              0.000018   hi def link vimBehaveError	vimError
    7              0.000011   hi def link vimCollClassErr	vimError
    7              0.000010   hi def link vimErrSetting	vimError
    7              0.000010   hi def link vimEmbedError	Normal
    7              0.000010   hi def link vimFTError	vimError
    7              0.000010   hi def link vimFunctionError	vimError
    7              0.000014   hi def link vimFunc         	vimError
    7              0.000010   hi def link vimHiAttribList	vimError
    7              0.000009   hi def link vimHiCtermError	vimError
    7              0.000010   hi def link vimHiKeyError	vimError
    7              0.000017   hi def link vimKeyCodeError	vimError
    7              0.000010   hi def link vimMapModErr	vimError
    7              0.000009   hi def link vimSubstFlagErr	vimError
    7              0.000009   hi def link vimSynCaseError	vimError
    7              0.000009   hi def link vimBufnrWarn	vimWarn
    7              0.000004  endif
                            
    7              0.000011  hi def link vimAbb	vimCommand
    7              0.000010  hi def link vimAddress	vimMark
    7              0.000009  hi def link vimAugroupError	vimError
    7              0.000009  hi def link vimAugroupKey	vimCommand
    7              0.000013  hi def link vimAuHighlight	vimHighlight
    7              0.000010  hi def link vimAutoCmdOpt	vimOption
    7              0.000009  hi def link vimAutoCmd	vimCommand
    7              0.000010  hi def link vimAutoEvent	Type
    7              0.000009  hi def link vimAutoCmdMod	Special
    7              0.000009  hi def link vimAutoSet	vimCommand
    7              0.000009  hi def link vimBehaveModel	vimBehave
    7              0.000008  hi def link vimBehave	vimCommand
    7              0.000010  hi def link vimBracket	Delimiter
    7              0.000011  hi def link vimCmplxRepeat	SpecialChar
    7              0.000071  hi def link vimCommand	Statement
    7              0.000010  hi def link vimComment	Comment
    7              0.000008  hi def link vim9Comment	Comment
    7              0.000010  hi def link vimCommentString	vimString
    7              0.000010  hi def link vimCommentTitle	PreProc
    7              0.000009  hi def link vimCondHL	vimCommand
    7              0.000009  hi def link vimContinue	Special
    7              0.000010  hi def link vimCtrlChar	SpecialChar
    7              0.000009  hi def link vimEchoHLNone	vimGroup
    7              0.000008  hi def link vimEchoHL	vimCommand
    7              0.000009  hi def link vimElseIfErr	Error
    7              0.000008  hi def link vimElseif	vimCondHL
    7              0.000008  hi def link vimEnvvar	PreProc
    7              0.000008  hi def link vimError	Error
    7              0.000009  hi def link vimEscape	Special
    7              0.000010  hi def link vimFBVar	vimVar
    7              0.000012  hi def link vimFgBgAttrib	vimHiAttrib
    7              0.000026  hi def link vimFuncEcho	vimCommand
    7              0.000010  hi def link vimHiCtermul	vimHiTerm
    7              0.000010  hi def link vimFold	Folded
    7              0.000010  hi def link vimFTCmd	vimCommand
    7              0.000010  hi def link vimFTOption	vimSynType
    7              0.000009  hi def link vimFuncKey	vimCommand
    7              0.000010  hi def link vimFuncName	Function
    7              0.000008  hi def link vimFuncSID	Special
    7              0.000010  hi def link vimFuncVar	Identifier
    7              0.000017  hi def link vimGroupAdd	vimSynOption
    7              0.000013  hi def link vimGroupName	vimGroup
    7              0.000010  hi def link vimGroupRem	vimSynOption
    7              0.000009  hi def link vimGroupSpecial	Special
    7              0.000008  hi def link vimGroup	Type
    7              0.000008  hi def link vimHiAttrib	PreProc
    7              0.000008  hi def link vimHiBlend	vimHiTerm
    7              0.000010  hi def link vimHiClear	vimHighlight
    7              0.000009  hi def link vimHiCtermFgBg	vimHiTerm
    7              0.000009  hi def link vimHiCTerm	vimHiTerm
    7              0.000008  hi def link vimHighlight	vimCommand
    7              0.000009  hi def link vimHiGroup	vimGroupName
    7              0.000008  hi def link vimHiGuiFgBg	vimHiTerm
    7              0.000008  hi def link vimHiGuiFont	vimHiTerm
    7              0.000008  hi def link vimHiGuiRgb	vimNumber
    7              0.000008  hi def link vimHiGui	vimHiTerm
    7              0.000009  hi def link vimHiNmbr	Number
    7              0.000008  hi def link vimHiStartStop	vimHiTerm
    7              0.000007  hi def link vimHiTerm	Type
    7              0.000008  hi def link vimHLGroup	vimGroup
    7              0.000009  hi def link vimHLMod	PreProc
    7              0.000008  hi def link vimInsert	vimString
    7              0.000008  hi def link vimIskSep	Delimiter
    7              0.000009  hi def link vimKeyCode	vimSpecFile
    7              0.000008  hi def link vimKeyword	Statement
    7              0.000008  hi def link vimLet	vimCommand
    7              0.000009  hi def link vimLetHereDoc	vimString
    7              0.000010  hi def link vimLetHereDocStart	Special
    7              0.000009  hi def link vimLetHereDocStop	Special
    7              0.000011  hi def link vimLineComment	vimComment
    7              0.000009  hi def link vim9LineComment	vimComment
    7              0.000009  hi def link vimMapBang	vimCommand
    7              0.000010  hi def link vimMapModKey	vimFuncSID
    7              0.000008  hi def link vimMapMod	vimBracket
    7              0.000008  hi def link vimMap	vimCommand
    7              0.000008  hi def link vimMark	Number
    7              0.000009  hi def link vimMarkNumber	vimNumber
    7              0.000009  hi def link vimMenuMod	vimMapMod
    7              0.000010  hi def link vimMenuNameMore	vimMenuName
    7              0.000008  hi def link vimMenuName	PreProc
    7              0.000009  hi def link vimMtchComment	vimComment
    7              0.000016  hi def link vimNorm	vimCommand
    7              0.000009  hi def link vimNotation	Special
    7              0.000009  hi def link vimNotFunc	vimCommand
    7              0.000009  hi def link vimNotPatSep	vimString
    7              0.000008  hi def link vimNumber	Number
    7              0.000008  hi def link vimOperError	Error
    7              0.000007  hi def link vimOper	Operator
    7              0.000008  hi def link vimOperStar	vimOper
    7              0.000008  hi def link vimOption	PreProc
    7              0.000009  hi def link vimParenSep	Delimiter
    7              0.000008  hi def link vimPatSepErr	vimError
    7              0.000008  hi def link vimPatSepR	vimPatSep
    7              0.000008  hi def link vimPatSep	SpecialChar
    7              0.000009  hi def link vimPatSepZone	vimString
    7              0.000008  hi def link vimPatSepZ	vimPatSep
    7              0.000008  hi def link vimPattern	Type
    7              0.000009  hi def link vimPlainMark	vimMark
    7              0.000009  hi def link vimPlainRegister	vimRegister
    7              0.000008  hi def link vimRegister	SpecialChar
    7              0.000009  hi def link vimScriptDelim	Comment
    7              0.000009  hi def link vimSearchDelim	Statement
    7              0.000009  hi def link vimSearch	vimString
    7              0.000009  hi def link vimSep	Delimiter
    7              0.000007  hi def link vimSetMod	vimOption
    7              0.000008  hi def link vimSetSep	Statement
    7              0.000009  hi def link vimSetString	vimString
    7              0.000008  hi def link vimSpecFile	Identifier
    7              0.000009  hi def link vimSpecFileMod	vimSpecFile
    7              0.000008  hi def link vimSpecial	Type
    7              0.000008  hi def link vimStatement	Statement
    7              0.000008  hi def link vimStringCont	vimString
    7              0.000007  hi def link vimString	String
    7              0.000008  hi def link vimStringEnd	vimString
    7              0.000010  hi def link vimSubst1	vimSubst
    7              0.000008  hi def link vimSubstDelim	Delimiter
    7              0.000010  hi def link vimSubstFlags	Special
    7              0.000011  hi def link vimSubstSubstr	SpecialChar
    7              0.000067  hi def link vimSubstTwoBS	vimString
    7              0.000010  hi def link vimSubst	vimCommand
    7              0.000008  hi def link vimSynCaseError	Error
    7              0.000008  hi def link vimSynCase	Type
    7              0.000008  hi def link vimSyncC	Type
    7              0.000009  hi def link vimSyncError	Error
    7              0.000010  hi def link vimSyncGroupName	vimGroupName
    7              0.000009  hi def link vimSyncGroup	vimGroupName
    7              0.000007  hi def link vimSyncKey	Type
    7              0.000008  hi def link vimSyncNone	Type
    7              0.000010  hi def link vimSynContains	vimSynOption
    7              0.000049  hi def link vimSynError	Error
    7              0.000011  hi def link vimSynKeyContainedin	vimSynContains
    7              0.000010  hi def link vimSynKeyOpt	vimSynOption
    7              0.000009  hi def link vimSynMtchGrp	vimSynOption
    7              0.000010  hi def link vimSynMtchOpt	vimSynOption
    7              0.000010  hi def link vimSynNextgroup	vimSynOption
    7              0.000011  hi def link vimSynNotPatRange	vimSynRegPat
    7              0.000008  hi def link vimSynOption	Special
    7              0.000009  hi def link vimSynPatRange	vimString
    7              0.000009  hi def link vimSynRegOpt	vimSynOption
    7              0.000008  hi def link vimSynRegPat	vimString
    7              0.000008  hi def link vimSynReg	Type
    7              0.000008  hi def link vimSyntax	vimCommand
    7              0.000008  hi def link vimSynType	vimSpecial
    7              0.000008  hi def link vimTodo	Todo
    7              0.000008  hi def link vimType	Type
    7              0.000010  hi def link vimUnmap	vimMap
    7              0.000009  hi def link vimUserAttrbCmpltFunc	Special
    7              0.000011  hi def link vimUserAttrbCmplt	vimSpecial
    7              0.000009  hi def link vimUserAttrbKey	vimOption
    7              0.000009  hi def link vimUserAttrb	vimSpecial
    7              0.000008  hi def link vimUserAttrbError	Error
    7              0.000008  hi def link vimUserCmdError	Error
    7              0.000008  hi def link vimUserCommand	vimCommand
    7              0.000008  hi def link vimUserFunc	Normal
    7              0.000008  hi def link vimVar	Identifier
    7              0.000007  hi def link vimWarn	WarningMsg
                            
    7              0.000011  hi def link nvimAutoEvent	vimAutoEvent
    7              0.000008  hi def link nvimHLGroup	vimHLGroup
    7              0.000008  hi def link nvimMap	vimMap
    7              0.000008  hi def link nvimUnmap	vimUnmap
    7              0.000005 endif
                            
                            " Current Syntax Variable: {{{2
    7              0.000020 let b:current_syntax = "vim"
                            
                            " ---------------------------------------------------------------------
                            " Cleanup: {{{1
    7              0.000077 delc VimFolda
    7              0.000012 delc VimFoldf
    7              0.000009 delc VimFoldl
    7              0.000008 delc VimFoldm
    7              0.000008 delc VimFoldp
    7              0.000008 delc VimFoldP
    7              0.000008 delc VimFoldr
    7              0.000008 delc VimFoldt
    7              0.000092 let &cpo = s:keepcpo
    7              0.000015 unlet s:keepcpo
                            " vim:ts=18  fdm=marker

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\syntax/lua.vim
Sourced 16 times
Total time:   0.050203
 Self time:   0.050203

count  total (s)   self (s)
                            " Vim syntax file
                            " Language:     Lua 4.0, Lua 5.0, Lua 5.1, Lua 5.2 and Lua 5.3
                            " Maintainer:   Marcus Aurelius Farias <masserahguard-lua 'at' yahoo com>
                            " First Author: Carlos Augusto Teixeira Mendes <cmendes 'at' inf puc-rio br>
                            " Last Change:  2022 Sep 07
                            " Options:      lua_version = 4 or 5
                            "               lua_subversion = 0 (for 4.0 or 5.0)
                            "                               or 1, 2, 3 (for 5.1, 5.2 or 5.3)
                            "               the default is 5.3
                            
                            " quit when a syntax file was already loaded
   16              0.000170 if exists("b:current_syntax")
                              finish
   16              0.000015 endif
                            
   16              0.000176 let s:cpo_save = &cpo
   16              0.000209 set cpo&vim
                            
   16              0.000067 if !exists("lua_version")
                              " Default is lua 5.3
    1              0.000004   let lua_version = 5
    1              0.000002   let lua_subversion = 3
   15              0.000046 elseif !exists("lua_subversion")
                              " lua_version exists, but lua_subversion doesn't. In this case set it to 0
                              let lua_subversion = 0
   16              0.000010 endif
                            
   16              0.000037 syn case match
                            
                            " syncing method
   16              0.000049 syn sync minlines=1000
                            
   16              0.000033 if lua_version >= 5
   16              0.000092   syn keyword luaMetaMethod __add __sub __mul __div __pow __unm __concat
   16              0.000040   syn keyword luaMetaMethod __eq __lt __le
   16              0.000043   syn keyword luaMetaMethod __index __newindex __call
   16              0.000046   syn keyword luaMetaMethod __metatable __mode __gc __tostring
   16              0.000011 endif
                            
   16              0.000051 if lua_version > 5 || (lua_version == 5 && lua_subversion >= 1)
   16              0.000026   syn keyword luaMetaMethod __mod __len
   16              0.000008 endif
                            
   16              0.000053 if lua_version > 5 || (lua_version == 5 && lua_subversion >= 2)
   16              0.000023   syn keyword luaMetaMethod __pairs
   16              0.000008 endif
                            
   16              0.000042 if lua_version > 5 || (lua_version == 5 && lua_subversion >= 3)
   16              0.000030   syn keyword luaMetaMethod __idiv __name
   16              0.000038   syn keyword luaMetaMethod __band __bor __bxor __bnot __shl __shr
   16              0.000008 endif
                            
   16              0.000040 if lua_version > 5 || (lua_version == 5 && lua_subversion >= 4)
                              syn keyword luaMetaMethod __close
   16              0.000008 endif
                            
                            " catch errors caused by wrong parenthesis and wrong curly brackets or
                            " keywords placed outside their respective blocks
                            
   16              0.000177 syn region luaParen transparent start='(' end=')' contains=TOP,luaParenError
   16              0.000045 syn match  luaParenError ")"
   16              0.000041 syn match  luaError "}"
   16              0.000119 syn match  luaError "\<\%(end\|else\|elseif\|then\|until\|in\)\>"
                            
                            " Function declaration
   16              0.000170 syn region luaFunctionBlock transparent matchgroup=luaFunction start="\<function\>" end="\<end\>" contains=TOP
                            
                            " else
   16              0.000058 syn keyword luaCondElse matchgroup=luaCond contained containedin=luaCondEnd else
                            
                            " then ... end
   16              0.000111 syn region luaCondEnd contained transparent matchgroup=luaCond start="\<then\>" end="\<end\>" contains=TOP
                            
                            " elseif ... then
   16              0.000138 syn region luaCondElseif contained containedin=luaCondEnd transparent matchgroup=luaCond start="\<elseif\>" end="\<then\>" contains=TOP
                            
                            " if ... then
   16              0.000143 syn region luaCondStart transparent matchgroup=luaCond start="\<if\>" end="\<then\>"me=e-4 contains=TOP nextgroup=luaCondEnd skipwhite skipempty
                            
                            " do ... end
   16              0.000101 syn region luaBlock transparent matchgroup=luaStatement start="\<do\>" end="\<end\>" contains=TOP
                            " repeat ... until
   16              0.000101 syn region luaRepeatBlock transparent matchgroup=luaRepeat start="\<repeat\>" end="\<until\>" contains=TOP
                            
                            " while ... do
   16              0.000166 syn region luaWhile transparent matchgroup=luaRepeat start="\<while\>" end="\<do\>"me=e-2 contains=TOP nextgroup=luaBlock skipwhite skipempty
                            
                            " for ... do and for ... in ... do
   16              0.000126 syn region luaFor transparent matchgroup=luaRepeat start="\<for\>" end="\<do\>"me=e-2 contains=TOP nextgroup=luaBlock skipwhite skipempty
                            
   16              0.000040 syn keyword luaFor contained containedin=luaFor in
                            
                            " other keywords
   16              0.000039 syn keyword luaStatement return local break
   16              0.000059 if lua_version > 5 || (lua_version == 5 && lua_subversion >= 2)
   16              0.000034   syn keyword luaStatement goto
   16              0.000073   syn match luaLabel "::\I\i*::"
   16              0.000011 endif
                            
                            " operators
   16              0.000036 syn keyword luaOperator and or not
                            
   16              0.000048 if (lua_version == 5 && lua_subversion >= 3) || lua_version > 5
   16              0.000186   syn match luaSymbolOperator "[#<>=~^&|*/%+-]\|\.\{2,3}"
                            elseif lua_version == 5 && (lua_subversion == 1 || lua_subversion == 2)
                              syn match luaSymbolOperator "[#<>=~^*/%+-]\|\.\{2,3}"
                            else
                              syn match luaSymbolOperator "[<>=~^*/+-]\|\.\{2,3}"
   16              0.000026 endif
                            
                            " comments
   16              0.000083 syn keyword luaTodo            contained TODO FIXME XXX
   16              0.000131 syn match   luaComment         "--.*$" contains=luaTodo,@Spell
   16              0.000224 if lua_version == 5 && lua_subversion == 0
                              syn region luaComment        matchgroup=luaCommentDelimiter start="--\[\[" end="\]\]" contains=luaTodo,luaInnerComment,@Spell
                              syn region luaInnerComment   contained transparent start="\[\[" end="\]\]"
   16              0.000076 elseif lua_version > 5 || (lua_version == 5 && lua_subversion >= 1)
                              " Comments in Lua 5.1: --[[ ... ]], [=[ ... ]=], [===[ ... ]===], etc.
   16              0.000214   syn region luaComment        matchgroup=luaCommentDelimiter start="--\[\z(=*\)\[" end="\]\z1\]" contains=luaTodo,@Spell
   16              0.000016 endif
                            
                            " first line may start with #!
   16              0.000067 syn match luaComment "\%^#!.*"
                            
   16              0.000047 syn keyword luaConstant nil
   16              0.000028 if lua_version > 4
   16              0.000054   syn keyword luaConstant true false
   16              0.000009 endif
                            
                            " strings
   16              0.000137 syn match  luaSpecial contained #\\[\\abfnrtv'"[\]]\|\\[[:digit:]]\{,3}#
   16              0.000024 if lua_version == 5
   16              0.000030   if lua_subversion == 0
                                syn region luaString2 matchgroup=luaStringDelimiter start=+\[\[+ end=+\]\]+ contains=luaString2,@Spell
   16              0.000016   else
   16              0.000026     if lua_subversion >= 2
   16              0.000094       syn match  luaSpecial contained #\\z\|\\x[[:xdigit:]]\{2}#
   16              0.000012     endif
   16              0.000045     if lua_subversion >= 3
   16              0.000076       syn match  luaSpecial contained #\\u{[[:xdigit:]]\+}#
   16              0.000017     endif
   16              0.000177     syn region luaString2 matchgroup=luaStringDelimiter start="\[\z(=*\)\[" end="\]\z1\]" contains=@Spell
   16              0.000010   endif
   16              0.000016 endif
   16              0.000234 syn region luaString matchgroup=luaStringDelimiter start=+'+ end=+'+ skip=+\\\\\|\\'+ contains=luaSpecial,@Spell
   16              0.000114 syn region luaString matchgroup=luaStringDelimiter start=+"+ end=+"+ skip=+\\\\\|\\"+ contains=luaSpecial,@Spell
                            
                            " integer number
   16              0.000058 syn match luaNumber "\<\d\+\>"
                            " floating point number, with dot, optional exponent
   16              0.000101 syn match luaNumber  "\<\d\+\.\d*\%([eE][-+]\=\d\+\)\="
                            " floating point number, starting with a dot, optional exponent
   16              0.000081 syn match luaNumber  "\.\d\+\%([eE][-+]\=\d\+\)\=\>"
                            " floating point number, without dot, with exponent
   16              0.000066 syn match luaNumber  "\<\d\+[eE][-+]\=\d\+\>"
                            
                            " hex numbers
   16              0.000024 if lua_version >= 5
   16              0.000021   if lua_subversion == 1
                                syn match luaNumber "\<0[xX]\x\+\>"
   16              0.000036   elseif lua_subversion >= 2
   16              0.000132     syn match luaNumber "\<0[xX][[:xdigit:].]\+\%([pP][-+]\=\d\+\)\=\>"
   16              0.000011   endif
   16              0.000008 endif
                            
                            " tables
   16              0.000122 syn region luaTableBlock transparent matchgroup=luaTable start="{" end="}" contains=TOP,luaStatement
                            
                            " methods
   16              0.000058 syntax match luaFunc ":\@<=\k\+"
                            
                            " built-in functions
   16              0.000097 syn keyword luaFunc assert collectgarbage dofile error next
   16              0.000068 syn keyword luaFunc print rawget rawset self tonumber tostring type _VERSION
                            
   16              0.000025 if lua_version == 4
                              syn keyword luaFunc _ALERT _ERRORMESSAGE gcinfo
                              syn keyword luaFunc call copytagmethods dostring
                              syn keyword luaFunc foreach foreachi getglobal getn
                              syn keyword luaFunc gettagmethod globals newtag
                              syn keyword luaFunc setglobal settag settagmethod sort
                              syn keyword luaFunc tag tinsert tremove
                              syn keyword luaFunc _INPUT _OUTPUT _STDIN _STDOUT _STDERR
                              syn keyword luaFunc openfile closefile flush seek
                              syn keyword luaFunc setlocale execute remove rename tmpname
                              syn keyword luaFunc getenv date clock exit
                              syn keyword luaFunc readfrom writeto appendto read write
                              syn keyword luaFunc PI abs sin cos tan asin
                              syn keyword luaFunc acos atan atan2 ceil floor
                              syn keyword luaFunc mod frexp ldexp sqrt min max log
                              syn keyword luaFunc log10 exp deg rad random
                              syn keyword luaFunc randomseed strlen strsub strlower strupper
                              syn keyword luaFunc strchar strrep ascii strbyte
                              syn keyword luaFunc format strfind gsub
                              syn keyword luaFunc getinfo getlocal setlocal setcallhook setlinehook
   16              0.000041 elseif lua_version == 5
   16              0.000046   syn keyword luaFunc getmetatable setmetatable
   16              0.000033   syn keyword luaFunc ipairs pairs
   16              0.000031   syn keyword luaFunc pcall xpcall
   16              0.000081   syn keyword luaFunc _G loadfile rawequal require
   16              0.000024   if lua_subversion == 0
                                syn keyword luaFunc getfenv setfenv
                                syn keyword luaFunc loadstring unpack
                                syn keyword luaFunc gcinfo loadlib LUA_PATH _LOADED _REQUIREDNAME
   16              0.000014   else
   16              0.000043     syn keyword luaFunc load select
   16              0.000087     syn match   luaFunc /\<package\.cpath\>/
   16              0.000072     syn match   luaFunc /\<package\.loaded\>/
   16              0.000082     syn match   luaFunc /\<package\.loadlib\>/
   16              0.000067     syn match   luaFunc /\<package\.path\>/
   16              0.000237     syn match   luaFunc /\<package\.preload\>/
   16              0.000030     if lua_subversion == 1
                                  syn keyword luaFunc getfenv setfenv
                                  syn keyword luaFunc loadstring module unpack
                                  syn match   luaFunc /\<package\.loaders\>/
                                  syn match   luaFunc /\<package\.seeall\>/
   16              0.000027     elseif lua_subversion >= 2
   16              0.000036       syn keyword luaFunc _ENV rawlen
   16              0.000058       syn match   luaFunc /\<package\.config\>/
   16              0.000057       syn match   luaFunc /\<package\.preload\>/
   16              0.000076       syn match   luaFunc /\<package\.searchers\>/
   16              0.000071       syn match   luaFunc /\<package\.searchpath\>/
   16              0.000011     endif
                            
   16              0.000023     if lua_subversion >= 3
   16              0.000079       syn match luaFunc /\<coroutine\.isyieldable\>/
   16              0.000012     endif
   16              0.000019     if lua_subversion >= 4
                                  syn keyword luaFunc warn
                                  syn match luaFunc /\<coroutine\.close\>/
   16              0.000016     endif
   16              0.000059     syn match luaFunc /\<coroutine\.running\>/
   16              0.000013   endif
   16              0.000060   syn match   luaFunc /\<coroutine\.create\>/
   16              0.000060   syn match   luaFunc /\<coroutine\.resume\>/
   16              0.000055   syn match   luaFunc /\<coroutine\.status\>/
   16              0.000058   syn match   luaFunc /\<coroutine\.wrap\>/
   16              0.000050   syn match   luaFunc /\<coroutine\.yield\>/
                            
   16              0.000141   syn match   luaFunc /\<string\.byte\>/
   16              0.000088   syn match   luaFunc /\<string\.char\>/
   16              0.000076   syn match   luaFunc /\<string\.dump\>/
   16              0.000065   syn match   luaFunc /\<string\.find\>/
   16              0.000057   syn match   luaFunc /\<string\.format\>/
   16              0.000050   syn match   luaFunc /\<string\.gsub\>/
   16              0.000057   syn match   luaFunc /\<string\.len\>/
   16              0.000057   syn match   luaFunc /\<string\.lower\>/
   16              0.000049   syn match   luaFunc /\<string\.rep\>/
   16              0.000046   syn match   luaFunc /\<string\.sub\>/
   16              0.000052   syn match   luaFunc /\<string\.upper\>/
   16              0.000059   if lua_subversion == 0
                                syn match luaFunc /\<string\.gfind\>/
   16              0.000022   else
   16              0.000068     syn match luaFunc /\<string\.gmatch\>/
   16              0.000053     syn match luaFunc /\<string\.match\>/
   16              0.000053     syn match luaFunc /\<string\.reverse\>/
   16              0.000012   endif
   16              0.000036   if lua_subversion >= 3
   16              0.000084     syn match luaFunc /\<string\.pack\>/
   16              0.000063     syn match luaFunc /\<string\.packsize\>/
   16              0.000064     syn match luaFunc /\<string\.unpack\>/
   16              0.000061     syn match luaFunc /\<utf8\.char\>/
   16              0.000058     syn match luaFunc /\<utf8\.charpattern\>/
   16              0.000056     syn match luaFunc /\<utf8\.codes\>/
   16              0.000053     syn match luaFunc /\<utf8\.codepoint\>/
   16              0.000050     syn match luaFunc /\<utf8\.len\>/
   16              0.000050     syn match luaFunc /\<utf8\.offset\>/
   16              0.000010   endif
                            
   16              0.000027   if lua_subversion == 0
                                syn match luaFunc /\<table\.getn\>/
                                syn match luaFunc /\<table\.setn\>/
                                syn match luaFunc /\<table\.foreach\>/
                                syn match luaFunc /\<table\.foreachi\>/
   16              0.000042   elseif lua_subversion == 1
                                syn match luaFunc /\<table\.maxn\>/
   16              0.000029   elseif lua_subversion >= 2
   16              0.000063     syn match luaFunc /\<table\.pack\>/
   16              0.000054     syn match luaFunc /\<table\.unpack\>/
   16              0.000023     if lua_subversion >= 3
   16              0.000048       syn match luaFunc /\<table\.move\>/
   16              0.000012     endif
   16              0.000011   endif
   16              0.000053   syn match   luaFunc /\<table\.concat\>/
   16              0.000049   syn match   luaFunc /\<table\.insert\>/
   16              0.000197   syn match   luaFunc /\<table\.sort\>/
   16              0.000071   syn match   luaFunc /\<table\.remove\>/
                            
   16              0.000031   if lua_subversion == 2
                                syn match   luaFunc /\<bit32\.arshift\>/
                                syn match   luaFunc /\<bit32\.band\>/
                                syn match   luaFunc /\<bit32\.bnot\>/
                                syn match   luaFunc /\<bit32\.bor\>/
                                syn match   luaFunc /\<bit32\.btest\>/
                                syn match   luaFunc /\<bit32\.bxor\>/
                                syn match   luaFunc /\<bit32\.extract\>/
                                syn match   luaFunc /\<bit32\.lrotate\>/
                                syn match   luaFunc /\<bit32\.lshift\>/
                                syn match   luaFunc /\<bit32\.replace\>/
                                syn match   luaFunc /\<bit32\.rrotate\>/
                                syn match   luaFunc /\<bit32\.rshift\>/
   16              0.000080   endif
                            
   16              0.000065   syn match   luaFunc /\<math\.abs\>/
   16              0.000052   syn match   luaFunc /\<math\.acos\>/
   16              0.000048   syn match   luaFunc /\<math\.asin\>/
   16              0.000046   syn match   luaFunc /\<math\.atan\>/
   16              0.000036   if lua_subversion < 3
                                syn match   luaFunc /\<math\.atan2\>/
   16              0.000014   endif
   16              0.000103   syn match   luaFunc /\<math\.ceil\>/
   16              0.000055   syn match   luaFunc /\<math\.sin\>/
   16              0.000044   syn match   luaFunc /\<math\.cos\>/
   16              0.000045   syn match   luaFunc /\<math\.tan\>/
   16              0.000067   syn match   luaFunc /\<math\.deg\>/
   16              0.000046   syn match   luaFunc /\<math\.exp\>/
   16              0.000048   syn match   luaFunc /\<math\.floor\>/
   16              0.000048   syn match   luaFunc /\<math\.log\>/
   16              0.000042   syn match   luaFunc /\<math\.max\>/
   16              0.000042   syn match   luaFunc /\<math\.min\>/
   16              0.000028   if lua_subversion == 0
                                syn match luaFunc /\<math\.mod\>/
                                syn match luaFunc /\<math\.log10\>/
   16              0.000231   elseif lua_subversion == 1
                                syn match luaFunc /\<math\.log10\>/
   16              0.000019   endif
   16              0.000041   if lua_subversion >= 1
   16              0.000075     syn match luaFunc /\<math\.huge\>/
   16              0.000050     syn match luaFunc /\<math\.fmod\>/
   16              0.000049     syn match luaFunc /\<math\.modf\>/
   16              0.000037     if lua_subversion == 1 || lua_subversion == 2
                                  syn match luaFunc /\<math\.cosh\>/
                                  syn match luaFunc /\<math\.sinh\>/
                                  syn match luaFunc /\<math\.tanh\>/
   16              0.000016     endif
   16              0.000013   endif
   16              0.000061   syn match   luaFunc /\<math\.rad\>/
   16              0.000049   syn match   luaFunc /\<math\.sqrt\>/
   16              0.000037   if lua_subversion < 3
                                syn match   luaFunc /\<math\.pow\>/
                                syn match   luaFunc /\<math\.frexp\>/
                                syn match   luaFunc /\<math\.ldexp\>/
   16              0.000021   else
   16              0.000084     syn match   luaFunc /\<math\.maxinteger\>/
   16              0.000060     syn match   luaFunc /\<math\.mininteger\>/
   16              0.000061     syn match   luaFunc /\<math\.tointeger\>/
   16              0.000052     syn match   luaFunc /\<math\.type\>/
   16              0.000048     syn match   luaFunc /\<math\.ult\>/
   16              0.000014   endif
   16              0.000061   syn match   luaFunc /\<math\.random\>/
   16              0.000055   syn match   luaFunc /\<math\.randomseed\>/
   16              0.000057   syn match   luaFunc /\<math\.pi\>/
                            
   16              0.000046   syn match   luaFunc /\<io\.close\>/
   16              0.000044   syn match   luaFunc /\<io\.flush\>/
   16              0.000045   syn match   luaFunc /\<io\.input\>/
   16              0.000044   syn match   luaFunc /\<io\.lines\>/
   16              0.000047   syn match   luaFunc /\<io\.open\>/
   16              0.000048   syn match   luaFunc /\<io\.output\>/
   16              0.000042   syn match   luaFunc /\<io\.popen\>/
   16              0.000045   syn match   luaFunc /\<io\.read\>/
   16              0.000045   syn match   luaFunc /\<io\.stderr\>/
   16              0.000043   syn match   luaFunc /\<io\.stdin\>/
   16              0.000045   syn match   luaFunc /\<io\.stdout\>/
   16              0.000048   syn match   luaFunc /\<io\.tmpfile\>/
   16              0.000043   syn match   luaFunc /\<io\.type\>/
   16              0.000040   syn match   luaFunc /\<io\.write\>/
                            
   16              0.000046   syn match   luaFunc /\<os\.clock\>/
   16              0.000044   syn match   luaFunc /\<os\.date\>/
   16              0.000053   syn match   luaFunc /\<os\.difftime\>/
   16              0.000059   syn match   luaFunc /\<os\.execute\>/
   16              0.000078   syn match   luaFunc /\<os\.exit\>/
   16              0.000049   syn match   luaFunc /\<os\.getenv\>/
   16              0.000045   syn match   luaFunc /\<os\.remove\>/
   16              0.000055   syn match   luaFunc /\<os\.rename\>/
   16              0.000052   syn match   luaFunc /\<os\.setlocale\>/
   16              0.000045   syn match   luaFunc /\<os\.time\>/
   16              0.000043   syn match   luaFunc /\<os\.tmpname\>/
                            
   16              0.000112   syn match   luaFunc /\<debug\.debug\>/
   16              0.000057   syn match   luaFunc /\<debug\.gethook\>/
   16              0.000053   syn match   luaFunc /\<debug\.getinfo\>/
   16              0.000085   syn match   luaFunc /\<debug\.getlocal\>/
   16              0.000061   syn match   luaFunc /\<debug\.getupvalue\>/
   16              0.000051   syn match   luaFunc /\<debug\.setlocal\>/
   16              0.000054   syn match   luaFunc /\<debug\.setupvalue\>/
   16              0.000050   syn match   luaFunc /\<debug\.sethook\>/
   16              0.000054   syn match   luaFunc /\<debug\.traceback\>/
   16              0.000036   if lua_subversion == 1
                                syn match luaFunc /\<debug\.getfenv\>/
                                syn match luaFunc /\<debug\.setfenv\>/
   16              0.000019   endif
   16              0.000041   if lua_subversion >= 1
   16              0.000079     syn match luaFunc /\<debug\.getmetatable\>/
   16              0.000060     syn match luaFunc /\<debug\.setmetatable\>/
   16              0.000061     syn match luaFunc /\<debug\.getregistry\>/
   16              0.000023     if lua_subversion >= 2
   16              0.000060       syn match luaFunc /\<debug\.getuservalue\>/
   16              0.000063       syn match luaFunc /\<debug\.setuservalue\>/
   16              0.000055       syn match luaFunc /\<debug\.upvalueid\>/
   16              0.000055       syn match luaFunc /\<debug\.upvaluejoin\>/
   16              0.000013     endif
   16              0.000021     if lua_subversion >= 4
                                  syn match luaFunc /\<debug.setcstacklimit\>/
   16              0.000012     endif
   16              0.000009   endif
   16              0.000009 endif
                            
                            " Define the default highlighting.
                            " Only when an item doesn't have highlighting yet
                            
   16              0.000050 hi def link luaStatement        Statement
   16              0.000025 hi def link luaRepeat           Repeat
   16              0.000020 hi def link luaFor              Repeat
   16              0.000020 hi def link luaString           String
   16              0.000021 hi def link luaString2          String
   16              0.000022 hi def link luaStringDelimiter  luaString
   16              0.000022 hi def link luaNumber           Number
   16              0.000024 hi def link luaOperator         Operator
   16              0.000024 hi def link luaSymbolOperator   luaOperator
   16              0.000023 hi def link luaConstant         Constant
   16              0.000024 hi def link luaCond             Conditional
   16              0.000030 hi def link luaCondElse         Conditional
   16              0.000034 hi def link luaFunction         Function
   16              0.000022 hi def link luaMetaMethod       Function
   16              0.000023 hi def link luaComment          Comment
   16              0.000022 hi def link luaCommentDelimiter luaComment
   16              0.000023 hi def link luaTodo             Todo
   16              0.000024 hi def link luaTable            Structure
   16              0.000022 hi def link luaError            Error
   16              0.000022 hi def link luaParenError       Error
   16              0.000024 hi def link luaSpecial          SpecialChar
   16              0.000021 hi def link luaFunc             Identifier
   16              0.000023 hi def link luaLabel            Label
                            
                            
   16              0.000079 let b:current_syntax = "lua"
                            
   16              0.000207 let &cpo = s:cpo_save
   16              0.000037 unlet s:cpo_save
                            " vim: et ts=8 sw=2

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\syntax\vim\generated.vim
Sourced 3 times
Total time:   0.008650
 Self time:   0.008650

count  total (s)   self (s)
    3              0.004284 syn keyword vimCommand contained  a[ppend] ab[breviate] abc[lear] abo[veleft] al[l] am[enu] an[oremenu] ar[gs] arga[dd] argd[elete] argdo argde[dupe] arge[dit] argg[lobal] argl[ocal] argu[ment] as[cii] aun[menu] b[uffer] bN[ext] ba[ll] bad[d] bal[t] bd[elete] be[have] bel[owright] bf[irst] bl[ast] bm[odified] bn[ext] bo[tright] bp[revious] br[ewind] brea[k] breaka[dd] breakd[el] breakl[ist] bro[wse] bu[ffers] bufd[o] bun[load] bw[ipeout] c[hange] cN[ext] cNf[ile] ca[bbrev] cabc[lear] cabo[ve] cad[dbuffer] cadde[xpr] caddf[ile] caf[ter] cal[l] cat[ch] cb[uffer] cbe[fore] cbel[ow] cbo[ttom] cc ccl[ose] cd cdo ce[nter] cex[pr] cf[ile] cfd[o] cfi[rst] cg[etfile] cgetb[uffer] cgete[xpr] ch[dir] cha[nges] che[ckhealth] checkp[ath] checkt[ime] chi[story] cl[ist] cla[st] clo[se] cle[arjumps] cm[ap] cmapc[lear] cme[nu] cn[ext] cnew[er] cnf[ile] cno[remap]
    3              0.000237 syn keyword vimCommand contained  cnorea[bbrev] cnorem[enu] co[py] col[der] colo[rscheme] com[mand] comc[lear] comp[iler] con[tinue] conf[irm] cons[t] cop[en] cp[revious] cpf[ile] cq[uit] cr[ewind] cu[nmap] cuna[bbrev] cunm[enu] cw[indow] d[elete] delm[arks] deb[ug] debugg[reedy] del[command] delf[unction] di[splay] dif[fupdate] diffg[et] diffo[ff] diffp[atch] diffpu[t] diffs[plit] difft[his] dig[raphs] dj[ump] dl[ist] dr[op] ds[earch] dsp[lit] e[dit] ea[rlier] ec[ho] echoe[rr] echoh[l] echom[sg] echon el[se] elsei[f] em[enu] en[dif] endf[unction] endfo[r] endt[ry] endw[hile] ene[w] ev[al] ex exe[cute] exi[t] exu[sage] f[ile] files filet[ype] filt[er] fin[d] fina[lly] fini[sh] fir[st] fo[ld] foldc[lose] foldd[oopen] folddoc[losed] foldo[pen] for fu[nction] go[to] gr[ep] grepa[dd] gu[i] gv[im] h[elp] helpc[lose] helpg[rep] helpt[ags] ha[rdcopy]
    3              0.000267 syn keyword vimCommand contained  hi[ghlight] hid[e] his[tory] ho[rizontal] i[nsert] ia[bbrev] iabc[lear] if ij[ump] il[ist] im[ap] imapc[lear] ime[nu] in[oremap] inorea[bbrev] inorem[enu] int[ro] is[earch] isp[lit] iu[nmap] iuna[bbrev] iunm[enu] j[oin] ju[mps] k ke[epmarks] keepj[umps] keepp[atterns] keepa[lt] l[ist] lN[ext] lNf[ile] la[st] lab[ove] lan[guage] lad[dexpr] laddb[uffer] laddf[ile] laf[ter] lat[er] lb[uffer] lbe[fore] lbel[ow] lbo[ttom] lc[d] lch[dir] lcl[ose] ld[o] le[ft] lefta[bove] let lex[pr] lf[ile] lfd[o] lfi[rst] lg[etfile] lgetb[uffer] lgete[xpr] lgr[ep] lgrepa[dd] lh[elpgrep] lhi[story] ll lla[st] lli[st] lm[ap] lmapc[lear] lmak[e] ln[oremap] lne[xt] lnew[er] lnf[ile] lo[adview] loadk[eymap] loc[kmarks] lockv[ar] lol[der] lop[en] lp[revious] lpf[ile] lr[ewind] lt[ag] lu[nmap] lua luad[o] luaf[ile] lv[imgrep] lvimgrepa[dd]
    3              0.000229 syn keyword vimCommand contained  lw[indow] ls m[ove] ma[rk] mak[e] map mapc[lear] mar[ks] mat[ch] me[nu] menut[ranslate] mes[sages] mk[exrc] mks[ession] mksp[ell] mkv[imrc] mkvie[w] mo[de] mz[scheme] mzf[ile] n[ext] new nm[ap] nmapc[lear] nme[nu] nn[oremap] nnoreme[nu] no[remap] noa[utocmd] noh[lsearch] nor[eabbrev] norem[enu] nos[wapfile] nor[mal] nu[mber] nun[map] nunme[nu] o[ldfiles] om[ap] omapc[lear] ome[nu] on[ly] ono[remap] onoreme[nu] op[tions] ou[nmap] ounme[nu] ow[nsyntax] p[rint] pa[ckadd] packl[oadall] pc[lose] pe[rl] perld[o] perlf[ile] ped[it] po[p] popu[p] pp[op] pr[eserve] prev[ious] pro[file] profd[el] ps[earch] pt[ag] ptN[ext] ptf[irst] ptj[ump] ptl[ast] ptn[ext] ptp[revious] ptr[ewind] pts[elect] pu[t] pw[d] py[thon] pyd[o] pyf[ile] py3 py3d[o] pyt[hon3] py3[file] pyx pyxd[o] pyt[honx] pyx[file] q[uit] quita[ll] qa[ll] r[ead]
    3              0.000239 syn keyword vimCommand contained  rec[over] red[o] redi[r] redr[aw] redraws[tatus] redrawt[abline] reg[isters] res[ize] ret[ab] retu[rn] rew[ind] ri[ght] rightb[elow] rs[hada] ru[ntime] rund[o] rub[y] rubyd[o] rubyf[ile] rv[iminfo] sN[ext] sa[rgument] sal[l] san[dbox] sav[eas] sb[uffer] sbN[ext] sba[ll] sbf[irst] sbl[ast] sbm[odified] sbn[ext] sbp[revious] sbr[ewind] sc[riptnames] scripte[ncoding] se[t] setf[iletype] setg[lobal] setl[ocal] sf[ind] sfir[st] si[malt] sig[n] sil[ent] sl[eep] sla[st] sm[agic] smap smapc[lear] sme[nu] sn[ext] sno[magic] snor[emap] snoreme[nu] so[urce] sor[t] sp[lit] spe[llgood] spelld[ump] spelli[nfo] spellr[epall] spellra[re] spellu[ndo] spellw[rong] spr[evious] sr[ewind] st[op] sta[g] star[tinsert] startg[replace] startr[eplace] sto[pinsert] stj[ump] sts[elect] su[nhide] sunm[ap] sunme[nu] sus[pend] sv[iew] sw[apname]
    3              0.000175 syn keyword vimCommand contained  sy[ntax] synti[me] sync[bind] t tc[d] tch[dir] tN[ext] ta[g] tags tab tabc[lose] tabd[o] tabe[dit] tabf[ind] tabfir[st] tabm[ove] tabl[ast] tabn[ext] tabnew tabo[nly] tabp[revious] tabN[ext] tabr[ewind] tabs tc[l] tcld[o] tclf[ile] te[rminal] tf[irst] th[row] tj[ump] tl[ast] tlm[enu] tln[oremenu] tlu[nmenu] tm[enu] tma[p] tmapc[lear] tn[ext] tno[remap] to[pleft] tp[revious] tr[ewind] try ts[elect] tu[nmenu] tunma[p] u[ndo] undoj[oin] undol[ist] una[bbreviate] unh[ide] unl[et] unlo[ckvar] unm[ap] unme[nu] uns[ilent] up[date] v[global] ve[rsion] verb[ose] vert[ical] vi[sual] vie[w] vim[grep] vimgrepa[dd] viu[sage] vm[ap] vmapc[lear] vme[nu] vn[oremap] vne[w] vno[remenu] vs[plit] vu[nmap] vunme[nu] w[rite] wN[ext] wa[ll] wh[ile] wi[nsize] winc[md] wind[o] winp[os] wn[ext] wp[revious] wq wqa[ll] ws[hada] wu[ndo]
    3              0.000023 syn keyword vimCommand contained  wv[iminfo] x[it] xa[ll] xm[ap] xmapc[lear] xme[nu] xn[oremap] xnoreme[nu] xu[nmap] xunme[nu] y[ank] N[ext]
                            
    3              0.000119 syn keyword vimOption contained  aleph al arabic arab invarabic noarabic invarab noarab arabicshape arshape invarabicshape noarabicshape invarshape noarshape allowrevins ari invallowrevins noallowrevins invari noari ambiwidth ambw autochdir acd invautochdir noautochdir invacd noacd autoindent ai invautoindent noautoindent invai noai autoread ar invautoread noautoread invar noar autowrite aw invautowrite noautowrite invaw noaw autowriteall awa invautowriteall noautowriteall invawa noawa background bg backspace bs backup bk invbackup nobackup invbk nobk backupcopy bkc backupdir bdir backupext bex backupskip bsk belloff bo binary bin invbinary nobinary invbin nobin bomb invbomb nobomb breakat brk breakindent bri invbreakindent nobreakindent invbri nobri breakindentopt briopt browsedir bsdir bufhidden bh buflisted bl invbuflisted nobuflisted invbl nobl
    3              0.000281 syn keyword vimOption contained  buftype bt casemap cmp cdhome cdh invcdhome nocdhome invcdh nocdh cdpath cd cedit channel charconvert ccv cindent cin invcindent nocindent invcin nocin cinkeys cink cinoptions cino cinwords cinw cinscopedecls cinsd clipboard cb cmdheight ch cmdwinheight cwh colorcolumn cc columns co comments com commentstring cms complete cpt concealcursor cocu conceallevel cole completefunc cfu completeopt cot completeslash csl confirm cf invconfirm noconfirm invcf nocf copyindent ci invcopyindent nocopyindent invci noci cpoptions cpo cursorbind crb invcursorbind nocursorbind invcrb nocrb cursorcolumn cuc invcursorcolumn nocursorcolumn invcuc nocuc cursorline cul invcursorline nocursorline invcul nocul cursorlineopt culopt debug define def delcombine deco invdelcombine nodelcombine invdeco nodeco dictionary dict diff invdiff nodiff
    3              0.000159 syn keyword vimOption contained  diffexpr dex diffopt dip digraph dg invdigraph nodigraph invdg nodg directory dir display dy eadirection ead emoji emo invemoji noemoji invemo noemo encoding enc endofline eol invendofline noendofline inveol noeol equalalways ea invequalalways noequalalways invea noea equalprg ep errorbells eb inverrorbells noerrorbells inveb noeb errorfile ef errorformat efm eventignore ei expandtab et invexpandtab noexpandtab invet noet exrc ex invexrc noexrc invex noex fileencoding fenc fileencodings fencs fileformat ff fileformats ffs fileignorecase fic invfileignorecase nofileignorecase invfic nofic filetype ft fillchars fcs fixendofline fixeol invfixendofline nofixendofline invfixeol nofixeol foldclose fcl foldcolumn fdc foldenable fen invfoldenable nofoldenable invfen nofen foldexpr fde foldignore fdi foldlevel fdl foldlevelstart fdls
    3              0.000138 syn keyword vimOption contained  foldmarker fmr foldmethod fdm foldminlines fml foldnestmax fdn foldopen fdo foldtext fdt formatexpr fex formatoptions fo formatlistpat flp formatprg fp fsync fs invfsync nofsync invfs nofs gdefault gd invgdefault nogdefault invgd nogd grepformat gfm grepprg gp guicursor gcr guifont gfn guifontwide gfw guioptions go guitablabel gtl guitabtooltip gtt helpfile hf helpheight hh helplang hlg hidden hid invhidden nohidden invhid nohid highlight hl history hi hkmap hk invhkmap nohkmap invhk nohk hkmapp hkp invhkmapp nohkmapp invhkp nohkp hlsearch hls invhlsearch nohlsearch invhls nohls icon invicon noicon iconstring ignorecase ic invignorecase noignorecase invic noic imcmdline imc invimcmdline noimcmdline invimc noimc imdisable imd invimdisable noimdisable invimd noimd iminsert imi imsearch ims inccommand icm include inc
    3              0.000225 syn keyword vimOption contained  includeexpr inex incsearch is invincsearch noincsearch invis nois indentexpr inde indentkeys indk infercase inf invinfercase noinfercase invinf noinf isfname isf isident isi iskeyword isk isprint isp joinspaces js invjoinspaces nojoinspaces invjs nojs jumpoptions jop keymap kmp keymodel km keywordprg kp langmap lmap langmenu lm langnoremap lnr invlangnoremap nolangnoremap invlnr nolnr langremap lrm invlangremap nolangremap invlrm nolrm laststatus ls lazyredraw lz invlazyredraw nolazyredraw invlz nolz linebreak lbr invlinebreak nolinebreak invlbr nolbr lines linespace lsp lisp invlisp nolisp lispoptions lop lispwords lw list invlist nolist listchars lcs loadplugins lpl invloadplugins noloadplugins invlpl nolpl magic invmagic nomagic makeef mef makeencoding menc makeprg mp matchpairs mps matchtime mat maxcombine mco
    3              0.000137 syn keyword vimOption contained  maxfuncdepth mfd maxmapdepth mmd maxmempattern mmp menuitems mis mkspellmem msm modeline ml invmodeline nomodeline invml noml modelineexpr mle invmodelineexpr nomodelineexpr invmle nomle modelines mls modifiable ma invmodifiable nomodifiable invma noma modified mod invmodified nomodified invmod nomod more invmore nomore mouse mousefocus mousef invmousefocus nomousefocus invmousef nomousef mousehide mh invmousehide nomousehide invmh nomh mousemodel mousem mousemoveevent mousemev invmousemoveevent nomousemoveevent invmousemev nomousemev mousescroll mouseshape mouses mousetime mouset nrformats nf number nu invnumber nonumber invnu nonu numberwidth nuw omnifunc ofu opendevice odev invopendevice noopendevice invodev noodev operatorfunc opfunc packpath pp paragraphs para paste invpaste nopaste pastetoggle pt patchexpr pex
    3              0.000128 syn keyword vimOption contained  patchmode pm path pa preserveindent pi invpreserveindent nopreserveindent invpi nopi previewheight pvh previewwindow pvw invpreviewwindow nopreviewwindow invpvw nopvw printdevice pdev printencoding penc printexpr pexpr printfont pfn printheader pheader printmbcharset pmbcs printmbfont pmbfn printoptions popt pumblend pb pumheight ph pumwidth pw pyxversion pyx quickfixtextfunc qftf quoteescape qe readonly ro invreadonly noreadonly invro noro redrawdebug rdb redrawtime rdt regexpengine re relativenumber rnu invrelativenumber norelativenumber invrnu nornu report revins ri invrevins norevins invri nori rightleft rl invrightleft norightleft invrl norl rightleftcmd rlc ruler ru invruler noruler invru noru rulerformat ruf runtimepath rtp scroll scr scrollback scbk scrollbind scb invscrollbind noscrollbind invscb noscb
    3              0.000159 syn keyword vimOption contained  scrolljump sj scrolloff so scrollopt sbo sections sect secure invsecure nosecure selection sel selectmode slm sessionoptions ssop shada sd shadafile sdf shell sh shellcmdflag shcf shellpipe sp shellquote shq shellredir srr shellslash ssl invshellslash noshellslash invssl nossl shelltemp stmp invshelltemp noshelltemp invstmp nostmp shellxquote sxq shellxescape sxe shiftround sr invshiftround noshiftround invsr nosr shiftwidth sw shortmess shm showbreak sbr showcmd sc invshowcmd noshowcmd invsc nosc showfulltag sft invshowfulltag noshowfulltag invsft nosft showmatch sm invshowmatch noshowmatch invsm nosm showmode smd invshowmode noshowmode invsmd nosmd showtabline stal sidescroll ss sidescrolloff siso signcolumn scl smartcase scs invsmartcase nosmartcase invscs noscs smartindent si invsmartindent nosmartindent invsi nosi
    3              0.000214 syn keyword vimOption contained  smarttab sta invsmarttab nosmarttab invsta nosta softtabstop sts spell invspell nospell spellcapcheck spc spellfile spf spelllang spl spellsuggest sps spelloptions spo splitbelow sb invsplitbelow nosplitbelow invsb nosb splitkeep spk splitright spr invsplitright nosplitright invspr nospr startofline sol invstartofline nostartofline invsol nosol statusline stl suffixes su suffixesadd sua swapfile swf invswapfile noswapfile invswf noswf switchbuf swb synmaxcol smc syntax syn tagfunc tfu tabline tal tabpagemax tpm tabstop ts tagbsearch tbs invtagbsearch notagbsearch invtbs notbs tagcase tc taglength tl tagrelative tr invtagrelative notagrelative invtr notr tags tag tagstack tgst invtagstack notagstack invtgst notgst termbidi tbidi invtermbidi notermbidi invtbidi notbidi termencoding tenc termguicolors tgc invtermguicolors notermguicolors invtgc notgc
    3              0.000148 syn keyword vimOption contained  termpastefilter tpf textwidth tw thesaurus tsr thesaurusfunc tsrfu tildeop top invtildeop notildeop invtop notop timeout to invtimeout notimeout invto noto timeoutlen tm title invtitle notitle titlelen titleold titlestring ttimeout invttimeout nottimeout ttimeoutlen ttm undodir udir undofile udf invundofile noundofile invudf noudf undolevels ul undoreload ur updatecount uc updatetime ut varsofttabstop vsts vartabstop vts verbose vbs verbosefile vfile viewdir vdir viewoptions vop viminfo vi viminfofile vif virtualedit ve visualbell vb invvisualbell novisualbell invvb novb warn invwarn nowarn whichwrap ww wildchar wc wildcharm wcm wildignore wig wildignorecase wic invwildignorecase nowildignorecase invwic nowic wildmenu wmnu invwildmenu nowildmenu invwmnu nowmnu wildmode wim wildoptions wop winaltkeys wak winbar wbr
    3              0.000058 syn keyword vimOption contained  winblend winbl winhighlight winhl window wi winheight wh winfixheight wfh invwinfixheight nowinfixheight invwfh nowfh winfixwidth wfw invwinfixwidth nowinfixwidth invwfw nowfw winminheight wmh winminwidth wmw winwidth wiw wrap invwrap nowrap wrapmargin wm wrapscan ws invwrapscan nowrapscan invws nows write invwrite nowrite writeany wa invwriteany nowriteany invwa nowa writebackup wb invwritebackup nowritebackup invwb nowb writedelay wd
                            
    3              0.000008 syn case ignore
                            
    3              0.000198 syn keyword vimAutoEvent contained  BufAdd BufDelete BufEnter BufFilePost BufFilePre BufHidden BufLeave BufNew BufNewFile BufReadCmd BufReadPost BufReadPre BufUnload BufWinEnter BufWinLeave BufWipeout BufWriteCmd BufWritePost BufWritePre ChanInfo ChanOpen CmdUndefined CmdWinEnter CmdWinLeave CmdlineChanged CmdlineEnter CmdlineLeave ColorScheme ColorSchemePre CompleteChanged CompleteDone CompleteDonePre CursorHold CursorHoldI CursorMoved CursorMovedI DiffUpdated DirChanged DirChangedPre EncodingChanged ExitPre FileAppendCmd FileAppendPost FileAppendPre FileChangedRO FileChangedShell FileChangedShellPost FileReadCmd FileReadPost FileReadPre FileType FileWriteCmd FileWritePost FileWritePre FilterReadPost FilterReadPre FilterWritePost FilterWritePre FocusGained FocusLost FuncUndefined GUIEnter GUIFailed InsertChange InsertCharPre InsertEnter InsertLeave
    3              0.000084 syn keyword vimAutoEvent contained  InsertLeavePre MenuPopup ModeChanged OptionSet QuickFixCmdPost QuickFixCmdPre QuitPre RemoteReply SearchWrapped SessionLoadPost ShellCmdPost ShellFilterPost SourceCmd SourcePost SourcePre SpellFileMissing StdinReadPost StdinReadPre SwapExists Syntax TabClosed TabEnter TabLeave TabNew TermChanged TermEnter TermLeave TermResponse TextChanged TextChangedI TextChangedP TextYankPost User VimEnter VimLeave VimLeavePre VimResized VimResume VimSuspend WinClosed WinEnter WinLeave WinNew WinScrolled BufCreate BufRead BufWrite FileEncoding
                            
    3              0.000021 syn keyword nvimAutoEvent contained  TermClose Signal LspAttach LspDetach UILeave TermOpen UIEnter RecordingEnter RecordingLeave DiagnosticChanged BufModifiedSet TabNewEntered
                            
    3              0.000004 syn case match
                            
    3              0.000116 syn keyword vimFuncName contained  reverse match abs floor ceil sqrt log10 exp sin cos tan asin acos atan sinh cosh tanh log atan2 pow fmod min max expand nvim__unpack nvim__screenshot nvim__inspect_cell nvim_select_popupmenu_item nvim_get_proc nvim_get_proc_children nvim__stats undofile nvim__id_dictionary nvim__id_array nvim__id nvim_list_chans nvim_get_chan_info nvim_del_keymap nvim_set_keymap nvim_get_keymap nvim_get_mode nvim_load_context nvim_get_context nvim_get_color_map nvim_get_color_by_name browsedir nvim_put nvim_paste nvim_set_current_tabpage buflisted insert remove sort substitute eval input cindent execute rename filter getenv len nvim_buf_create_user_command nvim_buf_del_user_command nvim_get_commands str2list nvim_buf_get_commands nvim_command_output strpart strptime strridx nvim_buf_get_number nvim_buf_clear_highlight synID
    3              0.000096 syn keyword vimFuncName contained  synIDattr nvim_buf_set_virtual_text winheight tagfiles nvim_get_option_info test_garbagecollect_now test_write_list_log timer_pause toupper trim trunc tabpagenr nvim_win_set_config nvim_win_get_config join nvim_win_get_buf nvim_win_set_buf nvim_win_get_cursor nvim_win_set_cursor win_findbuf nvim_win_get_height nvim_win_set_height nvim_win_get_width nvim_win_set_var confirm nvim_win_del_var nvim_win_get_tabpage nvim_win_get_number nvim_win_is_valid nvim_win_hide cursor nvim_win_set_hl_ns xor nvim_get_autocmds writefile winnr winlayout windowsversion win_splitmove win_move_statusline win_id2win wait virtcol2col uniq timer_stopall timer_start timer_info termopen tempname nvim_buf_del_extmark taglist tabpagebuflist systemlist system synstack submatch strtrans stridx strchars strcharpart str2nr str2float stdpath
    3              0.000085 syn keyword vimFuncName contained  nvim_set_option nvim_get_option nvim_buf_set_option foldlevel nvim_win_get_option nvim_tabpage_set_var nvim_tabpage_get_number nvim_tabpage_is_valid nvim_get_hl_by_name nvim_get_hl_by_id tr nvim__get_hl_defs nvim_set_hl nvim_set_hl_ns nvim_set_hl_ns_fast nvim_feedkeys foldtext append nvim_get_current_tabpage nvim_list_tabpages nvim_open_term nvim_create_buf nvim_set_current_win nvim_get_current_win nvim_list_wins nvim_set_current_buf nvim_get_current_buf nvim_list_bufs nvim_err_writeln nvim_err_write nvim_out_write nvim_echo nvim_set_vvar nvim_del_var nvim_get_var nvim_set_current_line nvim_get_current_line browse nvim_set_current_dir nvim__get_runtime nvim__get_lib_dir nvim_get_runtime_file nvim__runtime_inspect nvim_list_runtime_paths nvim_strwidth nvim_get_mark nvim_del_mark nvim_buf_add_highlight setreg
    3              0.000111 syn keyword vimFuncName contained  nvim_tabpage_get_win settabvar settabwinvar settagstack setwinvar sha256 wordcount winsaveview winrestview winrestcmd winline nvim_win_get_position nvim_buf_clear_namespace nvim_get_namespaces winbufnr win_move_separator nvim_win_get_var timer_stop nvim_win_set_width win_gettype win_getid win_execute wildmenumode visualmode virtcol values chdir getcharpos getcharsearch getcharstr getcmdcompltype getcmdline getcmdpos getcmdscreenpos getcmdtype getcmdwintype getcompletion getcurpos getcursorcharpos getcwd getfontname getfperm getfsize getftime getftype getjumplist getline getloclist getmarklist getmatches getmousepos getpid getpos getqflist getreg getreginfo getregtype gettabinfo gettabvar gettabwinvar gettagstack gettext getwininfo getwinpos getwinposx getwinposy getwinvar glob glob2regpat globpath has has_key
    3              0.000128 syn keyword vimFuncName contained  haslocaldir hasmapto highlightID nvim_buf_get_offset nvim_open_win nvim_buf_get_var highlight_exists nvim_buf_get_changedtick histadd histdel histget histnr hlID hlexists hostname iconv nvim_buf_del_keymap indent index inputdialog inputlist inputrestore inputsave inputsecret interrupt invert isdirectory isinf islocked isnan id items jobclose nvim_parse_expression jobpid jobresize jobsend nvim_call_dict_function jobstart jobstop jobwait json_decode json_encode keys keytrans last_buffer_nr libcall libcallnr line line2byte lispindent list2str srand luaeval maparg mapcheck mapset matchadd matchaddpos matcharg matchdelete matchend matchfuzzy matchfuzzypos matchlist matchstr matchstrpos menu_get menu_info mkdir msgpackdump msgpackparse nextnonblank nr2char pathshorten prevnonblank printf prompt_getprompt prompt_setcallback
    3              0.000103 syn keyword vimFuncName contained  prompt_setinterrupt deepcopy pum_getpos pumvisible py3eval pyeval strlen pyxeval perleval rand range readdir readfile reduce reg_executing reg_recording reg_recorded reltime reltimefloat reltimestr resolve round rpcnotify rpcrequest rpcstart rpcstop rubyeval screenattr screenchar screenchars screencol screenpos screenrow screenstring searchcount searchdecl searchpair searchpairpos searchpos serverlist serverstart serverstop setbufline setbufvar setcellwidths setcharpos setcharsearch setcmdpos setcmdline setcursorcharpos setenv nvim_input nvim_input_mouse api_info appendbufline argc argidx arglistid argv assert_beeps assert_equal assert_equalfile assert_exception assert_fails assert_false assert_inrange assert_match assert_nobeep assert_notequal assert_notmatch assert_report assert_true bufadd bufexists buffer_exists
    3              0.000116 syn keyword vimFuncName contained  nvim_del_current_line buffer_name and buffer_number nvim_get_vvar bufload bufloaded bufname bufnr bufwinid bufwinnr byte2line byteidx byteidxcomp or chanclose chansend char2nr charclass charcol charidx clearmatches col complete_add complete_check complete_info ctxget ctxpop ctxpush ctxset ctxsize debugbreak deletebufline dictwatcheradd dictwatcherdel did_filetype diff_filler diff_hlID digraph_get digraph_getlist digraph_set digraph_setlist empty environ escape eventhandler executable exepath exists expandcmd extend feedkeys file_readable nvim_list_uis filereadable filewritable finddir findfile flatten float2nr fnameescape fnamemodify foldclosed foldclosedend foldtextresult foreground fullcommand funcref garbagecollect get getbufinfo getbufline getbufvar getchangelist getchar getcharmod nvim_call_function nvim_eval
    3              0.000096 syn keyword vimFuncName contained  nvim_command shiftwidth nvim_exec nvim_eval_statusline setfperm add nvim_get_hl_id_by_name winwidth nvim_win_close undotree localtime nvim_set_var mode search delete nvim__id_float setmatches copy complete map call nvim_notify nvim_replace_termcodes split nvim_tabpage_del_var nvim_tabpage_list_wins nvim_buf_get_option nvim_get_all_options_info nvim_get_option_value strdisplaywidth tabpagewinnr nvim_win_set_option tolower nvim_create_autocmd nvim_tabpage_get_var count win_screenpos nvim_buf_set_extmark nvim_buf_get_extmark_by_id nvim_del_autocmd sockconnect nvim_clear_autocmds spellbadword nvim_create_augroup spellsuggest prompt_setprompt nvim_del_augroup_by_id nvim_del_augroup_by_name nvim_exec_autocmds synconcealed nvim_buf_line_count wincol setloclist nvim_buf_attach swapname win_id2tabwin win_gotoid setpos
    3              0.000094 syn keyword vimFuncName contained  setqflist nvim__buf_redraw_range shellescape function nvim_buf_get_lines sign_define nvim_buf_set_lines sign_getdefined sign_getplaced nvim_buf_set_text repeat sign_jump sign_place sign_placelist nvim_buf_get_text sign_undefine nvim_buf_get_keymap sign_unplace nvim_buf_set_keymap sign_unplacelist simplify string nvim_buf_set_var nvim_buf_get_extmarks nvim_buf_del_var nvim_buf_get_name nvim_set_option_value nvim_buf_set_name nvim_buf_is_loaded nvim_buf_delete nvim_buf_is_valid nvim_buf_del_mark nvim_buf_set_mark nvim_buf_get_mark synIDtrans setline soundfold stdioopen swapinfo nvim__buf_stats nvim_parse_cmd strwidth nvim_cmd nvim_create_namespace nvim_create_user_command strgetchar strftime nvim_del_user_command type changenr

SCRIPT  C:\Users\ds13\AppData\Local\nvim\after\syntax\vim\syntax__vim.vim
Sourced 3 times
Total time:   0.000066
 Self time:   0.000066

count  total (s)   self (s)

SCRIPT  C:\Users\ds13\AppData\Local\nvim-data\site\pack\packer\start\splitjoin.vim\ftplugin\lua\splitjoin.vim
Sourced 7 times
Total time:   0.000508
 Self time:   0.000508

count  total (s)   self (s)
    7              0.000121 if !exists('b:splitjoin_split_callbacks')
    7              0.000058   let b:splitjoin_split_callbacks = [
                                    \ 'sj#lua#SplitTable',
                                    \ 'sj#lua#SplitFunction',
                                    \ ]
    7              0.000010 endif
                            
    7              0.000021 if !exists('b:splitjoin_join_callbacks')
    7              0.000035   let b:splitjoin_join_callbacks = [
                                    \ 'sj#lua#JoinTable',
                                    \ 'sj#lua#JoinFunction',
                                    \ ]
    7              0.000067 endif

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\ftplugin\lua.vim
Sourced 7 times
Total time:   0.001200
 Self time:   0.001200

count  total (s)   self (s)
                            " Vim filetype plugin file.
                            " Language:		Lua
                            " Maintainer:		Doug Kearns <dougkearns@gmail.com>
                            " Previous Maintainer:	Max Ischenko <mfi@ukr.net>
                            " Contributor:		Dorai Sitaram <ds26@gte.com>
                            "			C.D. MacEachern <craig.daniel.maceachern@gmail.com>
                            " Last Change:		2022 Oct 15
                            
    7              0.000082 if exists("b:did_ftplugin")
                              finish
    7              0.000007 endif
    7              0.000026 let b:did_ftplugin = 1
                            
    7              0.000055 let s:cpo_save = &cpo
    7              0.000065 set cpo&vim
                            
    7              0.000033 setlocal comments=:--
    7              0.000022 setlocal commentstring=--\ %s
    7              0.000035 setlocal formatoptions-=t formatoptions+=croql
                            
    7              0.000027 let &l:define = '\<function\|\<local\%(\s\+function\)\='
                            
                            " TODO: handle init.lua
    7              0.000020 setlocal includeexpr=substitute(v:fname,'\\.','/','g')
    7              0.000017 setlocal suffixesadd=.lua
                            
    7              0.000016 let b:undo_ftplugin = "setlocal cms< com< def< fo< inex< sua<"
                            
    7              0.000034 if exists("loaded_matchit") && !exists("b:match_words")
    7              0.000014   let b:match_ignorecase = 0
    7              0.000079   let b:match_words =
                            	\ '\<\%(do\|function\|if\)\>:' ..
                            	\ '\<\%(return\|else\|elseif\)\>:' ..
                            	\ '\<end\>,' ..
                            	\ '\<repeat\>:\<until\>,' ..
                            	\ '\%(--\)\=\[\(=*\)\[:]\1]'
    7              0.000025   let b:undo_ftplugin ..= " | unlet! b:match_words b:match_ignorecase"
    7              0.000005 endif
                            
    7              0.000174 if (has("gui_win32") || has("gui_gtk")) && !exists("b:browsefilter")
                              let b:browsefilter = "Lua Source Files (*.lua)\t*.lua\n" ..
                            	\	       "All Files (*.*)\t*.*\n"
                              let b:undo_ftplugin ..= " | unlet! b:browsefilter"
    7              0.000004 endif
                            
    7              0.000043 let &cpo = s:cpo_save
    7              0.000014 unlet s:cpo_save
                            
                            " vim: nowrap sw=2 sts=2 ts=8 noet:

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\ftplugin\lua.lua
Sourced 7 times
Total time:   0.001298
 Self time:   0.001298

count  total (s)   self (s)
                            if vim.g.ts_highlight_lua then
                              vim.treesitter.start()
                            end

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\indent\lua.vim
Sourced 7 times
Total time:   0.000587
 Self time:   0.000587

count  total (s)   self (s)
                            " Vim indent file
                            " Language:	Lua script
                            " Maintainer:	Marcus Aurelius Farias <marcus.cf 'at' bol.com.br>
                            " First Author:	Max Ischenko <mfi 'at' ukr.net>
                            " Last Change:	2017 Jun 13
                            "		2022 Sep 07: b:undo_indent added by Doug Kearns
                            
                            " Only load this indent file when no other was loaded.
    7              0.000073 if exists("b:did_indent")
                              finish
    7              0.000007 endif
    7              0.000025 let b:did_indent = 1
                            
    7              0.000067 setlocal indentexpr=GetLuaIndent()
                            
                            " To make Vim call GetLuaIndent() when it finds '\s*end' or '\s*until'
                            " on the current line ('else' is default and includes 'elseif').
    7              0.000028 setlocal indentkeys+=0=end,0=until
                            
    7              0.000036 setlocal autoindent
                            
    7              0.000017 let b:undo_indent = "setlocal autoindent< indentexpr< indentkeys<"
                            
                            " Only define the function once.
    7              0.000024 if exists("*GetLuaIndent")
    6              0.000007   finish
    1              0.000000 endif
                            
    1              0.000002 function! GetLuaIndent()
                              " Find a non-blank line above the current line.
                              let prevlnum = prevnonblank(v:lnum - 1)
                            
                              " Hit the start of the file, use zero indent.
                              if prevlnum == 0
                                return 0
                              endif
                            
                              " Add a 'shiftwidth' after lines that start a block:
                              " 'function', 'if', 'for', 'while', 'repeat', 'else', 'elseif', '{'
                              let ind = indent(prevlnum)
                              let prevline = getline(prevlnum)
                              let midx = match(prevline, '^\s*\%(if\>\|for\>\|while\>\|repeat\>\|else\>\|elseif\>\|do\>\|then\>\)')
                              if midx == -1
                                let midx = match(prevline, '{\s*$')
                                if midx == -1
                                  let midx = match(prevline, '\<function\>\s*\%(\k\|[.:]\)\{-}\s*(')
                                endif
                              endif
                            
                              if midx != -1
                                " Add 'shiftwidth' if what we found previously is not in a comment and
                                " an "end" or "until" is not present on the same line.
                                if synIDattr(synID(prevlnum, midx + 1, 1), "name") != "luaComment" && prevline !~ '\<end\>\|\<until\>'
                                  let ind = ind + shiftwidth()
                                endif
                              endif
                            
                              " Subtract a 'shiftwidth' on end, else, elseif, until and '}'
                              " This is the part that requires 'indentkeys'.
                              let midx = match(getline(v:lnum), '^\s*\%(end\>\|else\>\|elseif\>\|until\>\|}\)')
                              if midx != -1 && synIDattr(synID(v:lnum, midx + 1, 1), "name") != "luaComment"
                                let ind = ind - shiftwidth()
                              endif
                            
                              return ind
                            endfunction

SCRIPT  C:\Users\ds13\AppData\Local\nvim-data\site\pack\packer\opt\vim-wordmotion\autoload\wordmotion.vim
Sourced 1 time
Total time:   0.000924
 Self time:   0.000421

count  total (s)   self (s)
    1              0.000010 function wordmotion#init()
                            	let l:_ = {}
                            
                            	function l:_.get(name, default)
                            		let l:spaces = get(g:, a:name, a:default)
                            		if type(l:spaces) == type('')
                            			let l:spaces = split(l:spaces, '\zs')
                            		endif
                            		call uniq(sort(l:spaces))
                            		if has('patch-7.4.2044')
                            			call filter(l:spaces, {_, val -> !empty(l:val)})
                            		else
                            			call filter(l:spaces, '!empty(v:val)')
                            		endif
                            		let l:i = index(l:spaces, '\')
                            		if l:i != -1
                            			let l:spaces[l:i] = '\\'
                            		endif
                            		for l:i in range(len(l:spaces))
                            			if len(l:spaces[l:i]) == 1
                            				let l:spaces[l:i] = '\V'.l:spaces[l:i].'\m'
                            			endif
                            		endfor
                            		return l:spaces
                            	endfunction
                            
                            	function l:_.or(list)
                            		return '\%(\%('.join(a:list, '\)\|\%(').'\)\)'
                            	endfunction
                            
                            	function l:_.not(not)
                            		return '\%('.a:not.'\@!.\)'
                            	endfunction
                            
                            	function l:_.between(s, w)
                            		let l:before = '\%('.a:w.a:s.'*\)\@<='
                            		let l:after = '\%('.a:s.'*'.a:w.'\)\@='
                            		return l:before.a:s.l:after
                            	endfunction
                            
                            	" [:alpha:] and [:alnum:] are ASCII only
                            	let l:alpha = '[[:lower:][:upper:]]'
                            	let l:alnum = '[[:lower:][:upper:][:digit:]]'
                            	let l:ss = '[[:space:]]'
                            
                            	let l:hyphen = l:_.between('-', l:alpha)
                            	let l:underscore = l:_.between('_', l:alnum)
                            	let l:spaces = l:_.get('wordmotion_spaces', [l:hyphen, l:underscore])
                            	let s:s = call(l:_.or, [[l:ss] + l:spaces])
                            	let s:S = l:_.not(s:s)
                            
                            	let l:uspaces = l:_.get('wordmotion_uppercase_spaces', [])
                            	let s:us = call(l:_.or, [[l:ss] + l:uspaces])
                            	let s:uS = l:_.not(s:us)
                            
                            	let l:a = l:alnum
                            	let l:d = '[[:digit:]]'
                            	let l:p = '[[:print:]]'
                            	let l:l = '[[:lower:]]'
                            	let l:u = '[[:upper:]]'
                            	let l:x = '[[:xdigit:]]'
                            
                            	" set complement
                            	function l:_.C(set, ...)
                            		return '\%(\%('.join(a:000, '\|').'\)\@!'.a:set.'\)'
                            	endfunction
                            
                            	let l:words = get(g:, 'wordmotion_extra', [])
                            	call add(l:words, l:u.l:l.'\+')              " CamelCase
                            	call add(l:words, l:u.'\+\ze'.l:u.l:l)       " ACRONYMSBeforeCamelCase
                            	call add(l:words, l:u.'\+')                  " UPPERCASE
                            	call add(l:words, l:l.'\+')                  " lowercase
                            	call add(l:words, '#'.l:x.'\+\>')            " #0F0F0F
                            	call add(l:words, '\<0[xX]'.l:x.'\+\>')      " 0x00 0Xff
                            	call add(l:words, '\<0[oO][0-7]\+\>')        " 0o00 0O77
                            	call add(l:words, '\<0[bB][01]\+\>')         " 0b00 0B11
                            	call add(l:words, l:d.'\+')                  " 1234 5678
                            	call add(l:words, l:_.C(l:p, l:a, s:s).'\+') " other printable characters
                            	call add(l:words, '\%^')                     " start of file
                            	call add(l:words, '\%$')                     " end of file
                            	let s:word = call(l:_.or, [l:words])
                            endfunction
                            
    1   0.000532   0.000029 call wordmotion#init()
                            
    1              0.000003 function wordmotion#motion(count, mode, flags, uppercase, extra, ...)
                            	let l:cpo = &cpoptions
                            	set cpoptions+=c
                            
                            	let l:flags = a:flags
                            
                            	if a:mode == 'o' && v:operator == 'c' && l:flags == ''
                            		" special case (see :help cw)
                            		let l:flags = 'e'
                            		let l:cw = 1
                            	else
                            		let l:cw = 0
                            	endif
                            
                            	if a:mode == 'x'
                            		normal! gv
                            	elseif a:mode == 'o' && l:flags =~# 'e'
                            		" need to make this inclusive for operator pending mode
                            		normal! v
                            	endif
                            
                            	let l:words = a:extra + [a:uppercase ? s:uS.'\+' : s:word]
                            	if l:flags != 'e' " e does not stop in an empty line
                            		call add(l:words, '^$')
                            	endif
                            
                            	let l:pattern = '\%('.join(l:words, '\|').'\)'
                            
                            	" save position to see if it moved
                            	let l:pos = getpos('.')
                            
                            	let l:count = a:count
                            	if l:cw
                            		" cw on the last character of a word will match the cursor position
                            		call search('\m'.l:pattern, l:flags.'cW')
                            		let l:count -= 1
                            	endif
                            	while l:count > 0
                            		call search('\m'.l:pattern, l:flags.'W')
                            		let l:count -= 1
                            	endwhile
                            
                            	" dw at the end of a line should not consume the newline or leading white
                            	" space on the next line
                            	let l:is_dw = a:mode == 'o' && v:operator == 'd' && l:flags == ''
                            	let l:next_line = l:pos[1] < getpos('.')[1]
                            	if l:is_dw && l:next_line
                            		let l:s = a:uppercase ? s:us : s:s
                            		" newline, leading whitespace, cursor
                            		if search('\m\n\%('.l:s.'\)*\%#', 'bW') != 0
                            			let l:dwpos = getpos('.')
                            			" need to make range inclusive
                            			call setpos('.', l:pos)
                            			normal! v
                            			call setpos('.', l:dwpos)
                            		endif
                            	endif
                            
                            	" ugly hack for 'w' going forwards at end of file
                            	" and 'ge' going backwards at beginning of file
                            	if a:count && l:pos == getpos('.')
                            		" cursor didn't move
                            		if l:flags == 'be' && line('.') == 1
                            			" at first line and going backwards, let's go to the front
                            			normal! 0
                            		elseif l:flags == '' && line('.') == line('$')
                            			" at last line and going forwards, let's go to the back
                            			if a:mode == 'o'
                            				" need to include last character if in operator pending mode
                            				normal! v
                            			endif
                            			normal! $
                            		endif
                            	endif
                            
                            	let l:actual_mode = get(a:, 1, a:mode)
                            	if l:actual_mode == 'n' || l:actual_mode == 'x'
                            		if &g:foldopen =~# '\%(^\|,\)hor\%(,\|$\)'
                            			normal! zv
                            		endif
                            	endif
                            
                            	let &cpoptions = l:cpo
                            endfunction
                            
    1              0.000003 function wordmotion#object(count, mode, inner, uppercase)
                            	let l:cpo = &cpoptions
                            	set cpoptions+=c
                            
                            	let l:flags = 'e'
                            	let l:extra = []
                            	let l:backwards = 0
                            	let l:count = a:count
                            	let l:existing_selection = 0
                            	let l:s = a:uppercase ? s:us : s:s
                            	let l:S = a:uppercase ? s:uS : s:S
                            
                            	if a:mode == 'x'
                            		normal! gv
                            		if getpos("'<") == getpos("'>")
                            			" no existing selection, exit visual mode
                            			execute 'normal!' visualmode()
                            		else
                            			let l:existing_selection = 1
                            			let l:start = getpos('.')
                            			if l:start == getpos("'<")
                            				let l:flags = 'b'
                            				let l:backwards = 1
                            			endif
                            		endif
                            	endif
                            
                            	if a:inner
                            		" for inner word, count white spaces too
                            		call add(l:extra, l:s.'\+')
                            	else
                            		if getline('.')[col('.') - 1] =~# l:s
                            			if !l:existing_selection
                            				let l:backwards = 1
                            			endif
                            			call search('\m'.l:S, 'W')
                            		endif
                            	endif
                            
                            	if !l:existing_selection
                            		call wordmotion#motion(1, 'n', 'bc', a:uppercase, l:extra, a:mode)
                            		let l:start = getpos('.')
                            		normal! v
                            		call wordmotion#motion(1, 'n', 'ec', a:uppercase, l:extra, a:mode)
                            		let l:count -= 1
                            	endif
                            
                            	call wordmotion#motion(l:count, 'n', l:flags, a:uppercase, l:extra, a:mode)
                            
                            	if !a:inner
                            		if col('.') == col('$') - 1
                            			" at end of line, go back, and consume preceding white spaces
                            			let l:backwards = 1
                            		endif
                            
                            		if l:backwards && !l:existing_selection
                            			" selection is forwards, but need to extend backwards
                            			let l:end = getpos('.')
                            			call cursor(l:start[1], l:start[2])
                            			call search('\m'.l:s.'\+\%#' , 'bW')
                            			normal! vv
                            			call cursor(l:end[1], l:end[2])
                            		elseif l:backwards
                            			" selection is actually going backwards
                            			call search('\m'.l:s.'\+\%#', 'bW')
                            		else
                            			" forward selection, consume following white spaces
                            			call search('\m\%#.'.l:s.'\+', 'eW')
                            		endif
                            	endif
                            
                            	let &cpoptions = l:cpo
                            endfunction
                            
    1              0.000002 function wordmotion#current(uppercase)
                            	let l:cursor = getpos('.')
                            	call wordmotion#motion(1, 'n', 'ec', a:uppercase, [], 'c')
                            	let l:end = getpos('.')
                            	call wordmotion#motion(1, 'n', 'bc', a:uppercase, [], 'c')
                            	let l:start = getpos('.')
                            	call cursor(l:cursor)
                            	let l:lnum = l:cursor[1]
                            	let l:line = getline(l:lnum)
                            	let l:space = a:uppercase ? s:us : s:s
                            	let l:same_line = l:start[1] == l:lnum && l:end[1] == l:lnum
                            	let l:not_empty = l:end[2] <= len(l:line)
                            	let l:not_space = l:line[l:end[2]-1] !~# l:space
                            	if l:same_line && l:not_empty && l:not_space
                            		return l:line[l:start[2]-1:l:end[2]-1]
                            	else
                            		echohl ErrorMsg
                            		echomsg 'E348: No string under cursor'
                            		echohl None
                            		return ''
                            	endif
                            endfunction
                            
    1              0.000001 function wordmotion#reload()
                            	unlet g:loaded_wordmotion
                            	runtime plugin/wordmotion.vim
                            endfunction
                            
    1              0.000001 function wordmotion#_default()
                            	unlet! g:wordmotion_nomap
                            	unlet! g:wordmotion_prefix
                            	unlet! g:wordmotion_mappings
                            	unlet! g:wordmotion_spaces
                            	unlet! g:wordmotion_uppercase_spaces
                            	call wordmotion#reload()
                            endfunction

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\syntax\typescript.vim
Sourced 4 times
Total time:   0.035528
 Self time:   0.004135

count  total (s)   self (s)
                            " Vim syntax file
                            " Language:     TypeScript
                            " Maintainer:   Bram Moolenaar, Herrington Darkholme
                            " Last Change:	2019 Nov 30
                            " Based On:     Herrington Darkholme's yats.vim
                            " Changes:      Go to https:github.com/HerringtonDarkholme/yats.vim for recent changes.
                            " Origin:       https://github.com/othree/yajs
                            " Credits:      Kao Wei-Ko(othree), Jose Elera Campana, Zhao Yi, Claudio Fleiner, Scott Shattuck
                            "               (This file is based on their hard work), gumnos (From the #vim
                            "               IRC Channel in Freenode)
                            
                            " This is the same syntax that is in yats.vim, but:
                            " - flattened into one file
                            " - HiLink commands changed to "hi def link"
                            " - Setting 'cpo' to the Vim value
                            
    4              0.000056 if !exists("main_syntax")
    4              0.000012   if exists("b:current_syntax")
                                finish
    4              0.000004   endif
    4              0.000022   let main_syntax = 'typescript'
    4              0.000007 endif
                            
    4              0.000033 let s:cpo_save = &cpo
    4              0.000039 set cpo&vim
                            
                            " this region is NOT used in TypeScriptReact
                            " nextgroup doesn't contain objectLiteral, let outer region contains it
    4              0.000111 syntax region typescriptTypeCast matchgroup=typescriptTypeBrackets
                              \ start=/< \@!/ end=/>/
                              \ contains=@typescriptType
                              \ nextgroup=@typescriptExpression
                              \ contained skipwhite oneline
                            
                            
                            """""""""""""""""""""""""""""""""""""""""""""""""""
                            " Source the part common with typescriptreact.vim
    4   0.034888   0.003494 source <sfile>:h/shared/typescriptcommon.vim
                            
                            
    4              0.000015 let b:current_syntax = "typescript"
    4              0.000012 if main_syntax == 'typescript'
    4              0.000006   unlet main_syntax
    4              0.000003 endif
                            
    4              0.000029 let &cpo = s:cpo_save
    4              0.000085 unlet s:cpo_save

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\syntax\lsp_markdown.vim
Sourced 3 times
Total time:   0.732428
 Self time:   0.004973

count  total (s)   self (s)
                            " Vim syntax file
                            " Language:     Markdown-like LSP docstrings
                            " Maintainer:   https://github.com/neovim/neovim
                            " URL:          http://neovim.io
                            " Remark:       Uses markdown syntax file
                            
                            " Source the default Nvim markdown syntax, not other random ones.
    3   0.731986   0.004531 execute 'source' expand('<sfile>:p:h') .. '/markdown.vim'
                            
    3              0.000048 syn cluster mkdNonListItem add=mkdEscape,mkdNbsp
                            
                            " Don't highlight invalid markdown syntax in LSP docstrings.
    3              0.000004 syn clear markdownError
                            
    3              0.000004 syn clear markdownEscape
    3              0.000054 syntax region markdownEscape matchgroup=markdownEscape start=/\\\ze[\\\x60*{}\[\]()#+\-,.!_>~|"$%&'\/:;<=?@^ ]/ end=/./ containedin=ALL keepend oneline concealends
                            
                            " Conceal backticks (which delimit code fragments).
                            " We ignore g:markdown_syntax_conceal here.
    3              0.000038 syn region markdownCode matchgroup=markdownCodeDelimiter start="`" end="`" keepend contains=markdownLineStart concealends
    3              0.000028 syn region markdownCode matchgroup=markdownCodeDelimiter start="`` \=" end=" \=``" keepend contains=markdownLineStart concealends
    3              0.000028 syn region markdownCode matchgroup=markdownCodeDelimiter start="^\s*````*.*$" end="^\s*````*\ze\s*$" keepend concealends
                            
                            " Highlight code fragments.
    3              0.000005 hi def link markdownCode Special
                            
                            " Conceal HTML entities.
    3              0.000014 syntax match mkdNbsp /&nbsp;/ conceal cchar= 
    3              0.000012 syntax match mkdLt /&lt;/  conceal cchar=<
    3              0.000010 syntax match mkdGt /&gt;/  conceal cchar=>
    3              0.000013 syntax match mkdAmp /&amp;/  conceal cchar=&
    3              0.000012 syntax match mkdQuot /&quot;/  conceal cchar="
                            
    3              0.000027 hi def link mkdEscape Special

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\syntax/markdown.vim
Sourced 3 times
Total time:   0.727358
 Self time:   0.225429

count  total (s)   self (s)
                            " Vim syntax file
                            " Language:     Markdown
                            " Maintainer:   Tim Pope <https://github.com/tpope/vim-markdown>
                            " Filenames:    *.markdown
                            " Last Change:  2022 Oct 13
                            
    3              0.000027 if exists("b:current_syntax")
                              finish
    3              0.000003 endif
                            
    3              0.000009 if !exists('main_syntax')
    3              0.000011   let main_syntax = 'markdown'
    3              0.000002 endif
                            
    3              0.000021 if has('folding')
    3              0.000014   let s:foldmethod = &l:foldmethod
    3              0.000008   let s:foldtext = &l:foldtext
    3              0.000002 endif
    3              0.000008 let s:iskeyword = &l:iskeyword
                            
    3   0.184801   0.021550 runtime! syntax/html.vim
    3              0.000018 unlet! b:current_syntax
                            
    3              0.000020 if !exists('g:markdown_fenced_languages')
                              let g:markdown_fenced_languages = []
    3              0.000003 endif
    3              0.000013 let s:done_include = {}
   36              0.000239 for s:type in map(copy(g:markdown_fenced_languages),'matchstr(v:val,"[^=]*$")')
   33              0.000214   if has_key(s:done_include, matchstr(s:type,'[^.]*'))
   12              0.000013     continue
   21              0.000013   endif
   21              0.000075   if s:type =~ '\.'
                                let b:{matchstr(s:type,'[^.]*')}_subtype = matchstr(s:type,'\.\zs.*')
   21              0.000011   endif
   21              0.000054   syn case match
   21   0.510920   0.176010   exe 'syn include @markdownHighlight_'.tr(s:type,'.','_').' syntax/'.matchstr(s:type,'[^.]*').'.vim'
   21              0.000113   unlet! b:current_syntax
   21              0.000385   let s:done_include[matchstr(s:type,'[^.]*')] = 1
   24              0.000036 endfor
    3              0.000008 unlet! s:type
    3              0.000010 unlet! s:done_include
                            
    3              0.000009 syn spell toplevel
    3              0.000017 if exists('s:foldmethod') && s:foldmethod !=# &l:foldmethod
                              let &l:foldmethod = s:foldmethod
                              unlet s:foldmethod
    3              0.000003 endif
    3              0.000012 if exists('s:foldtext') && s:foldtext !=# &l:foldtext
                              let &l:foldtext = s:foldtext
                              unlet s:foldtext
    3              0.000002 endif
    3              0.000007 if s:iskeyword !=# &l:iskeyword
                              let &l:iskeyword = s:iskeyword
    3              0.000002 endif
    3              0.000006 unlet s:iskeyword
                            
    3              0.000013 if !exists('g:markdown_minlines')
    1              0.000003   let g:markdown_minlines = 50
    3              0.000003 endif
    3              0.000030 execute 'syn sync minlines=' . g:markdown_minlines
    3              0.000005 syn sync linebreaks=1
    3              0.000005 syn case ignore
                            
    3              0.000030 syn match markdownValid '[<>]\c[a-z/$!]\@!' transparent contains=NONE
    3              0.000018 syn match markdownValid '&\%(#\=\w*;\)\@!' transparent contains=NONE
                            
    3              0.000032 syn match markdownLineStart "^[<@]\@!" nextgroup=@markdownBlock,htmlSpecialChar
                            
    3              0.000039 syn cluster markdownBlock contains=markdownH1,markdownH2,markdownH3,markdownH4,markdownH5,markdownH6,markdownBlockquote,markdownListMarker,markdownOrderedListMarker,markdownCodeBlock,markdownRule
    3              0.000035 syn cluster markdownInline contains=markdownLineBreak,markdownLinkText,markdownItalic,markdownBold,markdownCode,markdownEscape,@htmlTop,markdownError,markdownValid
                            
    3              0.000023 syn match markdownH1 "^.\+\n=\+$" contained contains=@markdownInline,markdownHeadingRule,markdownAutomaticLink
    3              0.000015 syn match markdownH2 "^.\+\n-\+$" contained contains=@markdownInline,markdownHeadingRule,markdownAutomaticLink
                            
    3              0.000010 syn match markdownHeadingRule "^[=-]\+$" contained
                            
    3              0.000043 syn region markdownH1 matchgroup=markdownH1Delimiter start=" \{,3}#\s"      end="#*\s*$" keepend oneline contains=@markdownInline,markdownAutomaticLink contained
    3              0.000027 syn region markdownH2 matchgroup=markdownH2Delimiter start=" \{,3}##\s"     end="#*\s*$" keepend oneline contains=@markdownInline,markdownAutomaticLink contained
    3              0.000034 syn region markdownH3 matchgroup=markdownH3Delimiter start=" \{,3}###\s"    end="#*\s*$" keepend oneline contains=@markdownInline,markdownAutomaticLink contained
    3              0.000024 syn region markdownH4 matchgroup=markdownH4Delimiter start=" \{,3}####\s"   end="#*\s*$" keepend oneline contains=@markdownInline,markdownAutomaticLink contained
    3              0.000025 syn region markdownH5 matchgroup=markdownH5Delimiter start=" \{,3}#####\s"  end="#*\s*$" keepend oneline contains=@markdownInline,markdownAutomaticLink contained
    3              0.000027 syn region markdownH6 matchgroup=markdownH6Delimiter start=" \{,3}######\s" end="#*\s*$" keepend oneline contains=@markdownInline,markdownAutomaticLink contained
                            
    3              0.000013 syn match markdownBlockquote ">\%(\s\|$\)" contained nextgroup=@markdownBlock
                            
    3              0.000024 syn region markdownCodeBlock start="^\n\( \{4,}\|\t\)" end="^\ze \{,3}\S.*$" keepend
                            
                            " TODO: real nesting
    3              0.000019 syn match markdownListMarker "\%(\t\| \{0,4\}\)[-*+]\%(\s\+\S\)\@=" contained
    3              0.000015 syn match markdownOrderedListMarker "\%(\t\| \{0,4}\)\<\d\+\.\%(\s\+\S\)\@=" contained
                            
    3              0.000010 syn match markdownRule "\* *\* *\*[ *]*$" contained
    3              0.000008 syn match markdownRule "- *- *-[ -]*$" contained
                            
    3              0.000011 syn match markdownLineBreak " \{2,\}$"
                            
    3              0.000033 syn region markdownIdDeclaration matchgroup=markdownLinkDelimiter start="^ \{0,3\}!\=\[" end="\]:" oneline keepend nextgroup=markdownUrl skipwhite
    3              0.000013 syn match markdownUrl "\S\+" nextgroup=markdownUrlTitle skipwhite contained
    3              0.000019 syn region markdownUrl matchgroup=markdownUrlDelimiter start="<" end=">" oneline keepend nextgroup=markdownUrlTitle skipwhite contained
    3              0.000014 syn region markdownUrlTitle matchgroup=markdownUrlTitleDelimiter start=+"+ end=+"+ keepend contained
    3              0.000013 syn region markdownUrlTitle matchgroup=markdownUrlTitleDelimiter start=+'+ end=+'+ keepend contained
    3              0.000010 syn region markdownUrlTitle matchgroup=markdownUrlTitleDelimiter start=+(+ end=+)+ keepend contained
                            
    3              0.000094 syn region markdownLinkText matchgroup=markdownLinkTextDelimiter start="!\=\[\%(\_[^][]*\%(\[\_[^][]*\]\_[^][]*\)*]\%( \=[[(]\)\)\@=" end="\]\%( \=[[(]\)\@=" nextgroup=markdownLink,markdownId skipwhite contains=@markdownInline,markdownLineStart
    3              0.000016 syn region markdownLink matchgroup=markdownLinkDelimiter start="(" end=")" contains=markdownUrl keepend contained
    3              0.000014 syn region markdownId matchgroup=markdownIdDelimiter start="\[" end="\]" keepend contained
    3              0.000026 syn region markdownAutomaticLink matchgroup=markdownUrlDelimiter start="<\%(\w\+:\|[[:alnum:]_+-]\+@\)\@=" end=">" keepend oneline
                            
    3              0.000009 let s:concealends = ''
    3              0.000026 if has('conceal') && get(g:, 'markdown_syntax_conceal', 1) == 1
    3              0.000006   let s:concealends = ' concealends'
    3              0.000004 endif
    3              0.000050 exe 'syn region markdownItalic matchgroup=markdownItalicDelimiter start="\*\S\@=" end="\S\@<=\*\|^$" skip="\\\*" contains=markdownLineStart,@Spell' . s:concealends
    3              0.000045 exe 'syn region markdownItalic matchgroup=markdownItalicDelimiter start="\w\@<!_\S\@=" end="\S\@<=_\w\@!\|^$" skip="\\_" contains=markdownLineStart,@Spell' . s:concealends
    3              0.000046 exe 'syn region markdownBold matchgroup=markdownBoldDelimiter start="\*\*\S\@=" end="\S\@<=\*\*\|^$" skip="\\\*" contains=markdownLineStart,markdownItalic,@Spell' . s:concealends
    3              0.000045 exe 'syn region markdownBold matchgroup=markdownBoldDelimiter start="\w\@<!__\S\@=" end="\S\@<=__\w\@!\|^$" skip="\\_" contains=markdownLineStart,markdownItalic,@Spell' . s:concealends
    3              0.000046 exe 'syn region markdownBoldItalic matchgroup=markdownBoldItalicDelimiter start="\*\*\*\S\@=" end="\S\@<=\*\*\*\|^$" skip="\\\*" contains=markdownLineStart,@Spell' . s:concealends
    3              0.000043 exe 'syn region markdownBoldItalic matchgroup=markdownBoldItalicDelimiter start="\w\@<!___\S\@=" end="\S\@<=___\w\@!\|^$" skip="\\_" contains=markdownLineStart,@Spell' . s:concealends
    3              0.000035 exe 'syn region markdownStrike matchgroup=markdownStrikeDelimiter start="\~\~\S\@=" end="\S\@<=\~\~\|^$" contains=markdownLineStart,@Spell' . s:concealends
                            
    3              0.000020 syn region markdownCode matchgroup=markdownCodeDelimiter start="`" end="`" keepend contains=markdownLineStart
    3              0.000023 syn region markdownCode matchgroup=markdownCodeDelimiter start="`` \=" end=" \=``" keepend contains=markdownLineStart
    3              0.000096 syn region markdownCodeBlock matchgroup=markdownCodeDelimiter start="^\s*\z(`\{3,\}\).*$" end="^\s*\z1\ze\s*$" keepend
    3              0.000030 syn region markdownCodeBlock matchgroup=markdownCodeDelimiter start="^\s*\z(\~\{3,\}\).*$" end="^\s*\z1\ze\s*$" keepend
                            
    3              0.000022 syn match markdownFootnote "\[^[^\]]\+\]"
    3              0.000013 syn match markdownFootnoteDefinition "^\[^[^\]]\+\]:"
                            
    3              0.000010 let s:done_include = {}
   36              0.000050 for s:type in g:markdown_fenced_languages
   33              0.000186   if has_key(s:done_include, matchstr(s:type,'[^.]*'))
                                continue
   33              0.000021   endif
   33              0.001149   exe 'syn region markdownHighlight_'.substitute(matchstr(s:type,'[^=]*$'),'\..*','','').' matchgroup=markdownCodeDelimiter start="^\s*\z(`\{3,\}\)\s*\%({.\{-}\.\)\='.matchstr(s:type,'[^=]*').'}\=\S\@!.*$" end="^\s*\z1\ze\s*$" keepend contains=@markdownHighlight_'.tr(matchstr(s:type,'[^=]*$'),'.','_') . s:concealends
   33              0.001088   exe 'syn region markdownHighlight_'.substitute(matchstr(s:type,'[^=]*$'),'\..*','','').' matchgroup=markdownCodeDelimiter start="^\s*\z(\~\{3,\}\)\s*\%({.\{-}\.\)\='.matchstr(s:type,'[^=]*').'}\=\S\@!.*$" end="^\s*\z1\ze\s*$" keepend contains=@markdownHighlight_'.tr(matchstr(s:type,'[^=]*$'),'.','_') . s:concealends
   33              0.000193   let s:done_include[matchstr(s:type,'[^.]*')] = 1
   36              0.000024 endfor
    3              0.000006 unlet! s:type
    3              0.000007 unlet! s:done_include
                            
    3              0.000055 if get(b:, 'markdown_yaml_head', get(g:, 'markdown_yaml_head', main_syntax ==# 'markdown'))
    3   0.025190   0.021422   syn include @markdownYamlTop syntax/yaml.vim
    3              0.000019   unlet! b:current_syntax
    3              0.000061   syn region markdownYamlHead start="\%^---$" end="^\%(---\|\.\.\.\)\s*$" keepend contains=@markdownYamlTop,@Spell
    3              0.000003 endif
                            
    3              0.000021 syn match markdownEscape "\\[][\\`*_{}()<>#+.!-]"
    3              0.000017 syn match markdownError "\w\@<=_\w\@="
                            
    3              0.000008 hi def link markdownH1                    htmlH1
    3              0.000013 hi def link markdownH2                    htmlH2
    3              0.000004 hi def link markdownH3                    htmlH3
    3              0.000004 hi def link markdownH4                    htmlH4
    3              0.000004 hi def link markdownH5                    htmlH5
    3              0.000005 hi def link markdownH6                    htmlH6
    3              0.000006 hi def link markdownHeadingRule           markdownRule
    3              0.000006 hi def link markdownH1Delimiter           markdownHeadingDelimiter
    3              0.000006 hi def link markdownH2Delimiter           markdownHeadingDelimiter
    3              0.000005 hi def link markdownH3Delimiter           markdownHeadingDelimiter
    3              0.000005 hi def link markdownH4Delimiter           markdownHeadingDelimiter
    3              0.000005 hi def link markdownH5Delimiter           markdownHeadingDelimiter
    3              0.000005 hi def link markdownH6Delimiter           markdownHeadingDelimiter
    3              0.000005 hi def link markdownHeadingDelimiter      Delimiter
    3              0.000007 hi def link markdownOrderedListMarker     markdownListMarker
    3              0.000005 hi def link markdownListMarker            htmlTagName
    3              0.000005 hi def link markdownBlockquote            Comment
    3              0.000004 hi def link markdownRule                  PreProc
                            
    3              0.000005 hi def link markdownFootnote              Typedef
    3              0.000004 hi def link markdownFootnoteDefinition    Typedef
                            
    3              0.000006 hi def link markdownLinkText              htmlLink
    3              0.000012 hi def link markdownIdDeclaration         Typedef
    3              0.000005 hi def link markdownId                    Type
    3              0.000005 hi def link markdownAutomaticLink         markdownUrl
    3              0.000004 hi def link markdownUrl                   Float
    3              0.000005 hi def link markdownUrlTitle              String
    3              0.000005 hi def link markdownIdDelimiter           markdownLinkDelimiter
    3              0.000005 hi def link markdownUrlDelimiter          htmlTag
    3              0.000004 hi def link markdownUrlTitleDelimiter     Delimiter
                            
    3              0.000005 hi def link markdownItalic                htmlItalic
    3              0.000005 hi def link markdownItalicDelimiter       markdownItalic
    3              0.000005 hi def link markdownBold                  htmlBold
    3              0.000005 hi def link markdownBoldDelimiter         markdownBold
    3              0.000005 hi def link markdownBoldItalic            htmlBoldItalic
    3              0.000005 hi def link markdownBoldItalicDelimiter   markdownBoldItalic
    3              0.000005 hi def link markdownStrike                htmlStrike
    3              0.000005 hi def link markdownStrikeDelimiter       markdownStrike
    3              0.000004 hi def link markdownCodeDelimiter         Delimiter
                            
    3              0.000004 hi def link markdownEscape                Special
    3              0.000004 hi def link markdownError                 Error
                            
    3              0.000011 let b:current_syntax = "markdown"
    3              0.000011 if main_syntax ==# 'markdown'
    3              0.000005   unlet main_syntax
    3              0.000002 endif
                            
                            " vim:set sw=2:

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\syntax\html.vim
Sourced 6 times
Total time:   0.320885
 Self time:   0.197784

count  total (s)   self (s)
                            " Vim syntax file
                            " Language:		HTML
                            " Maintainer:		Doug Kearns <dougkearns@gmail.com>
                            " Previous Maintainers: Jorge Maldonado Ventura <jorgesumle@freakspot.net>
                            "			Claudio Fleiner <claudio@fleiner.com>
                            " Last Change:		2022 Jul 20
                            
                            " Please check :help html.vim for some comments and a description of the options
                            
                            " quit when a syntax file was already loaded
    6              0.000067 if !exists("main_syntax")
                              if exists("b:current_syntax")
                                finish
                              endif
                              let main_syntax = 'html'
    6              0.000004 endif
                            
    6              0.000051 let s:cpo_save = &cpo
    6              0.000062 set cpo&vim
                            
    6              0.000017 syntax spell toplevel
                            
    6   0.062885   0.044537 syn include @htmlXml syntax/xml.vim
    6              0.000033 unlet b:current_syntax
                            
    6              0.000017 syn case ignore
                            
                            " mark illegal characters
    6              0.000044 syn match htmlError "[<>&]"
                            
                            
                            " tags
    6              0.000070 syn region  htmlString	 contained start=+"+ end=+"+ contains=htmlSpecialChar,javaScriptExpression,@htmlPreproc
    6              0.000041 syn region  htmlString	 contained start=+'+ end=+'+ contains=htmlSpecialChar,javaScriptExpression,@htmlPreproc
    6              0.000055 syn match   htmlValue	 contained "=[\t ]*[^'" \t>][^ \t>]*"hs=s+1   contains=javaScriptExpression,@htmlPreproc
    6              0.000045 syn region  htmlEndTag		   start=+</+	   end=+>+ contains=htmlTagN,htmlTagError
    6              0.000085 syn region  htmlTag		   start=+<[^/]+   end=+>+ fold contains=htmlTagN,htmlString,htmlArg,htmlValue,htmlTagError,htmlEvent,htmlCssDefinition,@htmlPreproc,@htmlArgCluster
    6              0.000058 syn match   htmlTagN	 contained +<\s*[-a-zA-Z0-9]\++hs=s+1 contains=htmlTagName,htmlSpecialTagName,@htmlTagNameCluster
    6              0.000041 syn match   htmlTagN	 contained +</\s*[-a-zA-Z0-9]\++hs=s+2 contains=htmlTagName,htmlSpecialTagName,@htmlTagNameCluster
    6              0.000017 syn match   htmlTagError contained "[^>]<"ms=s+1
                            
                            
                            " tag names
    6              0.000028 syn keyword htmlTagName contained address applet area a base basefont
    6              0.000023 syn keyword htmlTagName contained big blockquote br caption center
    6              0.000029 syn keyword htmlTagName contained cite code dd dfn dir div dl dt font
    6              0.000018 syn keyword htmlTagName contained form hr html img
    6              0.000023 syn keyword htmlTagName contained input isindex kbd li link map menu
    6              0.000024 syn keyword htmlTagName contained meta ol option param pre p samp span
    6              0.000023 syn keyword htmlTagName contained select small strike sub sup
    6              0.000031 syn keyword htmlTagName contained table td textarea th tr tt ul var xmp
    6              0.000056 syn match   htmlTagName contained "\<\%(b\|i\|u\|h[1-6]\|em\|strong\|head\|body\|title\)\>"
                            
                            " new html 4.0 tags
    6              0.000023 syn keyword htmlTagName contained abbr acronym bdo button col colgroup
    6              0.000083 syn keyword htmlTagName contained del fieldset iframe ins label legend
    6              0.000057 syn keyword htmlTagName contained object optgroup q s tbody tfoot thead
                            
                            " new html 5 tags
    6              0.000065 syn keyword htmlTagName contained article aside audio bdi canvas data
    6              0.000048 syn keyword htmlTagName contained datalist details dialog embed figcaption
    6              0.000051 syn keyword htmlTagName contained figure footer header hgroup keygen main
    6              0.000051 syn keyword htmlTagName contained mark menuitem meter nav output picture
    6              0.000052 syn keyword htmlTagName contained progress rb rp rt rtc ruby section
    6              0.000022 syn keyword htmlTagName contained slot source summary template time track
    6              0.000010 syn keyword htmlTagName contained video wbr
                            
                            " svg and math tags
    6              0.000016 syn keyword htmlMathTagName contained math
    6              0.000010 syn keyword htmlSvgTagName  contained svg
                            
    6              0.000062 syn region  htmlMath start="<math>" end="</math>" contains=@htmlXml transparent keepend
    6              0.000041 syn region  htmlSvg  start="<svg>"  end="</svg>"  contains=@htmlXml transparent keepend
                            
    6              0.000025 syn cluster xmlTagHook	add=htmlMathTagName,htmlSvgTagName
                            
                            " legal arg names
    6              0.000011 syn keyword htmlArg contained action
    6              0.000021 syn keyword htmlArg contained align alink alt archive background bgcolor
    6              0.000017 syn keyword htmlArg contained border bordercolor cellpadding
    6              0.000027 syn keyword htmlArg contained cellspacing checked class clear code codebase color
    6              0.000023 syn keyword htmlArg contained cols colspan content coords enctype face
    6              0.000017 syn keyword htmlArg contained gutter height hspace id
    6              0.000015 syn keyword htmlArg contained link lowsrc marginheight
    6              0.000019 syn keyword htmlArg contained marginwidth maxlength method name prompt
    6              0.000024 syn keyword htmlArg contained rel rev rows rowspan scrolling selected shape
    6              0.000024 syn keyword htmlArg contained size src start target text type url
    6              0.000085 syn keyword htmlArg contained usemap ismap valign value vlink vspace width wrap
    6              0.000039 syn match   htmlArg contained "\<\%(http-equiv\|href\|title\)="me=e-1
                            
                            " aria attributes
    6              0.000671 exe 'syn match htmlArg contained "\<aria-\%(' . join([
                                \ 'activedescendant', 'atomic', 'autocomplete', 'busy', 'checked', 'colcount',
                                \ 'colindex', 'colspan', 'controls', 'current', 'describedby', 'details',
                                \ 'disabled', 'dropeffect', 'errormessage', 'expanded', 'flowto', 'grabbed',
                                \ 'haspopup', 'hidden', 'invalid', 'keyshortcuts', 'label', 'labelledby', 'level',
                                \ 'live', 'modal', 'multiline', 'multiselectable', 'orientation', 'owns',
                                \ 'placeholder', 'posinset', 'pressed', 'readonly', 'relevant', 'required',
                                \ 'roledescription', 'rowcount', 'rowindex', 'rowspan', 'selected', 'setsize',
                                \ 'sort', 'valuemax', 'valuemin', 'valuenow', 'valuetext'
                                \ ], '\|') . '\)\>"'
    6              0.000013 syn keyword htmlArg contained role
                            
                            " Netscape extensions
    6              0.000031 syn keyword htmlTagName contained frame noframes frameset nobr blink
    6              0.000039 syn keyword htmlTagName contained layer ilayer nolayer spacer
    6              0.000034 syn keyword htmlArg	contained frameborder noresize pagex pagey above below
    6              0.000031 syn keyword htmlArg	contained left top visibility clip id noshade
    6              0.000022 syn match   htmlArg	contained "\<z-index\>"
                            
                            " Microsoft extensions
    6              0.000011 syn keyword htmlTagName contained marquee
                            
                            " html 4.0 arg names
    6              0.000056 syn match   htmlArg contained "\<\%(accept-charset\|label\)\>"
    6              0.000040 syn keyword htmlArg contained abbr accept accesskey axis char charoff charset
    6              0.000032 syn keyword htmlArg contained cite classid codetype compact data datetime
    6              0.000031 syn keyword htmlArg contained declare defer dir disabled for frame
    6              0.000021 syn keyword htmlArg contained headers hreflang lang language longdesc
    6              0.000022 syn keyword htmlArg contained multiple nohref nowrap object profile readonly
    6              0.000029 syn keyword htmlArg contained rules scheme scope span standby style
    6              0.000019 syn keyword htmlArg contained summary tabindex valuetype version
                            
                            " html 5 arg names
    6              0.000020 syn keyword htmlArg contained allow autocapitalize as blocking decoding
    6              0.000019 syn keyword htmlArg contained enterkeyhint imagesizes imagesrcset inert
    6              0.000020 syn keyword htmlArg contained integrity is itemid itemprop itemref itemscope
    6              0.000019 syn keyword htmlArg contained itemtype loading nomodule ping playsinline
    6              0.000018 syn keyword htmlArg contained referrerpolicy slot allowfullscreen async
    6              0.000018 syn keyword htmlArg contained autocomplete autofocus autoplay challenge
    6              0.000022 syn keyword htmlArg contained contenteditable contextmenu controls crossorigin
    6              0.000025 syn keyword htmlArg contained default dirname download draggable dropzone form
    6              0.000055 syn keyword htmlArg contained formaction formenctype formmethod formnovalidate
    6              0.000026 syn keyword htmlArg contained formtarget hidden high icon inputmode keytype
    6              0.000027 syn keyword htmlArg contained kind list loop low max min minlength muted nonce
    6              0.000029 syn keyword htmlArg contained novalidate open optimum pattern placeholder
    6              0.000019 syn keyword htmlArg contained poster preload radiogroup required reversed
    6              0.000022 syn keyword htmlArg contained sandbox spellcheck sizes srcset srcdoc srclang
    6              0.000018 syn keyword htmlArg contained step title translate typemustmatch
    6              0.000041 syn match   htmlArg contained "\<data-\h\%(\w\|[-.]\)*\%(\_s*=\)\@="
                            
                            " special characters
    6              0.000063 syn match htmlSpecialChar "&#\=[0-9A-Za-z]\{1,8};"
                            
                            " Comments (the real ones or the old netscape ones)
    6              0.000028 if exists("html_wrong_comments")
                              syn region htmlComment	start=+<!--+	end=+--\s*>+	contains=@Spell
    6              0.000011 else
                              " The HTML 5.2 syntax 8.2.4.41: bogus comment is parser error; browser skips until next &gt
    6              0.000048   syn region htmlComment	start=+<!+	end=+>+		contains=htmlCommentError keepend
                              " Idem 8.2.4.42,51: Comment starts with <!-- and ends with -->
                              " Idem 8.2.4.43,44: Except <!--> and <!---> are parser errors
                              " Idem 8.2.4.52: dash-dash-bang (--!>) is error ignored by parser, also closes comment
    6              0.000087   syn region htmlComment matchgroup=htmlComment start=+<!--\%(-\?>\)\@!+	end=+--!\?>+	contains=htmlCommentNested,@htmlPreProc,@Spell keepend
                              " Idem 8.2.4.49: nested comment is parser error, except <!--> is all right
    6              0.000023   syn match htmlCommentNested contained "<!-->\@!"
    6              0.000018   syn match htmlCommentError  contained "[^><!]"
    6              0.000061 endif
    6              0.000167 syn region htmlComment	start=+<!DOCTYPE+	end=+>+ keepend
                            
                            " server-parsed commands
    6              0.000072 syn region htmlPreProc start=+<!--#+ end=+-->+ contains=htmlPreStmt,htmlPreError,htmlPreAttr
    6              0.000076 syn match htmlPreStmt contained "<!--#\%(config\|echo\|exec\|fsize\|flastmod\|include\|printenv\|set\|if\|elif\|else\|endif\|geoguide\)\>"
    6              0.000026 syn match htmlPreError contained "<!--#\S*"ms=s+4
    6              0.000043 syn match htmlPreAttr contained "\w\+=[^"]\S\+" contains=htmlPreProcAttrError,htmlPreProcAttrName
    6              0.000047 syn region htmlPreAttr contained start=+\w\+="+ skip=+\\\\\|\\"+ end=+"+ contains=htmlPreProcAttrName keepend
    6              0.000020 syn match htmlPreProcAttrError contained "\w\+="he=e-1
    6              0.000050 syn match htmlPreProcAttrName contained "\%(expr\|errmsg\|sizefmt\|timefmt\|var\|cgi\|cmd\|file\|virtual\|value\)="he=e-1
                            
    6              0.000025 if !exists("html_no_rendering")
                              " rendering
    6              0.000064   syn cluster htmlTop contains=@Spell,htmlTag,htmlEndTag,htmlSpecialChar,htmlPreProc,htmlComment,htmlLink,javaScript,@htmlPreproc
                            
    6              0.000046   syn region htmlStrike start="<del\>" end="</del\_s*>"me=s-1 contains=@htmlTop
    6              0.000041   syn region htmlStrike start="<s\>" end="</s\_s*>"me=s-1 contains=@htmlTop
    6              0.000041   syn region htmlStrike start="<strike\>" end="</strike\_s*>"me=s-1 contains=@htmlTop
                            
    6              0.000049   syn region htmlBold start="<b\>" end="</b\_s*>"me=s-1 contains=@htmlTop,htmlBoldUnderline,htmlBoldItalic
    6              0.000049   syn region htmlBold start="<strong\>" end="</strong\_s*>"me=s-1 contains=@htmlTop,htmlBoldUnderline,htmlBoldItalic
    6              0.000164   syn region htmlBoldUnderline contained start="<u\>" end="</u\_s*>"me=s-1 contains=@htmlTop,htmlBoldUnderlineItalic
    6              0.000042   syn region htmlBoldItalic contained start="<i\>" end="</i\_s*>"me=s-1 contains=@htmlTop,htmlBoldItalicUnderline
    6              0.000040   syn region htmlBoldItalic contained start="<em\>" end="</em\_s*>"me=s-1 contains=@htmlTop,htmlBoldItalicUnderline
    6              0.000035   syn region htmlBoldUnderlineItalic contained start="<i\>" end="</i\_s*>"me=s-1 contains=@htmlTop
    6              0.000036   syn region htmlBoldUnderlineItalic contained start="<em\>" end="</em\_s*>"me=s-1 contains=@htmlTop
    6              0.000037   syn region htmlBoldItalicUnderline contained start="<u\>" end="</u\_s*>"me=s-1 contains=@htmlTop,htmlBoldUnderlineItalic
                            
    6              0.000051   syn region htmlUnderline start="<u\>" end="</u\_s*>"me=s-1 contains=@htmlTop,htmlUnderlineBold,htmlUnderlineItalic
    6              0.000047   syn region htmlUnderlineBold contained start="<b\>" end="</b\_s*>"me=s-1 contains=@htmlTop,htmlUnderlineBoldItalic
    6              0.000051   syn region htmlUnderlineBold contained start="<strong\>" end="</strong\_s*>"me=s-1 contains=@htmlTop,htmlUnderlineBoldItalic
    6              0.000046   syn region htmlUnderlineItalic contained start="<i\>" end="</i\_s*>"me=s-1 contains=@htmlTop,htmlUnderlineItalicBold
    6              0.000043   syn region htmlUnderlineItalic contained start="<em\>" end="</em\_s*>"me=s-1 contains=@htmlTop,htmlUnderlineItalicBold
    6              0.000036   syn region htmlUnderlineItalicBold contained start="<b\>" end="</b\_s*>"me=s-1 contains=@htmlTop
    6              0.000040   syn region htmlUnderlineItalicBold contained start="<strong\>" end="</strong\_s*>"me=s-1 contains=@htmlTop
    6              0.000035   syn region htmlUnderlineBoldItalic contained start="<i\>" end="</i\_s*>"me=s-1 contains=@htmlTop
    6              0.000034   syn region htmlUnderlineBoldItalic contained start="<em\>" end="</em\_s*>"me=s-1 contains=@htmlTop
                            
    6              0.000048   syn region htmlItalic start="<i\>" end="</i\_s*>"me=s-1 contains=@htmlTop,htmlItalicBold,htmlItalicUnderline
    6              0.000039   syn region htmlItalic start="<em\>" end="</em\_s*>"me=s-1 contains=@htmlTop
    6              0.000041   syn region htmlItalicBold contained start="<b\>" end="</b\_s*>"me=s-1 contains=@htmlTop,htmlItalicBoldUnderline
    6              0.000046   syn region htmlItalicBold contained start="<strong\>" end="</strong\_s*>"me=s-1 contains=@htmlTop,htmlItalicBoldUnderline
    6              0.000050   syn region htmlItalicBoldUnderline contained start="<u\>" end="</u\_s*>"me=s-1 contains=@htmlTop
    6              0.000043   syn region htmlItalicUnderline contained start="<u\>" end="</u\_s*>"me=s-1 contains=@htmlTop,htmlItalicUnderlineBold
    6              0.000035   syn region htmlItalicUnderlineBold contained start="<b\>" end="</b\_s*>"me=s-1 contains=@htmlTop
    6              0.000040   syn region htmlItalicUnderlineBold contained start="<strong\>" end="</strong\_s*>"me=s-1 contains=@htmlTop
                            
    6              0.000063   syn match htmlLeadingSpace "^\s\+" contained
    6              0.000094   syn region htmlLink start="<a\>\_[^>]*\<href\>" end="</a\_s*>"me=s-1 contains=@Spell,htmlTag,htmlEndTag,htmlSpecialChar,htmlPreProc,htmlComment,htmlLeadingSpace,javaScript,@htmlPreproc
    6              0.000043   syn region htmlH1 start="<h1\>" end="</h1\_s*>"me=s-1 contains=@htmlTop
    6              0.000039   syn region htmlH2 start="<h2\>" end="</h2\_s*>"me=s-1 contains=@htmlTop
    6              0.000040   syn region htmlH3 start="<h3\>" end="</h3\_s*>"me=s-1 contains=@htmlTop
    6              0.000038   syn region htmlH4 start="<h4\>" end="</h4\_s*>"me=s-1 contains=@htmlTop
    6              0.000041   syn region htmlH5 start="<h5\>" end="</h5\_s*>"me=s-1 contains=@htmlTop
    6              0.000044   syn region htmlH6 start="<h6\>" end="</h6\_s*>"me=s-1 contains=@htmlTop
    6              0.000117   syn region htmlHead start="<head\>" end="</head\_s*>"me=s-1 end="<body\>"me=s-1 end="<h[1-6]\>"me=s-1 contains=htmlTag,htmlEndTag,htmlSpecialChar,htmlPreProc,htmlComment,htmlLink,htmlTitle,javaScript,cssStyle,@htmlPreproc
    6              0.000069   syn region htmlTitle start="<title\>" end="</title\_s*>"me=s-1 contains=htmlTag,htmlEndTag,htmlSpecialChar,htmlPreProc,htmlComment,javaScript,@htmlPreproc
    6              0.000005 endif
                            
    6              0.000025 syn keyword htmlTagName		contained noscript
    6              0.000017 syn keyword htmlSpecialTagName	contained script style
    6              0.000028 if main_syntax != 'java' || exists("java_javascript")
                              " JAVA SCRIPT
    6   0.049745   0.044555   syn include @htmlJavaScript syntax/javascript.vim
    6              0.000040   unlet b:current_syntax
    6              0.000134   syn region  javaScript start=+<script\_[^>]*>+ keepend end=+</script\_[^>]*>+me=s-1 contains=@htmlJavaScript,htmlCssStyleComment,htmlScriptTag,@htmlPreproc
    6              0.000066   syn region  htmlScriptTag	contained start=+<script+ end=+>+ fold contains=htmlTagN,htmlString,htmlArg,htmlValue,htmlTagError,htmlEvent
    6              0.000013   hi def link htmlScriptTag htmlTag
                            
                              " html events (i.e. arguments that include javascript commands)
    6              0.000034   if exists("html_extended_events")
                                syn region htmlEvent	contained start=+\<on\a\+\s*=[\t ]*'+ end=+'+ contains=htmlEventSQ
                                syn region htmlEvent	contained start=+\<on\a\+\s*=[\t ]*"+ end=+"+ contains=htmlEventDQ
    6              0.000009   else
    6              0.000037     syn region htmlEvent	contained start=+\<on\a\+\s*=[\t ]*'+ end=+'+ keepend contains=htmlEventSQ
    6              0.000032     syn region htmlEvent	contained start=+\<on\a\+\s*=[\t ]*"+ end=+"+ keepend contains=htmlEventDQ
    6              0.000007   endif
    6              0.000034   syn region htmlEventSQ	contained start=+'+ms=s+1 end=+'+me=s-1 contains=@htmlJavaScript
    6              0.000029   syn region htmlEventDQ	contained start=+"+ms=s+1 end=+"+me=s-1 contains=@htmlJavaScript
    6              0.000009   hi def link htmlEventSQ htmlEvent
    6              0.000006   hi def link htmlEventDQ htmlEvent
                            
                              " a javascript expression is used as an arg value
    6              0.000040   syn region  javaScriptExpression contained start=+&{+ keepend end=+};+ contains=@htmlJavaScript,@htmlPreproc
    6              0.000004 endif
                            
    6              0.000023 if main_syntax != 'java' || exists("java_vb")
                              " VB SCRIPT
    6   0.055287   0.042350   syn include @htmlVbScript syntax/vb.vim
    6              0.000035   unlet b:current_syntax
    6              0.000137   syn region  javaScript start=+<script \_[^>]*language *=\_[^>]*vbscript\_[^>]*>+ keepend end=+</script\_[^>]*>+me=s-1 contains=@htmlVbScript,htmlCssStyleComment,htmlScriptTag,@htmlPreproc
    6              0.000007 endif
                            
    6              0.000030 syn cluster htmlJavaScript	add=@htmlPreproc
                            
    6              0.000036 if main_syntax != 'java' || exists("java_css")
                              " embedded style sheets
    6              0.000016   syn keyword htmlArg		contained media
    6   0.128314   0.041689   syn include @htmlCss syntax/css.vim
    6              0.000039   unlet b:current_syntax
    6              0.000124   syn region cssStyle start=+<style+ keepend end=+</style>+ contains=@htmlCss,htmlTag,htmlEndTag,htmlCssStyleComment,@htmlPreproc
    6              0.000143   syn match htmlCssStyleComment contained "\%(<!--\|-->\)"
    6              0.013352   syn region htmlCssDefinition matchgroup=htmlArg start='style="' keepend matchgroup=htmlString end='"' contains=css.*Attr,css.*Prop,cssComment,cssLength,cssColor,cssURL,cssImportant,cssError,cssString,@htmlPreproc
    6              0.000033   hi def link htmlStyleArg htmlString
    6              0.000007 endif
                            
    6              0.000036 if main_syntax == "html"
                              " synchronizing (does not always work if a comment includes legal
                              " html tags, but doing it right would mean to always start
                              " at the first line, which is too slow)
                              syn sync match htmlHighlight groupthere NONE "<[/a-zA-Z]"
                              syn sync match htmlHighlight groupthere javaScript "<script"
                              syn sync match htmlHighlightSkip "^.*['\"].*$"
                              syn sync minlines=10
    6              0.000006 endif
                            
                            " The default highlighting.
    6              0.000012 hi def link htmlTag			Function
    6              0.000010 hi def link htmlEndTag			Identifier
    6              0.000009 hi def link htmlArg			Type
    6              0.000010 hi def link htmlTagName			htmlStatement
    6              0.000097 hi def link htmlSpecialTagName		Exception
    6              0.000010 hi def link htmlMathTagName		htmlTagName
    6              0.000008 hi def link htmlSvgTagName		htmlTagName
    6              0.000008 hi def link htmlValue			String
    6              0.000008 hi def link htmlSpecialChar		Special
                            
    6              0.000035 if !exists("html_no_rendering")
    6              0.000010   hi def link htmlH1			  Title
    6              0.000007   hi def link htmlH2			  htmlH1
    6              0.000006   hi def link htmlH3			  htmlH2
    6              0.000006   hi def link htmlH4			  htmlH3
    6              0.000006   hi def link htmlH5			  htmlH4
    6              0.000007   hi def link htmlH6			  htmlH5
    6              0.000009   hi def link htmlHead			  PreProc
    6              0.000009   hi def link htmlTitle			  Title
    6              0.000011   hi def link htmlBoldItalicUnderline	  htmlBoldUnderlineItalic
    6              0.000010   hi def link htmlUnderlineBold		  htmlBoldUnderline
    6              0.000011   hi def link htmlUnderlineItalicBold	  htmlBoldUnderlineItalic
    6              0.000010   hi def link htmlUnderlineBoldItalic	  htmlBoldUnderlineItalic
    6              0.000010   hi def link htmlItalicUnderline	  htmlUnderlineItalic
    6              0.000010   hi def link htmlItalicBold		  htmlBoldItalic
    6              0.000010   hi def link htmlItalicBoldUnderline	  htmlBoldUnderlineItalic
    6              0.000010   hi def link htmlItalicUnderlineBold	  htmlBoldUnderlineItalic
    6              0.000008   hi def link htmlLink			  Underlined
    6              0.000045   hi def link htmlLeadingSpace		  None
    6              0.000021   if !exists("html_my_rendering")
    6              0.000019     hi def htmlBold		   term=bold cterm=bold gui=bold
    6              0.000033     hi def htmlBoldUnderline	   term=bold,underline cterm=bold,underline gui=bold,underline
    6              0.000022     hi def htmlBoldItalic	   term=bold,italic cterm=bold,italic gui=bold,italic
    6              0.000035     hi def htmlBoldUnderlineItalic term=bold,italic,underline cterm=bold,italic,underline gui=bold,italic,underline
    6              0.000025     hi def htmlUnderline	   term=underline cterm=underline gui=underline
    6              0.000036     hi def htmlUnderlineItalic	   term=italic,underline cterm=italic,underline gui=italic,underline
    6              0.000030     hi def htmlItalic		   term=italic cterm=italic gui=italic
    6              0.000027     if v:version > 800 || v:version == 800 && has("patch1038")
    6              0.000016 	hi def htmlStrike	       term=strikethrough cterm=strikethrough gui=strikethrough
                                else
                            	hi def htmlStrike	       term=underline cterm=underline gui=underline
    6              0.000005     endif
    6              0.000004   endif
    6              0.000003 endif
                            
    6              0.000008 hi def link htmlPreStmt		   PreProc
    6              0.000008 hi def link htmlPreError	   Error
    6              0.000008 hi def link htmlPreProc		   PreProc
    6              0.000007 hi def link htmlPreAttr		   String
    6              0.000009 hi def link htmlPreProcAttrName    PreProc
    6              0.000008 hi def link htmlPreProcAttrError   Error
    6              0.000016 hi def link htmlString		   String
    6              0.000008 hi def link htmlStatement	   Statement
    6              0.000008 hi def link htmlComment		   Comment
    6              0.000010 hi def link htmlCommentNested	   htmlError
    6              0.000008 hi def link htmlCommentError	   htmlError
    6              0.000008 hi def link htmlTagError	   htmlError
    6              0.000008 hi def link htmlEvent		   javaScript
    6              0.000014 hi def link htmlError		   Error
                            
    6              0.000007 hi def link javaScript		   Special
    6              0.000010 hi def link javaScriptExpression   javaScript
    6              0.000090 hi def link htmlCssStyleComment    Comment
    6              0.000011 hi def link htmlCssDefinition	   Special
                            
    6              0.000023 let b:current_syntax = "html"
                            
    6              0.000014 if main_syntax == 'html'
                              unlet main_syntax
    6              0.000004 endif
                            
    6              0.000082 let &cpo = s:cpo_save
    6              0.000013 unlet s:cpo_save
                            " vim: ts=8

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\syntax\xml.vim
Sourced 9 times
Total time:   0.026971
 Self time:   0.023440

count  total (s)   self (s)
                            " Vim syntax file
                            " Language: XML
                            " Maintainer: Christian Brabandt <cb@256bit.org>
                            " Repository: https://github.com/chrisbra/vim-xml-ftplugin
                            " Previous Maintainer: Johannes Zellner <johannes@zellner.org>
                            " Author: Paul Siegmann <pauls@euronet.nl>
                            " Last Changed:	Nov 03, 2019
                            " Filenames:	*.xml
                            " Last Change:
                            " 20190923 - Fix xmlEndTag to match xmlTag (vim/vim#884)
                            " 20190924 - Fix xmlAttribute property (amadeus/vim-xml@d8ce1c946)
                            " 20191103 - Enable spell checking globally
                            " 20210428 - Improve syntax synchronizing
                            
                            " CONFIGURATION:
                            "   syntax folding can be turned on by
                            "
                            "      let g:xml_syntax_folding = 1
                            "
                            "   before the syntax file gets loaded (e.g. in ~/.vimrc).
                            "   This might slow down syntax highlighting significantly,
                            "   especially for large files.
                            "
                            " CREDITS:
                            "   The original version was derived by Paul Siegmann from
                            "   Claudio Fleiner's html.vim.
                            "
                            " REFERENCES:
                            "   [1] http://www.w3.org/TR/2000/REC-xml-20001006
                            "   [2] http://www.w3.org/XML/1998/06/xmlspec-report-19980910.htm
                            "
                            "   as <hirauchi@kiwi.ne.jp> pointed out according to reference [1]
                            "
                            "   2.3 Common Syntactic Constructs
                            "   [4]    NameChar    ::=    Letter | Digit | '.' | '-' | '_' | ':' | CombiningChar | Extender
                            "   [5]    Name        ::=    (Letter | '_' | ':') (NameChar)*
                            "
                            " NOTE:
                            "   1) empty tag delimiters "/>" inside attribute values (strings)
                            "      confuse syntax highlighting.
                            "   2) for large files, folding can be pretty slow, especially when
                            "      loading a file the first time and viewoptions contains 'folds'
                            "      so that folds of previous sessions are applied.
                            "      Don't use 'foldmethod=syntax' in this case.
                            
                            
                            " Quit when a syntax file was already loaded
    9              0.000100 if exists("b:current_syntax")
                                finish
    9              0.000008 endif
                            
    9              0.000138 let s:xml_cpo_save = &cpo
    9              0.000127 set cpo&vim
                            
    9              0.000027 syn case match
                            
                            " Allow spell checking in tag values,
                            " there is no syntax region for that,
                            " so enable spell checking in top-level elements
                            " <tag>This text is spell checked</tag>
    9              0.000018 syn spell toplevel
                            
                            " mark illegal characters
    9              0.000098 syn match xmlError "[<&]"
                            
                            " strings (inside tags) aka VALUES
                            "
                            " EXAMPLE:
                            "
                            " <tag foo.attribute = "value">
                            "                      ^^^^^^^
    9              0.000099 syn region  xmlString contained start=+"+ end=+"+ contains=xmlEntity,@Spell display
    9              0.000054 syn region  xmlString contained start=+'+ end=+'+ contains=xmlEntity,@Spell display
                            
                            
                            " punctuation (within attributes) e.g. <tag xml:foo.attribute ...>
                            "                                              ^   ^
                            " syn match   xmlAttribPunct +[-:._]+ contained display
    9              0.000030 syn match   xmlAttribPunct +[:.]+ contained display
                            
                            " no highlighting for xmlEqual (xmlEqual has no highlighting group)
    9              0.000024 syn match   xmlEqual +=+ display
                            
                            
                            " attribute, everything before the '='
                            "
                            " PROVIDES: @xmlAttribHook
                            "
                            " EXAMPLE:
                            "
                            " <tag foo.attribute = "value">
                            "      ^^^^^^^^^^^^^
                            "
    9              0.000357 syn match   xmlAttrib
                                \ +[-'"<]\@1<!\<[a-zA-Z:_][-.0-9a-zA-Z:_]*\>\%(['"]\@!\|$\)+
                                \ contained
                                \ contains=xmlAttribPunct,@xmlAttribHook
                                \ display
                            
                            
                            " namespace spec
                            "
                            " PROVIDES: @xmlNamespaceHook
                            "
                            " EXAMPLE:
                            "
                            " <xsl:for-each select = "lola">
                            "  ^^^
                            "
    9              0.000039 if exists("g:xml_namespace_transparent")
                            syn match   xmlNamespace
                                \ +\(<\|</\)\@2<=[^ /!?<>"':]\+[:]\@=+
                                \ contained
                                \ contains=@xmlNamespaceHook
                                \ transparent
                                \ display
    9              0.000012 else
    9              0.000082 syn match   xmlNamespace
                                \ +\(<\|</\)\@2<=[^ /!?<>"':]\+[:]\@=+
                                \ contained
                                \ contains=@xmlNamespaceHook
                                \ display
    9              0.000008 endif
                            
                            
                            " tag name
                            "
                            " PROVIDES: @xmlTagHook
                            "
                            " EXAMPLE:
                            "
                            " <tag foo.attribute = "value">
                            "  ^^^
                            "
    9              0.000140 syn match   xmlTagName
                                \ +\%(<\|</\)\@2<=[^ /!?<>"']\++
                                \ contained
                                \ contains=xmlNamespace,xmlAttribPunct,@xmlTagHook
                                \ display
                            
                            
    9              0.000032 if exists('g:xml_syntax_folding')
                            
                                " start tag
                                " use matchgroup=xmlTag to skip over the leading '<'
                                "
                                " PROVIDES: @xmlStartTagHook
                                "
                                " EXAMPLE:
                                "
                                " <tag id="whoops">
                                " s^^^^^^^^^^^^^^^e
                                "
                                syn region   xmlTag
                            	\ matchgroup=xmlTag start=+<[^ /!?<>"']\@=+
                            	\ matchgroup=xmlTag end=+>+
                            	\ contained
                            	\ contains=xmlError,xmlTagName,xmlAttrib,xmlEqual,xmlString,@xmlStartTagHook
                            
                            
                                " highlight the end tag
                                "
                                " PROVIDES: @xmlTagHook
                                " (should we provide a separate @xmlEndTagHook ?)
                                "
                                " EXAMPLE:
                                "
                                " </tag>
                                " ^^^^^^
                                "
                                syn region   xmlEndTag
                            	\ matchgroup=xmlTag start=+</[^ /!?<>"']\@=+
                            	\ matchgroup=xmlTag end=+>+
                            	\ contained
                            	\ contains=xmlTagName,xmlNamespace,xmlAttribPunct,@xmlTagHook
                            
                                " tag elements with syntax-folding.
                                " NOTE: NO HIGHLIGHTING -- highlighting is done by contained elements
                                "
                                " PROVIDES: @xmlRegionHook
                                "
                                " EXAMPLE:
                                "
                                " <tag id="whoops">
                                "   <!-- comment -->
                                "   <another.tag></another.tag>
                                "   <empty.tag/>
                                "   some data
                                " </tag>
                                "
                                syn region   xmlRegion
                            	\ start=+<\z([^ /!?<>"']\+\)+
                            	\ skip=+<!--\_.\{-}-->+
                            	\ end=+</\z1\_\s\{-}>+
                            	\ end=+/>+
                            	\ fold
                            	\ contains=xmlTag,xmlEndTag,xmlCdata,xmlRegion,xmlComment,xmlEntity,xmlProcessing,@xmlRegionHook,@Spell
                            	\ keepend
                            	\ extend
                            
    9              0.000010 else
                            
                                " no syntax folding:
                                " - contained attribute removed
                                " - xmlRegion not defined
                                "
    9              0.000125     syn region   xmlTag
                            	\ matchgroup=xmlTag start=+<[^ /!?<>"']\@=+
                            	\ matchgroup=xmlTag end=+>+
                            	\ contains=xmlError,xmlTagName,xmlAttrib,xmlEqual,xmlString,@xmlStartTagHook
                            
    9              0.000103     syn region   xmlEndTag
                            	\ matchgroup=xmlTag start=+</[^ /!?<>"']\@=+
                            	\ matchgroup=xmlTag end=+>+
                            	\ contains=xmlTagName,xmlNamespace,xmlAttribPunct,@xmlTagHook
                            
    9              0.000007 endif
                            
                            
                            " &entities; compare with dtd
    9              0.000055 syn match   xmlEntity                 "&[^; \t]*;" contains=xmlEntityPunct
    9              0.000031 syn match   xmlEntityPunct  contained "[&.;]"
                            
    9              0.000034 if exists('g:xml_syntax_folding')
                            
                                " The real comments (this implements the comments as defined by xml,
                                " but not all xml pages actually conform to it. Errors are flagged.
                                syn region  xmlComment
                            	\ start=+<!+
                            	\ end=+>+
                            	\ contains=xmlCommentStart,xmlCommentError
                            	\ extend
                            	\ fold
                            
    9              0.000008 else
                            
                                " no syntax folding:
                                " - fold attribute removed
                                "
    9              0.000079     syn region  xmlComment
                            	\ start=+<!+
                            	\ end=+>+
                            	\ contains=xmlCommentStart,xmlCommentError
                            	\ extend
                            
    9              0.000019 endif
                            
    9              0.000035 syn match xmlCommentStart   contained "<!" nextgroup=xmlCommentPart
    9              0.000039 syn keyword xmlTodo         contained TODO FIXME XXX
    9              0.000031 syn match   xmlCommentError contained "[^><!]"
    9              0.000079 syn region  xmlCommentPart
                                \ start=+--+
                                \ end=+--+
                                \ contained
                                \ contains=xmlTodo,@xmlCommentHook,@Spell
                            
                            
                            " CData sections
                            "
                            " PROVIDES: @xmlCdataHook
                            "
    9              0.000117 syn region    xmlCdata
                                \ start=+<!\[CDATA\[+
                                \ end=+]]>+
                                \ contains=xmlCdataStart,xmlCdataEnd,@xmlCdataHook,@Spell
                                \ keepend
                                \ extend
                            
                            " using the following line instead leads to corrupt folding at CDATA regions
                            " syn match    xmlCdata      +<!\[CDATA\[\_.\{-}]]>+  contains=xmlCdataStart,xmlCdataEnd,@xmlCdataHook
    9              0.000055 syn match    xmlCdataStart +<!\[CDATA\[+  contained contains=xmlCdataCdata
    9              0.000022 syn keyword  xmlCdataCdata CDATA          contained
    9              0.000030 syn match    xmlCdataEnd   +]]>+          contained
                            
                            
                            " Processing instructions
                            " This allows "?>" inside strings -- good idea?
    9              0.000083 syn region  xmlProcessing matchgroup=xmlProcessingDelim start="<?" end="?>" contains=xmlAttrib,xmlEqual,xmlString
                            
                            
    9              0.000034 if exists('g:xml_syntax_folding')
                            
                                " DTD -- we use dtd.vim here
                                syn region  xmlDocType matchgroup=xmlDocTypeDecl
                            	\ start="<!DOCTYPE"he=s+2,rs=s+2 end=">"
                            	\ fold
                            	\ contains=xmlDocTypeKeyword,xmlInlineDTD,xmlString
    9              0.000037 else
                            
                                " no syntax folding:
                                " - fold attribute removed
                                "
    9              0.000096     syn region  xmlDocType matchgroup=xmlDocTypeDecl
                            	\ start="<!DOCTYPE"he=s+2,rs=s+2 end=">"
                            	\ contains=xmlDocTypeKeyword,xmlInlineDTD,xmlString
                            
    9              0.000019 endif
                            
    9              0.000112 syn keyword xmlDocTypeKeyword contained DOCTYPE PUBLIC SYSTEM
    9              0.000436 syn region  xmlInlineDTD contained matchgroup=xmlDocTypeDecl start="\[" end="]" contains=@xmlDTD
    9   0.015214   0.011682 syn include @xmlDTD <sfile>:p:h/dtd.vim
    9              0.000027 unlet b:current_syntax
                            
                            
                            " synchronizing
                            
    9              0.000161 syn sync match xmlSyncComment grouphere xmlComment +<!--+
    9              0.000045 syn sync match xmlSyncComment groupthere NONE +-->+
                            
                            " The following is slow on large documents (and the doctype is optional
                            " syn sync match xmlSyncDT grouphere  xmlDocType +\_.\(<!DOCTYPE\)\@=+
                            " syn sync match xmlSyncDT groupthere  NONE       +]>+
                            
    9              0.000056 if exists('g:xml_syntax_folding')
                                syn sync match xmlSync grouphere   xmlRegion  +\_.\(<[^ /!?<>"']\+\)\@=+
                                " syn sync match xmlSync grouphere  xmlRegion "<[^ /!?<>"']*>"
                                syn sync match xmlSync groupthere  xmlRegion  +</[^ /!?<>"']\+>+
    9              0.000014 endif
                            
    9              0.000025 syn sync minlines=100 maxlines=200
                            
                            
                            " The default highlighting.
    9              0.000019 hi def link xmlTodo		Todo
    9              0.000014 hi def link xmlTag		Function
    9              0.000013 hi def link xmlTagName		Function
    9              0.000014 hi def link xmlEndTag		Identifier
    9              0.000046 if !exists("g:xml_namespace_transparent")
    9              0.000014     hi def link xmlNamespace	Tag
    9              0.000007 endif
    9              0.000012 hi def link xmlEntity		Statement
    9              0.000012 hi def link xmlEntityPunct	Type
                            
    9              0.000013 hi def link xmlAttribPunct	Comment
    9              0.000013 hi def link xmlAttrib		Type
                            
    9              0.000011 hi def link xmlString		String
    9              0.000012 hi def link xmlComment		Comment
    9              0.000013 hi def link xmlCommentStart	xmlComment
    9              0.000012 hi def link xmlCommentPart	Comment
    9              0.000012 hi def link xmlCommentError	Error
    9              0.000010 hi def link xmlError		Error
                            
    9              0.000013 hi def link xmlProcessingDelim	Comment
    9              0.000010 hi def link xmlProcessing	Type
                            
    9              0.000011 hi def link xmlCdata		String
    9              0.000013 hi def link xmlCdataCdata	Statement
    9              0.000011 hi def link xmlCdataStart	Type
    9              0.000015 hi def link xmlCdataEnd		Type
                            
    9              0.000013 hi def link xmlDocTypeDecl	Function
    9              0.000013 hi def link xmlDocTypeKeyword	Statement
    9              0.000010 hi def link xmlInlineDTD	Function
                            
    9              0.000024 let b:current_syntax = "xml"
                            
    9              0.000110 let &cpo = s:xml_cpo_save
    9              0.000021 unlet s:xml_cpo_save
                            
                            " vim: ts=4

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\syntax/dtd.vim
Sourced 9 times
Total time:   0.003409
 Self time:   0.003409

count  total (s)   self (s)
                            " Vim syntax file
                            " Language: DTD (Document Type Definition for XML)
                            " Maintainer: Christian Brabandt <cb@256bit.org>
                            " Repository: https://github.com/chrisbra/vim-xml-ftplugin
                            " Previous Maintainer: Johannes Zellner <johannes@zellner.org>
                            " Author: Daniel Amyot <damyot@site.uottawa.ca>
                            " Last Changed:	Sept 24, 2019
                            " Filenames: *.dtd
                            "
                            " REFERENCES:
                            "   http://www.w3.org/TR/html40/
                            "   http://www.w3.org/TR/NOTE-html-970421
                            "
                            " TODO:
                            "   - improve synchronizing.
                            
    9              0.000077 if exists("b:current_syntax")
                                finish
    9              0.000009 endif
    9              0.000072 let s:dtd_cpo_save = &cpo
    9              0.000077 set cpo&vim
                            
    9              0.000029 if !exists("dtd_ignore_case")
                                " I prefer having the case takes into consideration.
    9              0.000019     syn case match
                            else
                                syn case ignore
    9              0.000006 endif
                            
                            
                            " the following line makes the opening <! and
                            " closing > highlighted using 'dtdFunction'.
                            "
                            " PROVIDES: @dtdTagHook
                            "
    9              0.000236 syn region dtdTag matchgroup=dtdFunction
                                \ start=+<!+ end=+>+ matchgroup=NONE
                                \ contains=dtdTag,dtdTagName,dtdError,dtdComment,dtdString,dtdAttrType,dtdAttrDef,dtdEnum,dtdParamEntityInst,dtdParamEntityDecl,dtdCard,@dtdTagHook
                            
    9              0.000026 if !exists("dtd_no_tag_errors")
                                " mark everything as an error which starts with a <!
                                " and is not overridden later. If this is annoying,
                                " it can be switched off by setting the variable
                                " dtd_no_tag_errors.
    9              0.000047     syn region dtdError contained start=+<!+lc=2 end=+>+
    9              0.000007 endif
                            
                            " if this is a html like comment highlight also
                            " the opening <! and the closing > as Comment.
    9              0.000092 syn region dtdComment		start=+<![ \t]*--+ end=+-->+ contains=dtdTodo,@Spell
                            
                            
                            " proper DTD comment
    9              0.000052 syn region dtdComment contained start=+--+ end=+--+ contains=dtdTodo,@Spell
                            
                            
                            " Start tags (keywords). This is contained in dtdFunction.
                            " Note that everything not contained here will be marked
                            " as error.
    9              0.000110 syn match dtdTagName contained +<!\(ATTLIST\|DOCTYPE\|ELEMENT\|ENTITY\|NOTATION\|SHORTREF\|USEMAP\|\[\)+lc=2,hs=s+2
                            
                            
                            " wildcards and operators
    9              0.000022 syn match  dtdCard contained "|"
    9              0.000019 syn match  dtdCard contained ","
                            " evenutally overridden by dtdEntity
    9              0.000017 syn match  dtdCard contained "&"
    9              0.000017 syn match  dtdCard contained "?"
    9              0.000020 syn match  dtdCard contained "\*"
    9              0.000016 syn match  dtdCard contained "+"
                            
                            " ...and finally, special cases.
    9              0.000027 syn match  dtdCard      "ANY"
    9              0.000034 syn match  dtdCard      "EMPTY"
                            
    9              0.000027 if !exists("dtd_no_param_entities")
                            
                                " highlight parameter entity declarations
                                " and instances. Note that the closing `;'
                                " is optional.
                            
                                " instances
    9              0.000144     syn region dtdParamEntityInst oneline matchgroup=dtdParamEntityPunct
                            	\ start="%[-_a-zA-Z0-9.]\+"he=s+1,rs=s+1
                            	\ skip=+[-_a-zA-Z0-9.]+
                            	\ end=";\|\>"
                            	\ matchgroup=NONE contains=dtdParamEntityPunct
    9              0.000022     syn match  dtdParamEntityPunct contained "\."
                            
                                " declarations
                                " syn region dtdParamEntityDecl oneline matchgroup=dtdParamEntityDPunct start=+<!ENTITY % +lc=8 skip=+[-_a-zA-Z0-9.]+ matchgroup=NONE end="\>" contains=dtdParamEntityDPunct
    9              0.000086     syn match dtdParamEntityDecl +<!ENTITY % [-_a-zA-Z0-9.]*+lc=8 contains=dtdParamEntityDPunct
    9              0.000044     syn match  dtdParamEntityDPunct contained "%\|\."
                            
    9              0.000006 endif
                            
                            " &entities; compare with xml
    9              0.000045 syn match   dtdEntity		      "&[^; \t]*;" contains=dtdEntityPunct
    9              0.000023 syn match   dtdEntityPunct  contained "[&.;]"
                            
                            " Strings are between quotes
    9              0.000102 syn region dtdString    start=+"+ skip=+\\\\\|\\"+  end=+"+ contains=dtdAttrDef,dtdAttrType,dtdParamEntityInst,dtdEntity,dtdCard
    9              0.000074 syn region dtdString    start=+'+ skip=+\\\\\|\\'+  end=+'+ contains=dtdAttrDef,dtdAttrType,dtdParamEntityInst,dtdEntity,dtdCard
                            
                            " Enumeration of elements or data between parenthesis
                            "
                            " PROVIDES: @dtdEnumHook
                            "
    9              0.000106 syn region dtdEnum matchgroup=dtdType start="(" end=")" matchgroup=NONE contains=dtdEnum,dtdParamEntityInst,dtdCard,@dtdEnumHook
                            
                            "Attribute types
    9              0.000041 syn keyword dtdAttrType NMTOKEN  ENTITIES  NMTOKENS  ID  CDATA
    9              0.000023 syn keyword dtdAttrType IDREF  IDREFS
                            " ENTITY has to treated special for not overriding <!ENTITY
    9              0.000039 syn match   dtdAttrType +[^!]\<ENTITY+
                            
                            "Attribute Definitions
    9              0.000034 syn match  dtdAttrDef   "#REQUIRED"
    9              0.000028 syn match  dtdAttrDef   "#IMPLIED"
    9              0.000027 syn match  dtdAttrDef   "#FIXED"
                            
    9              0.000017 syn case match
                            " define some common keywords to mark TODO
                            " and important sections inside comments.
    9              0.000023 syn keyword dtdTodo contained TODO FIXME XXX
                            
    9              0.000015 syn sync lines=250
                            
                            " Define the default highlighting.
                            " Only when an item doesn't have highlighting yet
                            
                            " The default highlighting.
    9              0.000021 hi def link dtdFunction		Function
    9              0.000013 hi def link dtdTag		Normal
    9              0.000012 hi def link dtdType		Type
    9              0.000011 hi def link dtdAttrType		dtdType
    9              0.000011 hi def link dtdAttrDef		dtdType
    9              0.000013 hi def link dtdConstant		Constant
    9              0.000020 hi def link dtdString		dtdConstant
    9              0.000010 hi def link dtdEnum		dtdConstant
    9              0.000010 hi def link dtdCard		dtdFunction
                            
    9              0.000011 hi def link dtdEntity		Statement
    9              0.000011 hi def link dtdEntityPunct	dtdType
    9              0.000012 hi def link dtdParamEntityInst	dtdConstant
    9              0.000032 hi def link dtdParamEntityPunct	dtdType
    9              0.000013 hi def link dtdParamEntityDecl	dtdType
    9              0.000011 hi def link dtdParamEntityDPunct dtdComment
                            
    9              0.000012 hi def link dtdComment		Comment
    9              0.000011 hi def link dtdTagName		Statement
    9              0.000017 hi def link dtdError		Error
    9              0.000011 hi def link dtdTodo		Todo
                            
                            
    9              0.000087 let &cpo = s:dtd_cpo_save
    9              0.000021 unlet s:dtd_cpo_save
                            
    9              0.000021 let b:current_syntax = "dtd"
                            
                            " vim: ts=8

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\syntax\javascript.vim
Sourced 9 times
Total time:   0.008053
 Self time:   0.008053

count  total (s)   self (s)
                            " Vim syntax file
                            " Language:	JavaScript
                            " Maintainer:	Claudio Fleiner <claudio@fleiner.com>
                            " Updaters:	Scott Shattuck (ss) <ss@technicalpursuit.com>
                            " URL:		http://www.fleiner.com/vim/syntax/javascript.vim
                            " Changes:	(ss) added keywords, reserved words, and other identifiers
                            "		(ss) repaired several quoting and grouping glitches
                            "		(ss) fixed regex parsing issue with multiple qualifiers [gi]
                            "		(ss) additional factoring of keywords, globals, and members
                            " Last Change:	2022 Jun 09
                            " 		2013 Jun 12: adjusted javaScriptRegexpString (Kevin Locke)
                            " 		2018 Apr 14: adjusted javaScriptRegexpString (LongJohnCoder)
                            
                            " tuning parameters:
                            " unlet javaScript_fold
                            
    9              0.000104 if !exists("main_syntax")
                              " quit when a syntax file was already loaded
                              if exists("b:current_syntax")
                                finish
                              endif
                              let main_syntax = 'javascript'
    9              0.000036 elseif exists("b:current_syntax") && b:current_syntax == "javascript"
                              finish
    9              0.000006 endif
                            
    9              0.000078 let s:cpo_save = &cpo
    9              0.000088 set cpo&vim
                            
                            
    9              0.000068 syn keyword javaScriptCommentTodo      TODO FIXME XXX TBD contained
    9              0.000259 syn match   javaScriptLineComment      "\/\/.*" contains=@Spell,javaScriptCommentTodo
    9              0.000167 syn match   javaScriptCommentSkip      "^[ \t]*\*\($\|[ \t]\+\)"
    9              0.000306 syn region  javaScriptComment	       start="/\*"  end="\*/" contains=@Spell,javaScriptCommentTodo
    9              0.000050 syn match   javaScriptSpecial	       "\\\d\d\d\|\\."
    9              0.000115 syn region  javaScriptStringD	       start=+"+  skip=+\\\\\|\\"+  end=+"\|$+	contains=javaScriptSpecial,@htmlPreproc
    9              0.000084 syn region  javaScriptStringS	       start=+'+  skip=+\\\\\|\\'+  end=+'\|$+	contains=javaScriptSpecial,@htmlPreproc
    9              0.000081 syn region  javaScriptStringT	       start=+`+  skip=+\\\\\|\\`+  end=+`+	contains=javaScriptSpecial,javaScriptEmbed,@htmlPreproc
                            
    9              0.000057 syn region  javaScriptEmbed	       start=+${+  end=+}+	contains=@javaScriptEmbededExpr
                            
                            " number handling by Christopher Leonard chris.j.leonard@gmx.com
    9              0.000036 syn match   javaScriptSpecialCharacter "'\\.'"
    9              0.000100 syn match   javaScriptNumber           "\<0[bB][0-1]\+\(_[0-1]\+\)*\>"
    9              0.000053 syn match   javaScriptNumber           "\<0[oO][0-7]\+\(_[0-7]\+\)*\>"
    9              0.000049 syn match   javaScriptNumber           "\<0\([0-7]\+\(_[0-7]\+\)*\)\?\>"
    9              0.000048 syn match   javaScriptNumber           "\<0[xX][0-9a-fA-F]\+\(_[0-9a-fA-F]\+\)*\>"
    9              0.000054 syn match   javaScriptNumber           "\<\d\+\(_\d\+\)*[eE][+-]\?\d\+\>"
    9              0.000570 syn match   javaScriptNumber           "\<[1-9]\d*\(_\d\+\)*\(\.\(\d\+\(_\d\+\)*\([eE][+-]\?\d\+\)\?\)\?\)\?\>"
    9              0.000092 syn match   javaScriptNumber           "\<\(\d\+\(_\d\+\)*\)\?\.\d\+\(_\d\+\)*\([eE][+-]\?\d\+\)\?\>"
    9              0.000061 syn match   javaScriptNumber           "\<\d\+\(_\d\+\)*\.\(\d\+\(_\d\+\)*\([eE][+-]\?\d\+\)\?\)\?\>"
    9              0.000274 syn region  javaScriptRegexpString     start=+[,(=+]\s*/[^/*]+ms=e-1,me=e-1 skip=+\\\\\|\\/+ end=+/[gimuys]\{0,2\}\s*$+ end=+/[gimuys]\{0,2\}\s*[+;.,)\]}]+me=e-1 end=+/[gimuys]\{0,2\}\s\+\/+me=e-1 contains=@htmlPreproc,javaScriptComment oneline
                            
    9              0.000035 syn keyword javaScriptConditional	if else switch
    9              0.000033 syn keyword javaScriptRepeat		while for do in
    9              0.000029 syn keyword javaScriptBranch		break continue
    9              0.000040 syn keyword javaScriptOperator		new delete instanceof typeof
    9              0.000046 syn keyword javaScriptType		Array Boolean Date Function Number Object String RegExp
    9              0.000028 syn keyword javaScriptStatement		return with await
    9              0.000026 syn keyword javaScriptBoolean		true false
    9              0.000029 syn keyword javaScriptNull		null undefined
    9              0.000036 syn keyword javaScriptIdentifier	arguments this var let
    9              0.000027 syn keyword javaScriptLabel		case default
    9              0.000034 syn keyword javaScriptException		try catch finally throw
    9              0.000032 syn keyword javaScriptMessage		alert confirm prompt status
    9              0.000031 syn keyword javaScriptGlobal		self window top parent
    9              0.000041 syn keyword javaScriptMember		document event location 
    9              0.000047 syn keyword javaScriptDeprecated	escape unescape
    9              0.000312 syn keyword javaScriptReserved		abstract boolean byte char class const debugger double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile async
                            
    9              0.000078 syn cluster  javaScriptEmbededExpr	contains=javaScriptBoolean,javaScriptNull,javaScriptIdentifier,javaScriptStringD,javaScriptStringS,javaScriptStringT
                            
    9              0.000045 if exists("javaScript_fold")
                                syn match	javaScriptFunction	"\<function\>"
                                syn region	javaScriptFunctionFold	start="\<function\>.*[^};]$" end="^\z1}.*$" transparent fold keepend
                            
                                syn sync match javaScriptSync	grouphere javaScriptFunctionFold "\<function\>"
                                syn sync match javaScriptSync	grouphere NONE "^}"
                            
                                setlocal foldmethod=syntax
                                setlocal foldtext=getline(v:foldstart)
    9              0.000011 else
    9              0.000043     syn keyword javaScriptFunction	function
    9              0.000056     syn match	javaScriptBraces	   "[{}\[\]]"
    9              0.000033     syn match	javaScriptParens	   "[()]"
    9              0.000008 endif
                            
    9              0.000033 if main_syntax == "javascript"
                              syn sync fromstart
                              syn sync maxlines=100
                            
                              syn sync ccomment javaScriptComment
    9              0.000007 endif
                            
                            " Define the default highlighting.
                            " Only when an item doesn't have highlighting yet
    9              0.000023 hi def link javaScriptComment		Comment
    9              0.000014 hi def link javaScriptLineComment		Comment
    9              0.000014 hi def link javaScriptCommentTodo		Todo
    9              0.000012 hi def link javaScriptSpecial		Special
    9              0.000013 hi def link javaScriptStringS		String
    9              0.000010 hi def link javaScriptStringD		String
    9              0.000012 hi def link javaScriptStringT		String
    9              0.000015 hi def link javaScriptCharacter		Character
    9              0.000016 hi def link javaScriptSpecialCharacter	javaScriptSpecial
    9              0.000017 hi def link javaScriptNumber		javaScriptValue
    9              0.000013 hi def link javaScriptConditional		Conditional
    9              0.000012 hi def link javaScriptRepeat		Repeat
    9              0.000012 hi def link javaScriptBranch		Conditional
    9              0.000012 hi def link javaScriptOperator		Operator
    9              0.000012 hi def link javaScriptType			Type
    9              0.000012 hi def link javaScriptStatement		Statement
    9              0.000012 hi def link javaScriptFunction		Function
    9              0.000011 hi def link javaScriptBraces		Function
    9              0.000014 hi def link javaScriptError		Error
    9              0.000014 hi def link javaScrParenError		javaScriptError
    9              0.000013 hi def link javaScriptNull			Keyword
    9              0.000012 hi def link javaScriptBoolean		Boolean
    9              0.000010 hi def link javaScriptRegexpString		String
                            
    9              0.000013 hi def link javaScriptIdentifier		Identifier
    9              0.000011 hi def link javaScriptLabel		Label
    9              0.000011 hi def link javaScriptException		Exception
    9              0.000010 hi def link javaScriptMessage		Keyword
    9              0.000011 hi def link javaScriptGlobal		Keyword
    9              0.000011 hi def link javaScriptMember		Keyword
    9              0.000012 hi def link javaScriptDeprecated		Exception 
    9              0.000011 hi def link javaScriptReserved		Keyword
    9              0.000033 hi def link javaScriptDebug		Debug
    9              0.000012 hi def link javaScriptConstant		Label
    9              0.000010 hi def link javaScriptEmbed		Special
                            
                            
                            
    9              0.000030 let b:current_syntax = "javascript"
    9              0.000026 if main_syntax == 'javascript'
                              unlet main_syntax
    9              0.000006 endif
    9              0.000096 let &cpo = s:cpo_save
    9              0.000017 unlet s:cpo_save
                            
                            " vim: ts=8

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\syntax\vb.vim
Sourced 6 times
Total time:   0.012830
 Self time:   0.012830

count  total (s)   self (s)
                            " Vim syntax file
                            " Language:     Visual Basic
                            " Maintainer:   Doug Kearns <dougkearns@gmail.com>
                            " Former Maintainer:    Tim Chase <vb.vim@tim.thechases.com>
                            " Former Maintainer:    Robert M. Cortopassi <cortopar@mindspring.com>
                            "       (tried multiple times to contact, but email bounced)
                            " Last Change:
                            "   2021 Nov 26  Incorporated additions from Doug Kearns
                            "   2005 May 25  Synched with work by Thomas Barthel
                            "   2004 May 30  Added a few keywords
                            
                            " This was thrown together after seeing numerous requests on the
                            " VIM and VIM-DEV mailing lists.  It is by no means complete.
                            " Send comments, suggestions and requests to the maintainer.
                            
                            " quit when a syntax file was already loaded
    6              0.000065 if exists("b:current_syntax")
                                    finish
    6              0.000006 endif
                            
                            " VB is case insensitive
    6              0.000020 syn case ignore
                            
    6              0.000064 syn keyword vbConditional If Then ElseIf Else Select Case
                            
    6              0.000126 syn keyword vbOperator AddressOf And ByRef ByVal Eqv Imp In
    6              0.000027 syn keyword vbOperator Is Like Mod Not Or To Xor
                            
    6              0.000055 syn match vbOperator "[()+.,\-/*=&]"
    6              0.000034 syn match vbOperator "[<>]=\="
    6              0.000023 syn match vbOperator "<>"
    6              0.000025 syn match vbOperator "\s\+_$"
                            
    6              0.000017 syn keyword vbBoolean  True False
    6              0.000017 syn keyword vbConst Null Nothing
                            
    6              0.000023 syn keyword vbRepeat Do For ForEach Loop Next
    6              0.000020 syn keyword vbRepeat Step To Until Wend While
                            
    6              0.000024 syn keyword vbEvents AccessKeyPress Activate ActiveRowChanged
    6              0.000023 syn keyword vbEvents AfterAddFile AfterChangeFileName AfterCloseFile
    6              0.000020 syn keyword vbEvents AfterColEdit AfterColUpdate AfterDelete
    6              0.000021 syn keyword vbEvents AfterInsert AfterLabelEdit AfterRemoveFile
    6              0.000018 syn keyword vbEvents AfterUpdate AfterWriteFile AmbientChanged
    6              0.000019 syn keyword vbEvents ApplyChanges Associate AsyncProgress
    6              0.000019 syn keyword vbEvents AsyncReadComplete AsyncReadProgress AxisActivated
    6              0.000016 syn keyword vbEvents AxisLabelActivated AxisLabelSelected
    6              0.000019 syn keyword vbEvents AxisLabelUpdated AxisSelected AxisTitleActivated
    6              0.000018 syn keyword vbEvents AxisTitleSelected AxisTitleUpdated AxisUpdated
    6              0.000018 syn keyword vbEvents BeforeClick BeforeColEdit BeforeColUpdate
    6              0.000019 syn keyword vbEvents BeforeConnect BeforeDelete BeforeInsert
    6              0.000021 syn keyword vbEvents BeforeLabelEdit BeforeLoadFile BeforeUpdate
    6              0.000051 syn keyword vbEvents BeginRequest BeginTrans ButtonClick
    6              0.000020 syn keyword vbEvents ButtonCompleted ButtonDropDown ButtonGotFocus
    6              0.000022 syn keyword vbEvents ButtonLostFocus CallbackKeyDown Change Changed
    6              0.000026 syn keyword vbEvents ChartActivated ChartSelected ChartUpdated Click
    6              0.000027 syn keyword vbEvents Close CloseQuery CloseUp ColEdit ColResize
    6              0.000025 syn keyword vbEvents Collapse ColumnClick CommitTrans Compare
    6              0.000021 syn keyword vbEvents ConfigChageCancelled ConfigChanged
    6              0.000023 syn keyword vbEvents ConfigChangedCancelled Connect ConnectionRequest
    6              0.000019 syn keyword vbEvents CurrentRecordChanged DECommandAdded
    6              0.000019 syn keyword vbEvents DECommandPropertyChanged DECommandRemoved
    6              0.000021 syn keyword vbEvents DEConnectionAdded DEConnectionPropertyChanged
    6              0.000022 syn keyword vbEvents DEConnectionRemoved DataArrival DataChanged
    6              0.000022 syn keyword vbEvents DataUpdated DateClicked DblClick Deactivate
    6              0.000020 syn keyword vbEvents DevModeChange DeviceArrival DeviceOtherEvent
    6              0.000019 syn keyword vbEvents DeviceQueryRemove DeviceQueryRemoveFailed
    6              0.000018 syn keyword vbEvents DeviceRemoveComplete DeviceRemovePending
    6              0.000029 syn keyword vbEvents Disconnect DisplayChanged Dissociate
    6              0.000024 syn keyword vbEvents DoGetNewFileName Done DonePainting DownClick
    6              0.000025 syn keyword vbEvents DragDrop DragOver DropDown EditProperty EditQuery
    6              0.000025 syn keyword vbEvents EndRequest EnterCell EnterFocus ExitFocus Expand
    6              0.000021 syn keyword vbEvents FontChanged FootnoteActivated FootnoteSelected
    6              0.000023 syn keyword vbEvents FootnoteUpdated Format FormatSize GotFocus
    6              0.000022 syn keyword vbEvents HeadClick HeightChanged Hide InfoMessage
    6              0.000026 syn keyword vbEvents IniProperties InitProperties Initialize
    6              0.000021 syn keyword vbEvents ItemActivated ItemAdded ItemCheck ItemClick
    6              0.000023 syn keyword vbEvents ItemReloaded ItemRemoved ItemRenamed
    6              0.000025 syn keyword vbEvents ItemSeletected KeyDown KeyPress KeyUp LeaveCell
    6              0.000019 syn keyword vbEvents LegendActivated LegendSelected LegendUpdated
    6              0.000021 syn keyword vbEvents LinkClose LinkError LinkExecute LinkNotify
    6              0.000078 syn keyword vbEvents LinkOpen Load LostFocus MouseDown MouseMove
    6              0.000025 syn keyword vbEvents MouseUp NodeCheck NodeClick OLECompleteDrag
    6              0.000023 syn keyword vbEvents OLEDragDrop OLEDragOver OLEGiveFeedback OLESetData
    6              0.000023 syn keyword vbEvents OLEStartDrag ObjectEvent ObjectMove OnAddNew
    6              0.000054 syn keyword vbEvents OnComm Paint PanelClick PanelDblClick PathChange
    6              0.000026 syn keyword vbEvents PatternChange PlotActivated PlotSelected
    6              0.000021 syn keyword vbEvents PlotUpdated PointActivated PointLabelActivated
    6              0.000020 syn keyword vbEvents PointLabelSelected PointLabelUpdated PointSelected
    6              0.000020 syn keyword vbEvents PointUpdated PowerQuerySuspend PowerResume
    6              0.000022 syn keyword vbEvents PowerStatusChanged PowerSuspend ProcessTag
    6              0.000019 syn keyword vbEvents ProcessingTimeout QueryChangeConfig QueryClose
    6              0.000020 syn keyword vbEvents QueryComplete QueryCompleted QueryTimeout
    6              0.000020 syn keyword vbEvents QueryUnload ReadProperties RepeatedControlLoaded
    6              0.000017 syn keyword vbEvents RepeatedControlUnloaded Reposition
    6              0.000020 syn keyword vbEvents RequestChangeFileName RequestWriteFile Resize
    6              0.000019 syn keyword vbEvents ResultsChanged RetainedProject RollbackTrans
    6              0.000019 syn keyword vbEvents RowColChange RowCurrencyChange RowResize
    6              0.000024 syn keyword vbEvents RowStatusChanged Scroll SelChange SelectionChanged
    6              0.000020 syn keyword vbEvents SendComplete SendProgress SeriesActivated
    6              0.000023 syn keyword vbEvents SeriesSelected SeriesUpdated SettingChanged Show
    6              0.000024 syn keyword vbEvents SplitChange Start StateChanged StatusUpdate
    6              0.000023 syn keyword vbEvents SysColorsChanged Terminate TimeChanged Timer
    6              0.000116 syn keyword vbEvents TitleActivated TitleSelected TitleUpdated
    6              0.000062 syn keyword vbEvents UnboundAddData UnboundDeleteRow
    6              0.000061 syn keyword vbEvents UnboundGetRelativeBookmark UnboundReadData
    6              0.000178 syn keyword vbEvents UnboundWriteData Unformat Unload UpClick Updated
    6              0.000084 syn keyword vbEvents UserEvent Validate ValidationError
    6              0.000078 syn keyword vbEvents VisibleRecordChanged WillAssociate WillChangeData
    6              0.000091 syn keyword vbEvents WillDissociate WillExecute WillUpdateRows
    6              0.000032 syn keyword vbEvents WriteProperties
                            
                            
    6              0.000256 syn keyword vbFunction Abs Array Asc AscB AscW Atn Avg BOF CBool CByte
    6              0.000213 syn keyword vbFunction CCur CDate CDbl CInt CLng CSng CStr CVDate CVErr
    6              0.000203 syn keyword vbFunction CVar CallByName Cdec Choose Chr ChrB ChrW Command
    6              0.000158 syn keyword vbFunction Cos Count CreateObject CurDir DDB Date DateAdd
    6              0.000136 syn keyword vbFunction DateDiff DatePart DateSerial DateValue Day Dir
    6              0.000157 syn keyword vbFunction DoEvents EOF Environ Error Exp FV FileAttr
    6              0.000111 syn keyword vbFunction FileDateTime FileLen FilterFix Fix Format
    6              0.000086 syn keyword vbFunction FormatCurrency FormatDateTime FormatNumber
    6              0.000110 syn keyword vbFunction FormatPercent FreeFile GetAllStrings GetAttr
    6              0.000211 syn keyword vbFunction GetAutoServerSettings GetObject GetSetting Hex
    6              0.000219 syn keyword vbFunction Hour IIf IMEStatus IPmt InStr Input InputB
    6              0.000233 syn keyword vbFunction InputBox InstrB Int IsArray IsDate IsEmpty IsError
    6              0.000218 syn keyword vbFunction IsMissing IsNull IsNumeric IsObject Join LBound
    6              0.000286 syn keyword vbFunction LCase LOF LTrim Left LeftB Len LenB LoadPicture
    6              0.000190 syn keyword vbFunction LoadResData LoadResPicture LoadResString Loc Log
    6              0.000203 syn keyword vbFunction MIRR Max Mid MidB Min Minute Month MonthName
    6              0.000305 syn keyword vbFunction MsgBox NPV NPer Now Oct PPmt PV Partition Pmt
    6              0.000288 syn keyword vbFunction QBColor RGB RTrim Rate Replace Right RightB Rnd
    6              0.000236 syn keyword vbFunction Round SLN SYD Second Seek Sgn Shell Sin Space Spc
    6              0.000093 syn keyword vbFunction Split Sqr StDev StDevP Str StrComp StrConv
    6              0.000108 syn keyword vbFunction StrReverse String Sum Switch Tab Tan Time
    6              0.000088 syn keyword vbFunction TimeSerial TimeValue Timer Trim TypeName UBound
    6              0.000084 syn keyword vbFunction UCase Val Var VarP VarType Weekday WeekdayName
    6              0.000021 syn keyword vbFunction Year
                            
    6              0.000063 syn keyword vbMethods AboutBox Accept Activate Add AddCustom AddFile
    6              0.000050 syn keyword vbMethods AddFromFile AddFromGuid AddFromString
    6              0.000061 syn keyword vbMethods AddFromTemplate AddItem AddNew AddToAddInToolbar
    6              0.000049 syn keyword vbMethods AddToolboxProgID Append AppendAppendChunk
    6              0.000072 syn keyword vbMethods AppendChunk Arrange Assert AsyncRead BatchUpdate
    6              0.000049 syn keyword vbMethods BeginQueryEdit BeginTrans Bind BuildPath
    6              0.000050 syn keyword vbMethods CanPropertyChange Cancel CancelAsyncRead
    6              0.000111 syn keyword vbMethods CancelBatch CancelUpdate CaptureImage CellText
    6              0.000064 syn keyword vbMethods CellValue Circle Clear ClearFields ClearSel
    6              0.000063 syn keyword vbMethods ClearSelCols ClearStructure Clone Close Cls
    6              0.000054 syn keyword vbMethods ColContaining CollapseAll ColumnSize CommitTrans
    6              0.000064 syn keyword vbMethods CompactDatabase Compose Connect Copy CopyFile
    6              0.000055 syn keyword vbMethods CopyFolder CopyQueryDef Count CreateDatabase
    6              0.000020 syn keyword vbMethods CreateDragImage CreateEmbed CreateField
    6              0.000021 syn keyword vbMethods CreateFolder CreateGroup CreateIndex CreateLink
    6              0.000021 syn keyword vbMethods CreatePreparedStatement CreatePropery CreateQuery
    6              0.000021 syn keyword vbMethods CreateQueryDef CreateRelation CreateTableDef
    6              0.000019 syn keyword vbMethods CreateTextFile CreateToolWindow CreateUser
    6              0.000020 syn keyword vbMethods CreateWorkspace Customize Cut Delete
    6              0.000020 syn keyword vbMethods DeleteColumnLabels DeleteColumns DeleteFile
    6              0.000019 syn keyword vbMethods DeleteFolder DeleteLines DeleteRowLabels
    6              0.000023 syn keyword vbMethods DeleteRows DeselectAll DesignerWindow DoVerb Drag
    6              0.000025 syn keyword vbMethods Draw DriveExists Edit EditCopy EditPaste EndDoc
    6              0.000022 syn keyword vbMethods EnsureVisible EstablishConnection Execute Exists
    6              0.000023 syn keyword vbMethods Expand Export ExportReport ExtractIcon Fetch
    6              0.000023 syn keyword vbMethods FetchVerbs FileExists Files FillCache Find
    6              0.000023 syn keyword vbMethods FindFirst FindItem FindLast FindNext FindPrevious
    6              0.000020 syn keyword vbMethods FolderExists Forward GetAbsolutePathName
    6              0.000022 syn keyword vbMethods GetBaseName GetBookmark GetChunk GetClipString
    6              0.000023 syn keyword vbMethods GetData GetDrive GetDriveName GetFile GetFileName
    6              0.000022 syn keyword vbMethods GetFirstVisible GetFolder GetFormat GetHeader
    6              0.000020 syn keyword vbMethods GetLineFromChar GetNumTicks GetParentFolderName
    6              0.000019 syn keyword vbMethods GetRows GetSelectedPart GetSelection
    6              0.000019 syn keyword vbMethods GetSpecialFolder GetTempName GetText
    6              0.000022 syn keyword vbMethods GetVisibleCount GoBack GoForward Hide HitTest
    6              0.000022 syn keyword vbMethods HoldFields Idle Import InitializeLabels Insert
    6              0.000019 syn keyword vbMethods InsertColumnLabels InsertColumns InsertFile
    6              0.000018 syn keyword vbMethods InsertLines InsertObjDlg InsertRowLabels
    6              0.000024 syn keyword vbMethods InsertRows Item Keys KillDoc Layout Line Lines
    6              0.000023 syn keyword vbMethods LinkExecute LinkPoke LinkRequest LinkSend Listen
    6              0.000021 syn keyword vbMethods LoadFile LoadResData LoadResPicture LoadResString
    6              0.000019 syn keyword vbMethods LogEvent MakeCompileFile MakeCompiledFile
    6              0.000020 syn keyword vbMethods MakeReplica MoreResults Move MoveData MoveFile
    6              0.000020 syn keyword vbMethods MoveFirst MoveFolder MoveLast MoveNext
    6              0.000021 syn keyword vbMethods MovePrevious NavigateTo NewPage NewPassword
    6              0.000022 syn keyword vbMethods NextRecordset OLEDrag OnAddinsUpdate OnConnection
    6              0.000019 syn keyword vbMethods OnDisconnection OnStartupComplete Open
    6              0.000019 syn keyword vbMethods OpenAsTextStream OpenConnection OpenDatabase
    6              0.000021 syn keyword vbMethods OpenQueryDef OpenRecordset OpenResultset OpenURL
    6              0.000021 syn keyword vbMethods Overlay PSet PaintPicture PastSpecialDlg Paste
    6              0.000021 syn keyword vbMethods PeekData Play Point PopulatePartial PopupMenu
    6              0.000025 syn keyword vbMethods Print PrintForm PrintReport PropertyChanged Quit
    6              0.000018 syn keyword vbMethods Raise RandomDataFill RandomFillColumns
    6              0.000021 syn keyword vbMethods RandomFillRows ReFill Read ReadAll ReadFromFile
    6              0.000023 syn keyword vbMethods ReadLine ReadProperty Rebind Refresh RefreshLink
    6              0.000049 syn keyword vbMethods RegisterDatabase ReleaseInstance Reload Remove
    6              0.000022 syn keyword vbMethods RemoveAddInFromToolbar RemoveAll RemoveItem Render
    6              0.000022 syn keyword vbMethods RepairDatabase ReplaceLine Reply ReplyAll Requery
    6              0.000018 syn keyword vbMethods ResetCustom ResetCustomLabel ResolveName
    6              0.000020 syn keyword vbMethods RestoreToolbar Resync Rollback RollbackTrans
    6              0.000022 syn keyword vbMethods RowBookmark RowContaining RowTop Save SaveAs
    6              0.000022 syn keyword vbMethods SaveFile SaveToFile SaveToOle1File SaveToolbar
    6              0.000025 syn keyword vbMethods Scale ScaleX ScaleY Scroll SelPrint SelectAll
    6              0.000024 syn keyword vbMethods SelectPart Send SendData Set SetAutoServerSettings
    6              0.000023 syn keyword vbMethods SetData SetFocus SetOption SetSelection SetSize
    6              0.000022 syn keyword vbMethods SetText SetViewport Show ShowColor ShowFont
    6              0.000020 syn keyword vbMethods ShowHelp ShowOpen ShowPrinter ShowSave
    6              0.000064 syn keyword vbMethods ShowWhatsThis SignOff SignOn Size Skip SkipLine
    6              0.000021 syn keyword vbMethods Span Split SplitContaining StartLabelEdit
    6              0.000022 syn keyword vbMethods StartLogging Stop Synchronize Tag TextHeight
    6              0.000021 syn keyword vbMethods TextWidth ToDefaults Trace TwipsToChartPart
    6              0.000021 syn keyword vbMethods TypeByChartType URLFor Update UpdateControls
    6              0.000022 syn keyword vbMethods UpdateRecord UpdateRow Upto ValidateControls Value
    6              0.000019 syn keyword vbMethods WhatsThisMode Write WriteBlankLines WriteLine
    6              0.000017 syn keyword vbMethods WriteProperty WriteTemplate ZOrder
    6              0.000016 syn keyword vbMethods rdoCreateEnvironment rdoRegisterDataSource
                            
    6              0.000028 syn keyword vbStatement Alias AppActivate As Base Beep Begin Call ChDir
    6              0.000029 syn keyword vbStatement ChDrive Close Const Date Declare DefBool DefByte
    6              0.000026 syn keyword vbStatement DefCur DefDate DefDbl DefDec DefInt DefLng DefObj
    6              0.000026 syn keyword vbStatement DefSng DefStr DefVar Deftype DeleteSetting Dim Do
    6              0.000027 syn keyword vbStatement Each ElseIf End Enum Erase Error Event Exit
    6              0.000026 syn keyword vbStatement Explicit FileCopy For ForEach Function Get GoSub
    6              0.000027 syn keyword vbStatement GoTo Gosub Implements Kill LSet Let Lib LineInput
    6              0.000029 syn keyword vbStatement Load Lock Loop Mid MkDir Name Next On OnError Open
    6              0.000025 syn keyword vbStatement Option Preserve Private Property Public Put RSet
    6              0.000026 syn keyword vbStatement RaiseEvent Randomize ReDim Redim Reset Resume
    6              0.000024 syn keyword vbStatement Return RmDir SavePicture SaveSetting Seek SendKeys
    6              0.000027 syn keyword vbStatement Sendkeys Set SetAttr Static Step Stop Sub Time
    6              0.000024 syn keyword vbStatement Type Unload Unlock Until Wend While Width With
    6              0.000011 syn keyword vbStatement Write
                            
    6              0.000028 syn keyword vbKeyword As Binary ByRef ByVal Date Empty Error Friend Get
    6              0.000029 syn keyword vbKeyword Input Is Len Lock Me Mid New Nothing Null On
    6              0.000058 syn keyword vbKeyword Option Optional ParamArray Print Private Property
    6              0.000022 syn keyword vbKeyword Public PublicNotCreateable OnNewProcessSingleUse
    6              0.000022 syn keyword vbKeyword InSameProcessMultiUse GlobalMultiUse Resume Seek
    6              0.000021 syn keyword vbKeyword Set Static Step String Time WithEvents
                            
    6              0.000012 syn keyword vbTodo contained    TODO
                            
                            "Datatypes
    6              0.000026 syn keyword vbTypes Boolean Byte Currency Date Decimal Double Empty
    6              0.000021 syn keyword vbTypes Integer Long Object Single String Variant
                            
                            "VB defined values
    6              0.000024 syn keyword vbDefine dbBigInt dbBinary dbBoolean dbByte dbChar
    6              0.000023 syn keyword vbDefine dbCurrency dbDate dbDecimal dbDouble dbFloat
    6              0.000026 syn keyword vbDefine dbGUID dbInteger dbLong dbLongBinary dbMemo
    6              0.000022 syn keyword vbDefine dbNumeric dbSingle dbText dbTime dbTimeStamp
    6              0.000012 syn keyword vbDefine dbVarBinary
                            
                            "VB defined values
    6              0.000021 syn keyword vbDefine vb3DDKShadow vb3DFace vb3DHighlight vb3DLight
    6              0.000018 syn keyword vbDefine vb3DShadow vbAbort vbAbortRetryIgnore
    6              0.000018 syn keyword vbDefine vbActiveBorder vbActiveTitleBar vbAlias
    6              0.000018 syn keyword vbDefine vbApplicationModal vbApplicationWorkspace
    6              0.000020 syn keyword vbDefine vbAppTaskManager vbAppWindows vbArchive vbArray
    6              0.000030 syn keyword vbDefine vbBack vbBinaryCompare vbBlack vbBlue vbBoolean
    6              0.000020 syn keyword vbDefine vbButtonFace vbButtonShadow vbButtonText vbByte
    6              0.000022 syn keyword vbDefine vbCalGreg vbCalHijri vbCancel vbCr vbCritical
    6              0.000047 syn keyword vbDefine vbCrLf vbCurrency vbCyan vbDatabaseCompare
    6              0.000021 syn keyword vbDefine vbDataObject vbDate vbDecimal vbDefaultButton1
    6              0.000019 syn keyword vbDefine vbDefaultButton2 vbDefaultButton3 vbDefaultButton4
    6              0.000021 syn keyword vbDefine vbDesktop vbDirectory vbDouble vbEmpty vbError
    6              0.000020 syn keyword vbDefine vbExclamation vbFirstFourDays vbFirstFullWeek
    6              0.000018 syn keyword vbDefine vbFirstJan1 vbFormCode vbFormControlMenu
    6              0.000020 syn keyword vbDefine vbFormFeed vbFormMDIForm vbFriday vbFromUnicode
    6              0.000078 syn keyword vbDefine vbGrayText vbGreen vbHidden vbHide vbHighlight
    6              0.000021 syn keyword vbDefine vbHighlightText vbHiragana vbIgnore vbIMEAlphaDbl
    6              0.000018 syn keyword vbDefine vbIMEAlphaSng vbIMEDisable vbIMEHiragana
    6              0.000018 syn keyword vbDefine vbIMEKatakanaDbl vbIMEKatakanaSng vbIMEModeAlpha
    6              0.000016 syn keyword vbDefine vbIMEModeAlphaFull vbIMEModeDisable
    6              0.000016 syn keyword vbDefine vbIMEModeHangul vbIMEModeHangulFull
    6              0.000016 syn keyword vbDefine vbIMEModeHiragana vbIMEModeKatakana
    6              0.000017 syn keyword vbDefine vbIMEModeKatakanaHalf vbIMEModeNoControl
    6              0.000056 syn keyword vbDefine vbIMEModeOff vbIMEModeOn vbIMENoOp vbIMEOff
    6              0.000019 syn keyword vbDefine vbIMEOn vbInactiveBorder vbInactiveCaptionText
    6              0.000018 syn keyword vbDefine vbInactiveTitleBar vbInfoBackground vbInformation
    6              0.000064 syn keyword vbDefine vbInfoText vbInteger vbKatakana vbKey0 vbKey1
    6              0.000027 syn keyword vbDefine vbKey2 vbKey3 vbKey4 vbKey5 vbKey6 vbKey7 vbKey8
    6              0.000022 syn keyword vbDefine vbKey9 vbKeyA vbKeyAdd vbKeyB vbKeyBack vbKeyC
    6              0.000021 syn keyword vbDefine vbKeyCancel vbKeyCapital vbKeyClear vbKeyControl
    6              0.000019 syn keyword vbDefine vbKeyD vbKeyDecimal vbKeyDelete vbKeyDivide
    6              0.000054 syn keyword vbDefine vbKeyDown vbKeyE vbKeyEnd vbKeyEscape vbKeyExecute
    6              0.000024 syn keyword vbDefine vbKeyF vbKeyF1 vbKeyF10 vbKeyF11 vbKeyF12 vbKeyF13
    6              0.000032 syn keyword vbDefine vbKeyF14 vbKeyF15 vbKeyF16 vbKeyF2 vbKeyF3 vbKeyF4
    6              0.000023 syn keyword vbDefine vbKeyF5 vbKeyF6 vbKeyF7 vbKeyF8 vbKeyF9 vbKeyG
    6              0.000021 syn keyword vbDefine vbKeyH vbKeyHelp vbKeyHome vbKeyI vbKeyInsert
    6              0.000022 syn keyword vbDefine vbKeyJ vbKeyK vbKeyL vbKeyLButton vbKeyLeft vbKeyM
    6              0.000022 syn keyword vbDefine vbKeyMButton vbKeyMenu vbKeyMultiply vbKeyN
    6              0.000036 syn keyword vbDefine vbKeyNumlock vbKeyNumpad0 vbKeyNumpad1
    6              0.000017 syn keyword vbDefine vbKeyNumpad2 vbKeyNumpad3 vbKeyNumpad4
    6              0.000016 syn keyword vbDefine vbKeyNumpad5 vbKeyNumpad6 vbKeyNumpad7
    6              0.000018 syn keyword vbDefine vbKeyNumpad8 vbKeyNumpad9 vbKeyO vbKeyP
    6              0.000019 syn keyword vbDefine vbKeyPageDown vbKeyPageUp vbKeyPause vbKeyPrint
    6              0.000020 syn keyword vbDefine vbKeyQ vbKeyR vbKeyRButton vbKeyReturn vbKeyRight
    6              0.000019 syn keyword vbDefine vbKeyS vbKeySelect vbKeySeparator vbKeyShift
    6              0.000019 syn keyword vbDefine vbKeySnapshot vbKeySpace vbKeySubtract vbKeyT
    6              0.000021 syn keyword vbDefine vbKeyTab vbKeyU vbKeyUp vbKeyV vbKeyW vbKeyX
    6              0.000023 syn keyword vbDefine vbKeyY vbKeyZ vbLf vbLong vbLowerCase vbMagenta
    6              0.000025 syn keyword vbDefine vbMaximizedFocus vbMenuBar vbMenuText
    6              0.000022 syn keyword vbDefine vbMinimizedFocus vbMinimizedNoFocus vbMonday
    6              0.000018 syn keyword vbDefine vbMsgBox vbMsgBoxHelpButton vbMsgBoxRight
    6              0.000017 syn keyword vbDefine vbMsgBoxRtlReading vbMsgBoxSetForeground
    6              0.000025 syn keyword vbDefine vbMsgBoxText vbNarrow vbNewLine vbNo vbNormal
    6              0.000024 syn keyword vbDefine vbNormalFocus vbNormalNoFocus vbNull vbNullChar
    6              0.000019 syn keyword vbDefine vbNullString vbObject vbObjectError vbOK
    6              0.000019 syn keyword vbDefine vbOKCancel vbOKOnly vbProperCase vbQuestion
    6              0.000021 syn keyword vbDefine vbReadOnly vbRed vbRetry vbRetryCancel vbSaturday
    6              0.000019 syn keyword vbDefine vbScrollBars vbSingle vbString vbSunday vbSystem
    6              0.000018 syn keyword vbDefine vbSystemModal vbTab vbTextCompare vbThursday
    6              0.000020 syn keyword vbDefine vbTitleBarText vbTuesday vbUnicode vbUpperCase
    6              0.000019 syn keyword vbDefine vbUseSystem vbUseSystemDayOfWeek vbVariant
    6              0.000020 syn keyword vbDefine vbVerticalTab vbVolume vbWednesday vbWhite vbWide
    6              0.000018 syn keyword vbDefine vbWindowBackground vbWindowFrame vbWindowText
    6              0.000017 syn keyword vbDefine vbYellow vbYes vbYesNo vbYesNoCancel
                            
                            "Numbers
                            "integer number, or floating point number without a dot.
    6              0.000038 syn match vbNumber "\<\d\+\>"
                            "floating point number, with dot
    6              0.000037 syn match vbNumber "\<\d\+\.\d*\>"
                            "floating point number, starting with a dot
    6              0.000024 syn match vbNumber "\.\d\+\>"
                            "syn match  vbNumber            "{[[:xdigit:]-]\+}\|&[hH][[:xdigit:]]\+&"
                            "syn match  vbNumber            ":[[:xdigit:]]\+"
                            "syn match  vbNumber            "[-+]\=\<\d\+\>"
    6              0.000040 syn match  vbFloat              "[-+]\=\<\d\+[eE][\-+]\=\d\+"
    6              0.000089 syn match  vbFloat              "[-+]\=\<\d\+\.\d*\([eE][\-+]\=\d\+\)\="
    6              0.000038 syn match  vbFloat              "[-+]\=\<\.\d\+\([eE][\-+]\=\d\+\)\="
                            
                            " String and Character constants
    6              0.000066 syn region  vbString		start=+"+  end=+"\|$+
    6              0.000071 syn region  vbComment		start="\(^\|\s\)REM\s" end="$" contains=vbTodo
    6              0.000038 syn region  vbComment		start="\(^\|\s\)\'"   end="$" contains=vbTodo
    6              0.000023 syn match   vbLineLabel		"^\h\w\+:"
    6              0.000030 syn match   vbLineNumber	"^\d\+\(:\|\s\|$\)"
    6              0.000037 syn match   vbTypeSpecifier  "\<\a\w*[@\$%&!#]"ms=s+1
    6              0.000025 syn match   vbTypeSpecifier  "#[a-zA-Z0-9]"me=e-1
                            " Conditional Compilation
    6              0.000025 syn match  vbPreProc "^#const\>"
    6              0.000046 syn region vbPreProc matchgroup=PreProc start="^#if\>"     end="\<then\>" transparent contains=TOP
    6              0.000042 syn region vbPreProc matchgroup=PreProc start="^#elseif\>" end="\<then\>" transparent contains=TOP
    6              0.000021 syn match  vbPreProc "^#else\>"
    6              0.000031 syn match  vbPreProc "^#end\s*if\>"
                            
                            " Define the default highlighting.
                            " Only when an item doesn't have highlighting yet
                            
    6              0.000018 hi def link vbBoolean           Boolean
    6              0.000009 hi def link vbLineNumber        Comment
    6              0.000007 hi def link vbLineLabel         Comment
    6              0.000007 hi def link vbComment           Comment
    6              0.000010 hi def link vbConditional       Conditional
    6              0.000009 hi def link vbConst             Constant
    6              0.000008 hi def link vbDefine            Constant
    6              0.000009 hi def link vbError             Error
    6              0.000009 hi def link vbFunction          Identifier
    6              0.000008 hi def link vbIdentifier        Identifier
    6              0.000008 hi def link vbNumber            Number
    6              0.000007 hi def link vbFloat             Float
    6              0.000007 hi def link vbMethods           PreProc
    6              0.000008 hi def link vbOperator          Operator
    6              0.000008 hi def link vbRepeat            Repeat
    6              0.000007 hi def link vbString            String
    6              0.000008 hi def link vbStatement         Statement
    6              0.000008 hi def link vbKeyword           Statement
    6              0.000007 hi def link vbEvents            Special
    6              0.000008 hi def link vbTodo              Todo
    6              0.000007 hi def link vbTypes             Type
    6              0.000007 hi def link vbTypeSpecifier     Type
    6              0.000006 hi def link vbPreProc           PreProc
                            
    6              0.000030 let b:current_syntax = "vb"
                            
                            " vim: ts=8

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\syntax\sh.vim
Sourced 3 times
Total time:   0.021887
 Self time:   0.021887

count  total (s)   self (s)
                            " Vim syntax file
                            " Language:		shell (sh) Korn shell (ksh) bash (sh)
                            " Maintainer:		Charles E. Campbell <NcampObell@SdrPchip.AorgM-NOSPAM>
                            " Previous Maintainer:	Lennart Schultz <Lennart.Schultz@ecmwf.int>
                            " Last Change:		Jul 08, 2022
                            " Version:		203
                            " URL:		http://www.drchip.org/astronaut/vim/index.html#SYNTAX_SH
                            " For options and settings, please use:      :help ft-sh-syntax
                            " This file includes many ideas from Eric Brunet (eric.brunet@ens.fr) and heredoc fixes from Felipe Contreras
                            
                            " quit when a syntax file was already loaded {{{1
    3              0.000035 if exists("b:current_syntax")
                              finish
    3              0.000003 endif
                            
                            " If the shell script itself specifies which shell to use, use it
    3              0.000044 if getline(1) =~ '\<ksh\>'
                             let b:is_kornshell = 1
    3              0.000018 elseif getline(1) =~ '\<bash\>'
                             let b:is_bash      = 1
    3              0.000013 elseif getline(1) =~ '\<dash\>'
                             let b:is_dash      = 1
    3              0.000025 elseif !exists("g:is_kornshell") && !exists("g:is_bash") && !exists("g:is_posix") && !exists("g:is_sh") && !exists("g:is_dash")
                             " user did not specify which shell to use, and 
                             " the script itself does not specify which shell to use. FYI: /bin/sh is ambiguous.
                             " Assuming /bin/sh is executable, and if its a link, find out what it links to.
    3              0.000009  let s:shell = ""
    3              0.001739  if executable("/bin/sh")
                              let s:shell = resolve("/bin/sh")
    3              0.001878  elseif executable("/usr/bin/sh")
                              let s:shell = resolve("/usr/bin/sh")
    3              0.000004  endif
    3              0.000024  if     s:shell =~ '\<ksh\>'
                              let b:is_kornshell= 1
    3              0.000012  elseif s:shell =~ '\<bash\>'
                              let b:is_bash = 1
    3              0.000010  elseif s:shell =~ '\<dash\>'
                              let b:is_dash = 1
    3              0.000002  endif
    3              0.000007  unlet s:shell
    3              0.000002 endif
                            
                            " handling /bin/sh with is_kornshell/is_sh {{{1
                            " b:is_sh will be set when "#! /bin/sh" is found;
                            " However, it often is just a masquerade by bash (typically Linux)
                            " or kornshell (typically workstations with Posix "sh").
                            " So, when the user sets "g:is_bash", "g:is_kornshell",
                            " or "g:is_posix", a b:is_sh is converted into b:is_bash/b:is_kornshell,
                            " respectively.
    3              0.000020 if !exists("b:is_kornshell") && !exists("b:is_bash") && !exists("b:is_dash")
    3              0.000010   if exists("g:is_posix") && !exists("g:is_kornshell")
                               let g:is_kornshell= g:is_posix
    3              0.000002   endif
    3              0.000006   if exists("g:is_kornshell")
                                let b:is_kornshell= 1
                                if exists("b:is_sh")
                                  unlet b:is_sh
                                endif
    3              0.000006   elseif exists("g:is_bash")
                                let b:is_bash= 1
                                if exists("b:is_sh")
                                  unlet b:is_sh
                                endif
    3              0.000006   elseif exists("g:is_dash")
                                let b:is_dash= 1
                                if exists("b:is_sh")
                                  unlet b:is_sh
                                endif
    3              0.000002   else
    3              0.000006     let b:is_sh= 1
    3              0.000002   endif
    3              0.000002 endif
                            
                            " if b:is_dash, set b:is_posix too
    3              0.000006 if exists("b:is_dash")
                             let b:is_posix= 1
    3              0.000002 endif
                            
                            " set up default g:sh_fold_enabled {{{1
                            " ================================
    3              0.000007 if !exists("g:sh_fold_enabled")
    1              0.000002  let g:sh_fold_enabled= 0
    2              0.000005 elseif g:sh_fold_enabled != 0 && !has("folding")
                             let g:sh_fold_enabled= 0
                             echomsg "Ignoring g:sh_fold_enabled=".g:sh_fold_enabled."; need to re-compile vim for +fold support"
    3              0.000002 endif
    3              0.000008 if !exists("s:sh_fold_functions")
    1              0.000003  let s:sh_fold_functions= and(g:sh_fold_enabled,1)
    3              0.000020 endif
    3              0.000010 if !exists("s:sh_fold_heredoc")
    1              0.000004  let s:sh_fold_heredoc  = and(g:sh_fold_enabled,2)
    3              0.000002 endif
    3              0.000006 if !exists("s:sh_fold_ifdofor")
    1              0.000003  let s:sh_fold_ifdofor  = and(g:sh_fold_enabled,4)
    3              0.000002 endif
    3              0.000006 if g:sh_fold_enabled && &fdm == "manual"
                             " Given that	the	user provided g:sh_fold_enabled
                             " 	AND	g:sh_fold_enabled is manual (usual default)
                             " 	implies	a desire for syntax-based folding
                             setl fdm=syntax
    3              0.000002 endif
                            
                            " set up the syntax-highlighting for iskeyword
    3              0.000012 if (v:version == 704 && has("patch-7.4.1142")) || v:version > 704
    3              0.000012  if !exists("g:sh_syntax_isk") || (exists("g:sh_syntax_isk") && g:sh_syntax_isk)
    3              0.000006   if exists("b:is_bash")
                               exe "syn iskeyword ".&iskeyword.",-,:"
    3              0.000002   else
    3              0.000052    exe "syn iskeyword ".&iskeyword.",-"
    3              0.000002   endif
    3              0.000002  endif
    3              0.000001 endif
                            
                            " Set up folding commands for shell {{{1
                            " =================================
    3              0.000004 if s:sh_fold_functions
                             com! -nargs=* ShFoldFunctions <args> fold
    3              0.000002 else
    3              0.000056  com! -nargs=* ShFoldFunctions <args>
    3              0.000002 endif
    3              0.000004 if s:sh_fold_heredoc
                             com! -nargs=* ShFoldHereDoc <args> fold
    3              0.000002 else
    3              0.000021  com! -nargs=* ShFoldHereDoc <args>
    3              0.000002 endif
    3              0.000060 if s:sh_fold_ifdofor
                             com! -nargs=* ShFoldIfDoFor <args> fold
    3              0.000002 else
    3              0.000022  com! -nargs=* ShFoldIfDoFor <args>
    3              0.000002 endif
                            
                            " sh syntax is case sensitive {{{1
    3              0.000005 syn case match
                            
                            " Clusters: contains=@... clusters {{{1
                            "==================================
    3              0.000051 syn cluster shErrorList	contains=shDoError,shIfError,shInError,shCaseError,shEsacError,shCurlyError,shParenError,shTestError,shOK
    3              0.000013 if exists("b:is_kornshell") || exists("b:is_bash")
                             syn cluster ErrorList add=shDTestError
    3              0.000009 endif
    3              0.000223 syn cluster shArithParenList	contains=shArithmetic,shArithParen,shCaseEsac,shComment,shDeref,shDo,shDerefSimple,shEcho,shEscape,shNumber,shOperator,shPosnParm,shExSingleQuote,shExDoubleQuote,shHereString,shRedir,shSingleQuote,shDoubleQuote,shStatement,shVariable,shAlias,shTest,shCtrlSeq,shSpecial,shParen,bashSpecialVariables,bashStatement,shIf,shFor,shFunctionKey,shFunctionOne,shFunctionTwo
    3              0.000030 syn cluster shArithList	contains=@shArithParenList,shParenError
    3              0.000067 syn cluster shCaseEsacList	contains=shCaseStart,shCaseLabel,shCase,shCaseBar,shCaseIn,shComment,shDeref,shDerefSimple,shCaseCommandSub,shCaseExSingleQuote,shCaseSingleQuote,shCaseDoubleQuote,shCtrlSeq,@shErrorList,shStringSpecial,shCaseRange
    3              0.000059 syn cluster shCaseList	contains=@shCommandSubList,shCaseEsac,shColon,shCommandSub,shCommandSubBQ,shComment,shDblBrace,shDo,shEcho,shExpr,shFor,shHereDoc,shIf,shHereString,shRedir,shSetList,shSource,shStatement,shVariable,shCtrlSeq
    3              0.000018 if exists("b:is_kornshell") || exists("b:is_bash")
                             syn cluster shCaseList	add=shForPP
    3              0.000008 endif
    3              0.000073 syn cluster shCommandSubList	contains=shAlias,shArithmetic,shCmdParenRegion,shCommandSub,shComment,shCtrlSeq,shDeref,shDerefSimple,shDoubleQuote,shEcho,shEscape,shExDoubleQuote,shExpr,shExSingleQuote,shHereDoc,shNumber,shOperator,shOption,shPosnParm,shHereString,shRedir,shSingleQuote,shSpecial,shStatement,shSubSh,shTest,shVariable
    3              0.000019 syn cluster shCurlyList	contains=shNumber,shComma,shDeref,shDerefSimple,shDerefSpecial
                            " COMBAK: removing shEscape from shDblQuoteList fails ksh04:43 -- Jun 09, 2022: I don't see the problem with ksh04, so am reinstating shEscape
    3              0.000029 syn cluster shDblQuoteList	contains=shArithmetic,shCommandSub,shCommandSubBQ,shDeref,shDerefSimple,shEscape,shPosnParm,shCtrlSeq,shSpecial,shSpecialDQ
    3              0.000024 syn cluster shDerefList	contains=shDeref,shDerefSimple,shDerefVar,shDerefSpecial,shDerefWordError,shDerefPSR,shDerefPPS
    3              0.000020 syn cluster shDerefVarList	contains=shDerefOffset,shDerefOp,shDerefVarArray,shDerefOpError
    3              0.000035 syn cluster shEchoList	contains=shArithmetic,shCommandSub,shCommandSubBQ,shDeref,shDerefSimple,shEscape,shExSingleQuote,shExDoubleQuote,shSingleQuote,shDoubleQuote,shCtrlSeq,shEchoQuote
    3              0.000032 syn cluster shExprList1	contains=shCharClass,shNumber,shOperator,shExSingleQuote,shExDoubleQuote,shSingleQuote,shDoubleQuote,shExpr,shDblBrace,shDeref,shDerefSimple,shCtrlSeq
    3              0.000018 syn cluster shExprList2	contains=@shExprList1,@shCaseList,shTest
    3              0.000046 syn cluster shFunctionList	contains=@shCommandSubList,shCaseEsac,shColon,shComment,shDo,shEcho,shExpr,shFor,shHereDoc,shIf,shOption,shHereString,shRedir,shSetList,shSource,shStatement,shVariable,shOperator,shCtrlSeq
    3              0.000011 if exists("b:is_kornshell") || exists("b:is_bash")
                             syn cluster shFunctionList	add=shRepeat,shDblBrace,shDblParen,shForPP
                             syn cluster shDerefList	add=shCommandSubList,shEchoDeref
    3              0.000003 endif
    3              0.000015 syn cluster shHereBeginList	contains=@shCommandSubList
    3              0.000015 syn cluster shHereList	contains=shBeginHere,shHerePayload
    3              0.000020 syn cluster shHereListDQ	contains=shBeginHere,@shDblQuoteList,shHerePayload
    3              0.000055 syn cluster shIdList	contains=shArithmetic,shCommandSub,shCommandSubBQ,shWrapLineOperator,shSetOption,shComment,shDeref,shDerefSimple,shHereString,shNumber,shOperator,shRedir,shExSingleQuote,shExDoubleQuote,shSingleQuote,shDoubleQuote,shExpr,shCtrlSeq,shStringSpecial,shAtExpr
    3              0.000025 syn cluster shIfList	contains=@shLoopList,shDblBrace,shDblParen,shFunctionKey,shFunctionOne,shFunctionTwo
    3              0.000034 syn cluster shLoopList	contains=@shCaseList,@shErrorList,shCaseEsac,shConditional,shDblBrace,shExpr,shFor,shIf,shOption,shSet,shTest,shTestOpr,shTouch
    3              0.000010 if exists("b:is_kornshell") || exists("b:is_bash")
                             syn cluster shLoopoList	add=shForPP
    3              0.000035 endif
    3              0.000070 syn cluster shPPSLeftList	contains=shAlias,shArithmetic,shCmdParenRegion,shCommandSub,shCtrlSeq,shDeref,shDerefSimple,shDoubleQuote,shEcho,shEscape,shExDoubleQuote,shExpr,shExSingleQuote,shHereDoc,shNumber,shOperator,shOption,shPosnParm,shHereString,shRedir,shSingleQuote,shSpecial,shStatement,shSubSh,shTest,shVariable
    3              0.000019 syn cluster shPPSRightList	contains=shComment,shDeref,shDerefSimple,shEscape,shPosnParm
    3              0.000048 syn cluster shSubShList	contains=@shCommandSubList,shCommandSubBQ,shCaseEsac,shColon,shCommandSub,shComment,shDo,shEcho,shExpr,shFor,shIf,shHereString,shRedir,shSetList,shSource,shStatement,shVariable,shCtrlSeq,shOperator
    3              0.000043 syn cluster shTestList	contains=shArithmetic,shCharClass,shCommandSub,shCommandSubBQ,shCtrlSeq,shDeref,shDerefSimple,shDoubleQuote,shSpecialDQ,shExDoubleQuote,shExpr,shExSingleQuote,shNumber,shOperator,shSingleQuote,shTest,shTestOpr
    3              0.000013 syn cluster shNoZSList	contains=shSpecialNoZS
    3              0.000021 syn cluster shForList	contains=shTestOpr,shNumber,shDerefSimple,shDeref,shCommandSub,shCommandSubBQ,shArithmetic
                            
                            " Echo: {{{1
                            " ====
                            " This one is needed INSIDE a CommandSub, so that `echo bla` be correct
    3              0.000087 syn region shEcho matchgroup=shStatement start="\<echo\>"  skip="\\$" matchgroup=shEchoDelim end="$" matchgroup=NONE end="[<>;&|()`]"me=e-1 end="\d[<>]"me=e-2 end="#"me=e-1 contains=@shEchoList skipwhite nextgroup=shQuickComment
    3              0.000173 syn region shEcho matchgroup=shStatement start="\<print\>" skip="\\$" matchgroup=shEchoDelim end="$" matchgroup=NONE end="[<>;&|()`]"me=e-1 end="\d[<>]"me=e-2 end="#"me=e-1 contains=@shEchoList skipwhite nextgroup=shQuickComment
    3              0.000025 if exists("b:is_kornshell") || exists("b:is_bash") || exists("b:is_posix")
                             syn region shEchoDeref contained matchgroup=shStatement start="\<echo\>"  skip="\\$" matchgroup=shEchoDelim end="$" end="[<>;&|()`}]"me=e-1 end="\d[<>]"me=e-2 end="#"me=e-1 contains=@shEchoList skipwhite nextgroup=shQuickComment
                             syn region shEchoDeref contained matchgroup=shStatement start="\<print\>" skip="\\$" matchgroup=shEchoDelim end="$" end="[<>;&|()`}]"me=e-1 end="\d[<>]"me=e-2 end="#"me=e-1 contains=@shEchoList skipwhite nextgroup=shQuickComment
    3              0.000004 endif
    3              0.000033 syn match  shEchoQuote contained	'\%(\\\\\)*\\["`'()]'
                            
                            " This must be after the strings, so that ... \" will be correct
    3              0.000072 syn region shEmbeddedEcho contained matchgroup=shStatement start="\<print\>" skip="\\$" matchgroup=shEchoDelim end="$" matchgroup=NONE end="[<>;&|`)]"me=e-1 end="\d[<>]"me=e-2 end="\s#"me=e-2 contains=shNumber,shExSingleQuote,shSingleQuote,shDeref,shDerefSimple,shSpecialVar,shOperator,shExDoubleQuote,shDoubleQuote,shCharClass,shCtrlSeq
                            
                            " Alias: {{{1
                            " =====
    3              0.000017 if exists("b:is_kornshell") || exists("b:is_bash") || exists("b:is_posix")
                             syn match shStatement "\<alias\>"
                             syn region shAlias matchgroup=shStatement start="\<alias\>\s\+\(\h[-._[:alnum:]]\+\)\@="  skip="\\$" end="\>\|`"
                             syn region shAlias matchgroup=shStatement start="\<alias\>\s\+\(\h[-._[:alnum:]]\+=\)\@=" skip="\\$" end="="
                            
                             " Touch: {{{1
                             " =====
                             syn match shTouch	'\<touch\>[^;#]*'	skipwhite nextgroup=shComment contains=shTouchCmd,shDoubleQuote,shSingleQuote,shDeref,shDerefSimple
                             syn match shTouchCmd	'\<touch\>'		contained
    3              0.000003 endif
                            
                            " Error Codes: {{{1
                            " ============
    3              0.000010 if !exists("g:sh_no_error")
    3              0.000011  syn match   shDoError "\<done\>"
    3              0.000010  syn match   shIfError "\<fi\>"
    3              0.000009  syn match   shInError "\<in\>"
    3              0.000009  syn match   shCaseError ";;"
    3              0.000011  syn match   shEsacError "\<esac\>"
    3              0.000008  syn match   shCurlyError "}"
    3              0.000009  syn match   shParenError ")"
    3              0.000031  syn match   shOK	'\.\(done\|fi\|in\|esac\)'
    3              0.000013  if exists("b:is_kornshell") || exists("b:is_bash")
                              syn match     shDTestError "]]"
    3              0.000005  endif
    3              0.000032  syn match     shTestError "]"
    3              0.000003 endif
                            
                            " Options: {{{1
                            " ====================
    3              0.000020 syn match   shOption	"\s\zs[-+][-_a-zA-Z#@]\+"
    3              0.000015 syn match   shOption	"\s\zs--[^ \t$=`'"|);]\+"
                            
                            " File Redirection Highlighted As Operators: {{{1
                            "===========================================
    3              0.000014 syn match      shRedir	"\d\=>\(&[-0-9]\)\="
    3              0.000025 syn match      shRedir	"\d\=>>-\="
    3              0.000013 syn match      shRedir	"\d\=<\(&[-0-9]\)\="
    3              0.000010 syn match      shRedir	"\d<<-\="
                            
                            " Operators: {{{1
                            " ==========
    3              0.000053 syn match   shOperator	"<<\|>>"		contained
    3              0.000009 syn match   shOperator	"[!&;|]"		contained
    3              0.000012 syn match   shOperator	"\[[[^:]\|\]]"		contained
    3              0.000018 syn match   shOperator	"[-=/*+%]\=="		skipwhite nextgroup=shPattern
    3              0.000022 syn match   shPattern	"\<\S\+\())\)\@="	contained contains=shExSingleQuote,shSingleQuote,shExDoubleQuote,shDoubleQuote,shDeref
                            
                            " Subshells: {{{1
                            " ==========
    3              0.000027 syn region shExpr  transparent matchgroup=shExprRegion  start="{" end="}"		contains=@shExprList2 nextgroup=shSpecialNxt
    3              0.000023 syn region shSubSh transparent matchgroup=shSubShRegion start="[^(]\zs(" end=")"	contains=@shSubShList nextgroup=shSpecialNxt
                            
                            " Tests: {{{1
                            "=======
    3              0.000029 syn region shExpr	matchgroup=shRange start="\[" skip=+\\\\\|\\$\|\[+ end="\]" contains=@shTestList,shSpecial
    3              0.000039 syn region shTest	transparent matchgroup=shStatement start="\<test\s" skip=+\\\\\|\\$+ matchgroup=NONE end="[;&|]"me=e-1 end="$" contains=@shExprList1
    3              0.000032 syn region shNoQuote	start='\S'	skip='\%(\\\\\)*\\.'	end='\ze\s' end="\ze['"]"	contained contains=shDerefSimple,shDeref
    3              0.000013 syn match  shAstQuote	contained	'\*\ze"'	nextgroup=shString
    3              0.000020 syn match  shTestOpr	contained	'[^-+/%]\zs=' skipwhite nextgroup=shTestDoubleQuote,shTestSingleQuote,shTestPattern
    3              0.000053 syn match  shTestOpr	contained	"<=\|>=\|!=\|==\|=\~\|-.\>\|-\(nt\|ot\|ef\|eq\|ne\|lt\|le\|gt\|ge\)\>\|[!<>]"
    3              0.000015 syn match  shTestPattern	contained	'\w\+'
    3              0.000034 syn region shTestDoubleQuote	contained	start='\%(\%(\\\\\)*\\\)\@<!"' skip=+\\\\\|\\"+ end='"'	contains=shDeref,shDerefSimple,shDerefSpecial
    3              0.000010 syn match  shTestSingleQuote	contained	'\\.'	nextgroup=shTestSingleQuote
    3              0.000010 syn match  shTestSingleQuote	contained	"'[^']*'"
    3              0.000022 if exists("b:is_kornshell") || exists("b:is_bash")
                             syn region  shDblBrace matchgroup=Delimiter start="\[\["	skip=+\%(\\\\\)*\\$+ end="\]\]"	contains=@shTestList,shAstQuote,shNoQuote,shComment
                             syn region  shDblParen matchgroup=Delimiter start="(("	skip=+\%(\\\\\)*\\$+ end="))"	contains=@shTestList,shComment
    3              0.000003 endif
                            
                            " Character Class In Range: {{{1
                            " =========================
    3              0.000061 syn match   shCharClass	contained	"\[:\(backspace\|escape\|return\|xdigit\|alnum\|alpha\|blank\|cntrl\|digit\|graph\|lower\|print\|punct\|space\|upper\|tab\):\]"
                            
                            " Loops: do, if, while, until {{{1
                            " ======
    3              0.000051 ShFoldIfDoFor syn region shDo	transparent	matchgroup=shConditional start="\<do\>" matchgroup=shConditional end="\<done\>"			contains=@shLoopList
    3              0.000049 ShFoldIfDoFor syn region shIf	transparent	matchgroup=shConditional start="\<if\_s" matchgroup=shConditional skip=+-fi\>+ end="\<;\_s*then\>" end="\<fi\>"	contains=@shIfList
    3              0.000050 ShFoldIfDoFor syn region shFor		matchgroup=shLoop start="\<for\ze\_s\s*\%(((\)\@!" end="\<in\>" end="\<do\>"me=e-2			contains=@shLoopList,shDblParen skipwhite nextgroup=shCurlyIn
    3              0.000015 if exists("b:is_kornshell") || exists("b:is_bash")
                             ShFoldIfDoFor syn region shForPP	matchgroup=shLoop start='\<for\>\_s*((' end='))' contains=@shForList
    3              0.000002 endif
                            
    3              0.000014 if exists("b:is_kornshell") || exists("b:is_bash") || exists("b:is_posix")
                             syn cluster shCaseList	add=shRepeat
                             syn cluster shFunctionList	add=shRepeat
                             syn region shRepeat   matchgroup=shLoop   start="\<while\_s" end="\<do\>"me=e-2	contains=@shLoopList,shDblParen,shDblBrace
                             syn region shRepeat   matchgroup=shLoop   start="\<until\_s" end="\<do\>"me=e-2	contains=@shLoopList,shDblParen,shDblBrace
                             if !exists("b:is_posix")
                              syn region shCaseEsac matchgroup=shConditional start="\<select\s" matchgroup=shConditional end="\<in\>" end="\<do\>" contains=@shLoopList
                             endif
    3              0.000004 else
    3              0.000026  syn region shRepeat   matchgroup=shLoop   start="\<while\_s" end="\<do\>"me=e-2		contains=@shLoopList
    3              0.000046  syn region shRepeat   matchgroup=shLoop   start="\<until\_s" end="\<do\>"me=e-2		contains=@shLoopList
    3              0.000004 endif
    3              0.000019 syn region shCurlyIn   contained	matchgroup=Delimiter start="{" end="}" contains=@shCurlyList
    3              0.000007 syn match  shComma     contained	","
                            
                            " Case: case...esac {{{1
                            " ====
    3              0.000033 syn match shCaseBar	contained skipwhite "\(^\|[^\\]\)\(\\\\\)*\zs|"		nextgroup=shCase,shCaseStart,shCaseBar,shComment,shCaseExSingleQuote,shCaseSingleQuote,shCaseDoubleQuote
    3              0.000045 syn match shCaseStart	contained skipwhite skipnl "("			nextgroup=shCase,shCaseBar
    3              0.000022 syn match shCaseLabel	contained skipwhite	"\%(\\.\|[-a-zA-Z0-9_*.]\)\+"	contains=shCharClass
    3              0.000013 if exists("b:is_bash")
                             ShFoldIfDoFor syn region	shCase	contained skipwhite skipnl matchgroup=shSnglCase start="\%(\\.\|[^#$()'" \t]\)\{-}\zs)"  end=";;" end=";&" end=";;&" end="esac"me=s-1	contains=@shCaseList	nextgroup=shCaseStart,shCase,shComment
    3              0.000010 elseif exists("b:is_kornshell")
                             ShFoldIfDoFor syn region	shCase	contained skipwhite skipnl matchgroup=shSnglCase start="\%(\\.\|[^#$()'" \t]\)\{-}\zs)"  end=";;" end=";&" end="esac"me=s-1	contains=@shCaseList	nextgroup=shCaseStart,shCase,shComment
    3              0.000006 else                                                                                                                     
    3              0.000056  ShFoldIfDoFor syn region	shCase	contained skipwhite skipnl matchgroup=shSnglCase start="\%(\\.\|[^#$()'" \t]\)\{-}\zs)"  end=";;" end="esac"me=s-1		contains=@shCaseList	nextgroup=shCaseStart,shCase,shComment
    3              0.000004 endif
    3              0.000033 ShFoldIfDoFor syn region	shCaseEsac	matchgroup=shConditional start="\<case\>" end="\<esac\>"	contains=@shCaseEsacList
                            
    3              0.000023 syn keyword shCaseIn	contained skipwhite skipnl in			nextgroup=shCase,shCaseStart,shCaseBar,shComment,shCaseExSingleQuote,shCaseSingleQuote,shCaseDoubleQuote
    3              0.000014 if exists("b:is_bash") || exists("b:is_kornshell")
                             syn region  shCaseExSingleQuote	matchgroup=shQuote start=+\$'+ skip=+\\\\\|\\.+ end=+'+	contains=shStringSpecial,shSpecial	skipwhite skipnl nextgroup=shCaseBar	contained
    3              0.000010 elseif !exists("g:sh_no_error")
    3              0.000025  syn region  shCaseExSingleQuote	matchgroup=Error start=+\$'+ skip=+\\\\\|\\.+ end=+'+	contains=shStringSpecial	skipwhite skipnl nextgroup=shCaseBar	contained
    3              0.000004 endif
    3              0.000019 syn region  shCaseSingleQuote	matchgroup=shQuote start=+'+ end=+'+		contains=shStringSpecial		skipwhite skipnl nextgroup=shCaseBar	contained
    3              0.000028 syn region  shCaseDoubleQuote	matchgroup=shQuote start=+"+ skip=+\\\\\|\\.+ end=+"+	contains=@shDblQuoteList,shStringSpecial	skipwhite skipnl nextgroup=shCaseBar	contained
    3              0.000023 syn region  shCaseCommandSub	start=+`+ skip=+\\\\\|\\.+ end=+`+		contains=@shCommandSubList		skipwhite skipnl nextgroup=shCaseBar	contained
    3              0.000008 if exists("b:is_bash")
                             syn region  shCaseRange	matchgroup=Delimiter start=+\[+ skip=+\\\\+ end=+\]+	contained	contains=shCharClass
                             syn match   shCharClass	'\[:\%(alnum\|alpha\|ascii\|blank\|cntrl\|digit\|graph\|lower\|print\|punct\|space\|upper\|word\|or\|xdigit\):\]'			contained
    3              0.000005 else
    3              0.000025  syn region  shCaseRange	matchgroup=Delimiter start=+\[+ skip=+\\\\+ end=+\]+	contained
    3              0.000002 endif
                            " Misc: {{{1
                            "======
    3              0.000012 syn match   shWrapLineOperator "\\$"
    3              0.000027 syn region  shCommandSubBQ   	start="`" skip="\\\\\|\\." end="`"	contains=shBQComment,@shCommandSubList
                            "COMBAK: see ksh13:50
                            "syn match   shEscape	contained	'\%(^\)\@!\%(\\\\\)*\\.'	nextgroup=shSingleQuote,shDoubleQuote,shComment
                            "COMBAK: see sh11:27
    3              0.000016 syn match   shEscape	contained	'\%(^\)\@!\%(\\\\\)*\\.'	nextgroup=shComment
                            "COMBAK: see ksh13:53
                            "syn match   shEscape	contained	'\%(^\)\@!\%(\\\\\)*\\.'
                            
                            " $() and $(()): {{{1
                            " $(..) is not supported by sh (Bourne shell).  However, apparently
                            " some systems (HP?) have as their /bin/sh a (link to) Korn shell
                            " (ie. Posix compliant shell).  /bin/ksh should work for those
                            " systems too, however, so the following syntax will flag $(..) as
                            " an Error under /bin/sh.  By consensus of vimdev'ers!
    3              0.000019 if exists("b:is_kornshell") || exists("b:is_bash") || exists("b:is_posix")
                             syn region shCommandSub matchgroup=shCmdSubRegion start="\$(\ze[^(]"  skip='\\\\\|\\.' end=")"  contains=@shCommandSubList
                             syn region shArithmetic matchgroup=shArithRegion  start="\$((" skip='\\\\\|\\.' end="))" contains=@shArithList
                             syn region shArithmetic matchgroup=shArithRegion  start="\$\[" skip='\\\\\|\\.' end="\]" contains=@shArithList
                             syn match  shSkipInitWS contained	"^\s\+"
                             syn region shArithParen matchgroup=shArithRegion  contained start="(" end=")" contains=@shArithParenList
    3              0.000015 elseif !exists("g:sh_no_error")
    3              0.000034  syn region shCommandSub matchgroup=Error start="\$(" end=")" contains=@shCommandSubList
    3              0.000036 endif
    3              0.000033 syn region shCmdParenRegion matchgroup=shCmdSubRegion start="(\ze[^(]" skip='\\\\\|\\.' end=")" contains=@shCommandSubList
                            
    3              0.000011 if exists("b:is_bash")
                             syn cluster shCommandSubList add=bashSpecialVariables,bashStatement
                             syn cluster shCaseList add=bashAdminStatement,bashStatement
                             syn keyword bashSpecialVariables contained auto_resume BASH BASH_ALIASES BASH_ALIASES BASH_ARGC BASH_ARGC BASH_ARGV BASH_ARGV BASH_CMDS BASH_CMDS BASH_COMMAND BASH_COMMAND BASH_ENV BASH_EXECUTION_STRING BASH_EXECUTION_STRING BASH_LINENO BASH_LINENO BASHOPTS BASHOPTS BASHPID BASHPID BASH_REMATCH BASH_REMATCH BASH_SOURCE BASH_SOURCE BASH_SUBSHELL BASH_SUBSHELL BASH_VERSINFO BASH_VERSION BASH_XTRACEFD BASH_XTRACEFD CDPATH COLUMNS COLUMNS COMP_CWORD COMP_CWORD COMP_KEY COMP_KEY COMP_LINE COMP_LINE COMP_POINT COMP_POINT COMPREPLY COMPREPLY COMP_TYPE COMP_TYPE COMP_WORDBREAKS COMP_WORDBREAKS COMP_WORDS COMP_WORDS COPROC COPROC DIRSTACK EMACS EMACS ENV ENV EUID FCEDIT FIGNORE FUNCNAME FUNCNAME FUNCNEST FUNCNEST GLOBIGNORE GROUPS histchars HISTCMD HISTCONTROL HISTFILE HISTFILESIZE HISTIGNORE HISTSIZE HISTTIMEFORMAT HISTTIMEFORMAT HOME HOSTFILE HOSTNAME HOSTTYPE IFS IGNOREEOF INPUTRC LANG LC_ALL LC_COLLATE LC_CTYPE LC_CTYPE LC_MESSAGES LC_NUMERIC LC_NUMERIC LINENO LINES LINES MACHTYPE MAIL MAILCHECK MAILPATH MAPFILE
                             syn keyword bashStatement chmod clear complete du egrep expr fgrep find gnufind gnugrep grep head less ls mkdir mv rm rmdir rpm sed sleep sort strip tail
                             syn keyword bashAdminStatement daemon killall killproc nice reload restart start status stop
                             syn keyword bashStatement	command compgen
    3              0.000002 endif
                            
    3              0.000013 if exists("b:is_kornshell") || exists("b:is_posix")
                             syn cluster shCommandSubList add=kshSpecialVariables,kshStatement
                             syn cluster shCaseList add=kshStatement
                             syn keyword kshSpecialVariables contained CDPATH COLUMNS EDITOR ENV ERRNO FCEDIT FPATH HISTFILE HISTSIZE HOME IFS LINENO LINES MAIL MAILCHECK MAILPATH OLDPWD OPTARG OPTIND PATH PPID PS1 PS2 PS3 PS4 PWD RANDOM REPLY SECONDS SHELL TMOUT VISUAL
                             syn keyword kshStatement cat chmod clear cp du egrep expr fgrep find grep head killall less ls mkdir mv nice printenv rm rmdir sed sort strip stty tail tput
                             syn keyword kshStatement command setgroups setsenv
    3              0.000002 endif
                            
    3              0.000012 syn match   shSource	"^\.\s"
    3              0.000012 syn match   shSource	"\s\.\s"
                            "syn region  shColon	start="^\s*:" end="$" end="\s#"me=e-2 contains=@shColonList
                            "syn region  shColon	start="^\s*\zs:" end="$" end="\s#"me=e-2
    3              0.000011 if exists("b:is_kornshell") || exists("b:is_posix")
                             syn match   shColon	'^\s*\zs:'
    3              0.000003 endif
                            
                            " String And Character Constants: {{{1
                            "================================
    3              0.000015 syn match   shNumber	"\<\d\+\>#\="
    3              0.000015 syn match   shNumber	"\<-\=\.\=\d\+\>#\="
    3              0.000016 syn match   shCtrlSeq	"\\\d\d\d\|\\[abcfnrtv0]"			contained
    3              0.000013 if exists("b:is_bash") || exists("b:is_kornshell")
                             syn match   shSpecial	"[^\\]\(\\\\\)*\zs\\\o\o\o\|\\x\x\x\|\\c[^"]\|\\[abefnrtv]"	contained
                             syn match   shSpecial	"^\(\\\\\)*\zs\\\o\o\o\|\\x\x\x\|\\c[^"]\|\\[abefnrtv]"	contained
                             syn region  shExSingleQuote	matchgroup=shQuote start=+\$'+ skip=+\\\\\|\\.+ end=+'+	contains=shStringSpecial,shSpecial		nextgroup=shSpecialNxt
                             syn region  shExDoubleQuote	matchgroup=shQuote start=+\$"+ skip=+\\\\\|\\.\|\\"+ end=+"+	contains=@shDblQuoteList,shStringSpecial,shSpecial	nextgroup=shSpecialNxt
    3              0.000013 elseif !exists("g:sh_no_error")
    3              0.000030  syn region  shExSingleQuote	matchGroup=Error start=+\$'+ skip=+\\\\\|\\.+ end=+'+	contains=shStringSpecial
    3              0.000023  syn region  shExDoubleQuote	matchGroup=Error start=+\$"+ skip=+\\\\\|\\.+ end=+"+	contains=shStringSpecial
    3              0.000004 endif
    3              0.000036 syn region  shSingleQuote	matchgroup=shQuote start=+'+ end=+'+		contains=@Spell	nextgroup=shSpecialStart,shSpecialSQ
    3              0.000041 syn region  shDoubleQuote	matchgroup=shQuote start=+\%(\%(\\\\\)*\\\)\@<!"+ skip=+\\.+ end=+"+			contains=@shDblQuoteList,shStringSpecial,@Spell	nextgroup=shSpecialStart
    3              0.000048 syn match   shStringSpecial	"[^[:print:] \t]"			contained
    3              0.000030 syn match   shStringSpecial	"[^\\]\zs\%(\\\\\)*\(\\[\\"'`$()#]\)\+"			nextgroup=shComment
    3              0.000025 syn match   shSpecialSQ	"[^\\]\zs\%(\\\\\)*\(\\[\\"'`$()#]\)\+"		contained	nextgroup=shBkslshSnglQuote,@shNoZSList
    3              0.000021 syn match   shSpecialDQ	"[^\\]\zs\%(\\\\\)*\(\\[\\"'`$()#]\)\+"		contained	nextgroup=shBkslshDblQuote,@shNoZSList
    3              0.000020 syn match   shSpecialStart	"\%(\\\\\)*\\[\\"'`$()#]"			contained	nextgroup=shBkslshSnglQuote,shBkslshDblQuote,@shNoZSList
    3              0.000016 syn match   shSpecial	"^\%(\\\\\)*\\[\\"'`$()#]"
    3              0.000025 syn match   shSpecialNoZS	contained	"\%(\\\\\)*\\[\\"'`$()#]"
    3              0.000200 syn match   shSpecialNxt	contained	"\\[\\"'`$()#]"
                            "syn region  shBkslshSnglQuote	contained	matchgroup=shQuote start=+'+ end=+'+	contains=@Spell	nextgroup=shSpecialStart
                            "syn region  shBkslshDblQuote	contained	matchgroup=shQuote start=+"+ skip=+\\"+ end=+"+	contains=@shDblQuoteList,shStringSpecial,@Spell	nextgroup=shSpecialStart
                            
                            " Comments: {{{1
                            "==========
    3              0.000022 syn cluster	shCommentGroup	contains=shTodo,@Spell
    3              0.000013 if exists("b:is_bash")
                             syn match	shTodo	contained		"\<\%(COMBAK\|FIXME\|TODO\|XXX\)\ze:\=\>"
    3              0.000004 else
    3              0.000014  syn keyword	shTodo	contained		COMBAK FIXME TODO XXX
    3              0.000003 endif
    3              0.000020 syn match	shComment		"^\s*\zs#.*$"	contains=@shCommentGroup
    3              0.000015 syn match	shComment		"\s\zs#.*$"	contains=@shCommentGroup
    3              0.000011 syn match	shComment	contained	"#.*$"	contains=@shCommentGroup
    3              0.000011 syn match	shQuickComment	contained	"#.*$"          contains=@shCommentGroup
    3              0.000014 syn match	shBQComment	contained	"#.\{-}\ze`"	contains=@shCommentGroup
                            
                            " Here Documents: {{{1
                            "  (modified by Felipe Contreras)
                            " =========================================
    3              0.000066 ShFoldHereDoc syn region shHereDoc matchgroup=shHereDoc01 start="<<\s*\z([^ \t|>]\+\)"		matchgroup=shHereDoc01 end="^\z1\s*$"	contains=@shDblQuoteList
    3              0.000043 ShFoldHereDoc syn region shHereDoc matchgroup=shHereDoc02 start="<<-\s*\z([^ \t|>]\+\)"		matchgroup=shHereDoc02 end="^\s*\z1\s*$"	contains=@shDblQuoteList
    3              0.000045 ShFoldHereDoc syn region shHereDoc matchgroup=shHereDoc03 start="<<\s*\\\z([^ \t|>]\+\)"		matchgroup=shHereDoc03 end="^\z1\s*$"
    3              0.000035 ShFoldHereDoc syn region shHereDoc matchgroup=shHereDoc04 start="<<-\s*\\\z([^ \t|>]\+\)"		matchgroup=shHereDoc04 end="^\s*\z1\s*$"
    3              0.000034 ShFoldHereDoc syn region shHereDoc matchgroup=shHereDoc05 start="<<\s*'\z([^']\+\)'"		matchgroup=shHereDoc05 end="^\z1\s*$"
    3              0.000034 ShFoldHereDoc syn region shHereDoc matchgroup=shHereDoc06 start="<<-\s*'\z([^']\+\)'"		matchgroup=shHereDoc06 end="^\s*\z1\s*$"
    3              0.000034 ShFoldHereDoc syn region shHereDoc matchgroup=shHereDoc07 start="<<\s*\"\z([^"]\+\)\""		matchgroup=shHereDoc07 end="^\z1\s*$"
    3              0.000032 ShFoldHereDoc syn region shHereDoc matchgroup=shHereDoc08 start="<<-\s*\"\z([^"]\+\)\""		matchgroup=shHereDoc08 end="^\s*\z1\s*$"
    3              0.000041 ShFoldHereDoc syn region shHereDoc matchgroup=shHereDoc09 start="<<\s*\\\_$\_s*\z([^ \t|>]\+\)"		matchgroup=shHereDoc09 end="^\z1\s*$"	contains=@shDblQuoteList
    3              0.000039 ShFoldHereDoc syn region shHereDoc matchgroup=shHereDoc10 start="<<-\s*\\\_$\_s*\z([^ \t|>]\+\)"	matchgroup=shHereDoc10 end="^\s*\z1\s*$"	contains=@shDblQuoteList
    3              0.000033 ShFoldHereDoc syn region shHereDoc matchgroup=shHereDoc11 start="<<\s*\\\_$\_s*\\\z([^ \t|>]\+\)"	matchgroup=shHereDoc11 end="^\z1\s*$"
    3              0.000034 ShFoldHereDoc syn region shHereDoc matchgroup=shHereDoc12 start="<<-\s*\\\_$\_s*\\\z([^ \t|>]\+\)"	matchgroup=shHereDoc12 end="^\s*\z1\s*$"
    3              0.000034 ShFoldHereDoc syn region shHereDoc matchgroup=shHereDoc13 start="<<\s*\\\_$\_s*'\z([^']\+\)'"		matchgroup=shHereDoc13 end="^\z1\s*$"
    3              0.000034 ShFoldHereDoc syn region shHereDoc matchgroup=shHereDoc14 start="<<-\s*\\\_$\_s*'\z([^']\+\)'"		matchgroup=shHereDoc14 end="^\s*\z1\s*$"
    3              0.000032 ShFoldHereDoc syn region shHereDoc matchgroup=shHereDoc15 start="<<\s*\\\_$\_s*\"\z([^"]\+\)\""		matchgroup=shHereDoc15 end="^\z1\s*$"
    3              0.000031 ShFoldHereDoc syn region shHereDoc matchgroup=shHereDoc16 start="<<-\s*\\\_$\_s*\"\z([^"]\+\)\""	matchgroup=shHereDoc16 end="^\s*\z1\s*$"
                            
                            
                            " Here Strings: {{{1
                            " =============
                            " available for: bash; ksh (really should be ksh93 only) but not if its a posix
    3              0.000019 if exists("b:is_bash") || (exists("b:is_kornshell") && !exists("b:is_posix"))
                             syn match shHereString "<<<"	skipwhite	nextgroup=shCmdParenRegion
    3              0.000005 endif
                            
                            " Identifiers: {{{1
                            "=============
    3              0.000026 syn match  shSetOption	"\s\zs[-+][a-zA-Z0-9]\+\>"	contained
    3              0.000021 syn match  shVariable	"\<\h\w*\ze="			nextgroup=shVarAssign
    3              0.000031 syn match  shVarAssign	"="		contained	nextgroup=shCmdParenRegion,shPattern,shDeref,shDerefSimple,shDoubleQuote,shExDoubleQuote,shSingleQuote,shExSingleQuote,shVar
    3              0.000008 syn match  shVar	contained	"\h\w*"
    3              0.000019 syn region shAtExpr	contained	start="@(" end=")" contains=@shIdList
    3              0.000012 if exists("b:is_bash")
                             syn match  shSet "^\s*set\ze\s\+$"
                             syn region shSetList oneline matchgroup=shSet start="\<\%(declare\|local\|export\)\>\ze[/a-zA-Z_]\@!" end="$"		matchgroup=shSetListDelim end="\ze[}|);&]" matchgroup=NONE end="\ze\s\+#\|="	contains=@shIdList
                             syn region shSetList oneline matchgroup=shSet start="\<\%(set\|unset\)\>[/a-zA-Z_]\@!" end="\ze[;|#)]\|$"		matchgroup=shSetListDelim end="\ze[}|);&]" matchgroup=NONE end="\ze\s\+="	contains=@shIdList nextgroup=shComment
    3              0.000014 elseif exists("b:is_kornshell") || exists("b:is_posix")
                             syn match  shSet "^\s*set\ze\s\+$"
                             if exists("b:is_dash")
                              syn region shSetList oneline matchgroup=shSet start="\<\%(local\)\>\ze[/]\@!" end="$"			matchgroup=shSetListDelim end="\ze[}|);&]" matchgroup=NONE end="\ze\s\+[#=]"	contains=@shIdList
                             endif
                             syn region shSetList oneline matchgroup=shSet start="\<\(export\)\>\ze[/]\@!" end="$"			matchgroup=shSetListDelim end="\ze[}|);&]" matchgroup=NONE end="\ze\s\+[#=]"	contains=@shIdList
                             syn region shSetList oneline matchgroup=shSet start="\<\%(set\|unset\>\)\ze[/a-zA-Z_]\@!" end="\ze[;|#)]\|$"		matchgroup=shSetListDelim end="\ze[}|);&]" matchgroup=NONE end="\ze\s\+[#=]"	contains=@shIdList nextgroup=shComment
    3              0.000021 else
    3              0.000064  syn region shSetList oneline matchgroup=shSet start="\<\(set\|export\|unset\)\>\ze[/a-zA-Z_]\@!" end="\ze[;|#)]\|$"	matchgroup=shSetListDelim end="\ze[}|);&]" matchgroup=NONE end="\ze\s\+[#=]"	contains=@shIdList
    3              0.000003 endif
                            
                            " KornShell namespace: {{{1
    3              0.000013 if exists("b:is_kornshell")
                             syn keyword shFunctionKey namespace skipwhite skipnl nextgroup=shFunctionTwo
    3              0.000002 endif
                            
                            " Functions: {{{1
    3              0.000008 if !exists("b:is_posix")
    3              0.000014  syn keyword shFunctionKey function	skipwhite skipnl nextgroup=shFunctionTwo
    3              0.000002 endif
                            
    3              0.000008 if exists("b:is_bash")
                             ShFoldFunctions syn region shFunctionOne	matchgroup=shFunction start="^\s*[A-Za-z_0-9:][-a-zA-Z_0-9:]*\s*()\_s*{"		end="}"	contains=@shFunctionList		 skipwhite skipnl nextgroup=shFunctionStart,shQuickComment
                             ShFoldFunctions syn region shFunctionTwo	matchgroup=shFunction start="\%(do\)\@!\&\<[A-Za-z_0-9:][-a-zA-Z_0-9:]*\>\s*\%(()\)\=\_s*{"	end="}"	contains=shFunctionKey,@shFunctionList contained skipwhite skipnl nextgroup=shFunctionStart,shQuickComment
                             ShFoldFunctions syn region shFunctionThree	matchgroup=shFunction start="^\s*[A-Za-z_0-9:][-a-zA-Z_0-9:]*\s*()\_s*("		end=")"	contains=@shFunctionList		 skipwhite skipnl nextgroup=shFunctionStart,shQuickComment
                             ShFoldFunctions syn region shFunctionFour	matchgroup=shFunction start="\%(do\)\@!\&\<[A-Za-z_0-9:][-a-zA-Z_0-9:]*\>\s*\%(()\)\=\_s*)"	end=")"	contains=shFunctionKey,@shFunctionList contained skipwhite skipnl nextgroup=shFunctionStart,shQuickComment
    3              0.000005 else
    3              0.000062  ShFoldFunctions syn region shFunctionOne	matchgroup=shFunction start="^\s*\h\w*\s*()\_s*{"			end="}"	contains=@shFunctionList		 skipwhite skipnl nextgroup=shFunctionStart,shQuickComment
    3              0.000060  ShFoldFunctions syn region shFunctionTwo	matchgroup=shFunction start="\%(do\)\@!\&\<\h\w*\>\s*\%(()\)\=\_s*{"		end="}"	contains=shFunctionKey,@shFunctionList contained skipwhite skipnl nextgroup=shFunctionStart,shQuickComment
    3              0.000044  ShFoldFunctions syn region shFunctionThree	matchgroup=shFunction start="^\s*\h\w*\s*()\_s*("			end=")"	contains=@shFunctionList		 skipwhite skipnl nextgroup=shFunctionStart,shQuickComment
    3              0.000043  ShFoldFunctions syn region shFunctionFour	matchgroup=shFunction start="\%(do\)\@!\&\<\h\w*\>\s*\%(()\)\=\_s*("		end=")"	contains=shFunctionKey,@shFunctionList contained skipwhite skipnl nextgroup=shFunctionStart,shQuickComment
    3              0.000002 endif
                            
                            " Parameter Dereferencing: {{{1
                            " ========================
    3              0.000054 if !exists("g:sh_no_error") && !(exists("b:is_bash") || exists("b:is_kornshell") || exists("b:is_posix"))
    3              0.000013  syn match  shDerefWordError	"[^}$[~]"	contained
    3              0.000003 endif
    3              0.000020 syn match  shDerefSimple	"\$\%(\h\w*\|\d\)"	nextgroup=@shNoZSList
    3              0.000028 syn region shDeref	matchgroup=PreProc start="\${" end="}"	contains=@shDerefList,shDerefVarArray nextgroup=shSpecialStart
    3              0.000016 syn match  shDerefSimple	"\$[-#*@!?]"	nextgroup=@shNoZSList
    3              0.000013 syn match  shDerefSimple	"\$\$"	nextgroup=@shNoZSList
    3              0.000017 syn match  shDerefSimple	"\${\d}"	nextgroup=@shNoZSList	nextgroup=shSpecialStart
    3              0.000016 if exists("b:is_bash") || exists("b:is_kornshell") || exists("b:is_posix")
                             syn region shDeref	matchgroup=PreProc start="\${##\=" end="}"	contains=@shDerefList	nextgroup=@shSpecialNoZS,shSpecialStart
                             syn region shDeref	matchgroup=PreProc start="\${\$\$" end="}"	contains=@shDerefList	nextgroup=@shSpecialNoZS,shSpecialStart
    3              0.000002 endif
                            
                            " ksh: ${.sh.*} variables: {{{1
                            " ========================================
    3              0.000008 if exists("b:is_kornshell")
                            " syn match  shDerefVar	contained	"[.]*"	nextgroup=@shDerefVarList
                             syn match  shDerefVar	contained	"\.\+"	nextgroup=@shDerefVarList
    3              0.000002 endif
                            
                            " ksh: ${!var[*]} array index list syntax: {{{1
                            " ========================================
    3              0.000011 if exists("b:is_kornshell") || exists("b:is_posix")
                             syn region shDeref	matchgroup=PreProc start="\${!" end="}"	contains=@shDerefVarArray
    3              0.000002 endif
                            
                            " bash: ${!prefix*} and ${#parameter}: {{{1
                            " ====================================
    3              0.000007 if exists("b:is_bash")
                             syn region shDeref	matchgroup=PreProc start="\${!" end="\*\=}"	contains=@shDerefList,shDerefOffset
                             syn match  shDerefVar	contained	"{\@<=!\h\w*"		nextgroup=@shDerefVarList
    3              0.000005 endif
    3              0.000011 if exists("b:is_kornshell")
                             syn match  shDerefVar	contained	"{\@<=!\h\w*[[:alnum:]_.]*"	nextgroup=@shDerefVarList
    3              0.000002 endif
                            
    3              0.000021 syn match  shDerefSpecial	contained	"{\@<=[-*@?0]"		nextgroup=shDerefOp,shDerefOffset,shDerefOpError
    3              0.000021 syn match  shDerefSpecial	contained	"\({[#!]\)\@<=[[:alnum:]*@_]\+"	nextgroup=@shDerefVarList,shDerefOp
    3              0.000013 syn match  shDerefVar	contained	"{\@<=\h\w*"		nextgroup=@shDerefVarList
    3              0.000010 syn match  shDerefVar	contained	'\d'                            nextgroup=@shDerefVarList
    3              0.000013 if exists("b:is_kornshell") || exists("b:is_posix")
                              syn match  shDerefVar	contained	"{\@<=\h\w*[[:alnum:]_.]*"	nextgroup=@shDerefVarList
    3              0.000002 endif
                            
                            " sh ksh bash : ${var[... ]...}  array reference: {{{1
    3              0.000024 syn region  shDerefVarArray   contained	matchgroup=shDeref start="\[" end="]"	contains=@shCommandSubList nextgroup=shDerefOp,shDerefOpError
                            
                            " Special ${parameter OPERATOR word} handling: {{{1
                            " sh ksh bash : ${parameter:-word}    word is default value
                            " sh ksh bash : ${parameter:=word}    assign word as default value
                            " sh ksh bash : ${parameter:?word}    display word if parameter is null
                            " sh ksh bash : ${parameter:+word}    use word if parameter is not null, otherwise nothing
                            "    ksh bash : ${parameter#pattern}  remove small left  pattern
                            "    ksh bash : ${parameter##pattern} remove large left  pattern
                            "    ksh bash : ${parameter%pattern}  remove small right pattern
                            "    ksh bash : ${parameter%%pattern} remove large right pattern
                            "        bash : ${parameter^pattern}  Case modification
                            "        bash : ${parameter^^pattern} Case modification
                            "        bash : ${parameter,pattern}  Case modification
                            "        bash : ${parameter,,pattern} Case modification
                            "        bash : ${@:start:qty}        display command line arguments from start to start+qty-1 (inferred)
    3              0.000018 syn cluster shDerefPatternList	contains=shDerefPattern,shDerefString
    3              0.000008 if !exists("g:sh_no_error")
    3              0.000010  syn match shDerefOpError	contained	":[[:punct:]]"
    3              0.000003 endif
    3              0.000013 syn match  shDerefOp	contained	":\=[-=?]"	nextgroup=@shDerefPatternList
    3              0.000010 syn match  shDerefOp	contained	":\=+"	nextgroup=@shDerefPatternList
    3              0.000015 if exists("b:is_bash") || exists("b:is_kornshell") || exists("b:is_posix")
                             syn match  shDerefOp	contained	"#\{1,2}"		nextgroup=@shDerefPatternList
                             syn match  shDerefOp	contained	"%\{1,2}"		nextgroup=@shDerefPatternList
                             syn match  shDerefPattern	contained	"[^{}]\+"		contains=shDeref,shDerefSimple,shDerefPattern,shDerefString,shCommandSub,shDerefEscape nextgroup=shDerefPattern
                             syn region shDerefPattern	contained	start="{" end="}"	contains=shDeref,shDerefSimple,shDerefString,shCommandSub nextgroup=shDerefPattern
                             syn match  shDerefEscape	contained	'\%(\\\\\)*\\.'
    3              0.000005 endif
    3              0.000012 if exists("b:is_bash")
                             syn match  shDerefOp	contained	"[,^]\{1,2}"	nextgroup=@shDerefPatternList
    3              0.000004 endif
    3              0.000028 syn region shDerefString	contained	matchgroup=shDerefDelim start=+\%(\\\)\@<!'+ end=+'+	contains=shStringSpecial
    3              0.000030 syn region shDerefString	contained	matchgroup=shDerefDelim start=+\%(\\\)\@<!"+ skip=+\\"+ end=+"+	contains=@shDblQuoteList,shStringSpecial
    3              0.000014 syn match  shDerefString	contained	"\\["']"	nextgroup=shDerefPattern
                            
    3              0.000016 if exists("b:is_bash") || exists("b:is_kornshell") || exists("b:is_posix")
                             " bash ksh posix : ${parameter:offset}
                             " bash ksh posix : ${parameter:offset:length}
                             syn region shDerefOffset	contained	start=':[^-=?+]' end='\ze:'	end='\ze}'	contains=shDeref,shDerefSimple,shDerefEscape	nextgroup=shDerefLen,shDeref,shDerefSimple
                             syn region shDerefOffset	contained	start=':\s-'	end='\ze:'	end='\ze}'	contains=shDeref,shDerefSimple,shDerefEscape	nextgroup=shDerefLen,shDeref,shDerefSimple
                             syn match  shDerefLen	contained	":[^}]\+"	contains=shDeref,shDerefSimple,shArithmetic
    3              0.000004 endif
                            
    3              0.000010 if exists("b:is_bash")
                             " bash : ${parameter//pattern/string}
                             " bash : ${parameter//pattern}
                             syn match  shDerefPPS	contained	'/\{1,2}'	nextgroup=shDerefPPSleft
                             syn region shDerefPPSleft	contained	start='.'	skip=@\%(\\\\\)*\\/@ matchgroup=shDerefOp	end='/' end='\ze}' end='"'	nextgroup=shDerefPPSright	contains=@shPPSLeftList
                             syn region shDerefPPSright	contained	start='.'	skip=@\%(\\\\\)\+@		end='\ze}'				contains=@shPPSRightList
                            
                             " bash : ${parameter/#substring/replacement}
                             syn match  shDerefPSR	contained	'/#'	nextgroup=shDerefPSRleft,shDoubleQuote,shSingleQuote
                             syn region shDerefPSRleft	contained	start='[^"']'	skip=@\%(\\\\\)*\\/@ matchgroup=shDerefOp	end='/' end='\ze}'	nextgroup=shDerefPSRright
                             syn region shDerefPSRright	contained	start='.'	skip=@\%(\\\\\)\+@		end='\ze}'
    3              0.000005 endif
                            
                            " Arithmetic Parenthesized Expressions: {{{1
                            "syn region shParen matchgroup=shArithRegion start='[^$]\zs(\%(\ze[^(]\|$\)' end=')' contains=@shArithParenList
    3              0.000045 syn region shParen matchgroup=shArithRegion start='\$\@!(\%(\ze[^(]\|$\)' end=')' contains=@shArithParenList
                            
                            " Additional sh Keywords: {{{1
                            " ===================
    3              0.000033 syn keyword shStatement break cd chdir continue eval exec exit kill newgrp pwd read readonly return shift test trap ulimit umask wait
    3              0.000008 syn keyword shConditional contained elif else then
    3              0.000013 if !exists("g:sh_no_error")
    3              0.000011  syn keyword shCondError elif else then
    3              0.000002 endif
                            
                            " Additional ksh Keywords and Aliases: {{{1
                            " ===================================
    3              0.000013 if exists("b:is_kornshell") || exists("b:is_posix")
                             syn keyword shStatement bg builtin disown enum export false fg getconf getopts hist jobs let printf sleep true unalias whence
                             syn keyword shStatement typeset skipwhite nextgroup=shSetOption
                             syn keyword shStatement autoload compound fc float functions hash history integer nameref nohup r redirect source stop suspend times type
                             if exists("b:is_posix")
                              syn keyword shStatement command
                             else
                              syn keyword shStatement time
                             endif
                            
                            " Additional bash Keywords: {{{1
                            " =====================
    3              0.000008 elseif exists("b:is_bash")
                             syn keyword shStatement bg builtin disown export false fg getopts jobs let printf sleep true unalias
                             syn keyword shStatement typeset nextgroup=shSetOption
                             syn keyword shStatement fc hash history source suspend times type
                             syn keyword shStatement bind builtin caller compopt declare dirs disown enable export help logout mapfile popd pushd readarray shopt source typeset
    3              0.000002 else
    3              0.000009  syn keyword shStatement login newgrp
    3              0.000002 endif
                            
                            " Synchronization: {{{1
                            " ================
    3              0.000007 if !exists("g:sh_minlines")
    3              0.000012  let s:sh_minlines = 200
                            else
                             let s:sh_minlines= g:sh_minlines
    3              0.000002 endif
    3              0.000006 if !exists("g:sh_maxlines")
    3              0.000007  let s:sh_maxlines = 2*s:sh_minlines
    3              0.000005  if s:sh_maxlines < 25
                              let s:sh_maxlines= 25
    3              0.000002  endif
                            else
                             let s:sh_maxlines= g:sh_maxlines
    3              0.000003 endif
    3              0.000073 exec "syn sync minlines=" . s:sh_minlines . " maxlines=" . s:sh_maxlines
    3              0.000024 syn sync match shCaseEsacSync	grouphere	shCaseEsac	"\<case\>"
    3              0.000017 syn sync match shCaseEsacSync	groupthere	shCaseEsac	"\<esac\>"
    3              0.000017 syn sync match shDoSync	grouphere	shDo	"\<do\>"
    3              0.000014 syn sync match shDoSync	groupthere	shDo	"\<done\>"
    3              0.000016 syn sync match shForSync	grouphere	shFor	"\<for\>"
    3              0.000014 syn sync match shForSync	groupthere	shFor	"\<in\>"
    3              0.000014 syn sync match shIfSync	grouphere	shIf	"\<if\>"
    3              0.000016 syn sync match shIfSync	groupthere	shIf	"\<fi\>"
    3              0.000159 syn sync match shUntilSync	grouphere	shRepeat	"\<until\>"
    3              0.000021 syn sync match shWhileSync	grouphere	shRepeat	"\<while\>"
                            
                            " Default Highlighting: {{{1
                            " =====================
    3              0.000013 if !exists("skip_sh_syntax_inits")
    3              0.000009  hi def link shArithRegion	shShellVariables
    3              0.000005  hi def link shAstQuote	shDoubleQuote
    3              0.000004  hi def link shAtExpr	shSetList
    3              0.000005  hi def link shBkslshSnglQuote	shSingleQuote
    3              0.000005  hi def link shBkslshDblQuote	shDOubleQuote
    3              0.000004  hi def link shBeginHere	shRedir
    3              0.000005  hi def link shCaseBar	shConditional
    3              0.000004  hi def link shCaseCommandSub	shCommandSub
    3              0.000005  hi def link shCaseDoubleQuote	shDoubleQuote
    3              0.000004  hi def link shCaseIn	shConditional
    3              0.000005  hi def link shQuote	shOperator
    3              0.000005  hi def link shCaseSingleQuote	shSingleQuote
    3              0.000004  hi def link shCaseStart	shConditional
    3              0.000005  hi def link shCmdSubRegion	shShellVariables
    3              0.000004  hi def link shColon	shComment
    3              0.000004  hi def link shDerefOp	shOperator
    3              0.000004  hi def link shDerefPOL	shDerefOp
    3              0.000004  hi def link shDerefPPS	shDerefOp
    3              0.000004  hi def link shDerefPSR	shDerefOp
    3              0.000004  hi def link shDeref	shShellVariables
    3              0.000005  hi def link shDerefDelim	shOperator
    3              0.000004  hi def link shDerefSimple	shDeref
    3              0.000004  hi def link shDerefSpecial	shDeref
    3              0.000005  hi def link shDerefString	shDoubleQuote
    3              0.000004  hi def link shDerefVar	shDeref
    3              0.000004  hi def link shDoubleQuote	shString
    3              0.000004  hi def link shEcho	shString
    3              0.000004  hi def link shEchoDelim	shOperator
    3              0.000004  hi def link shEchoQuote	shString
    3              0.000005  hi def link shForPP	shLoop
    3              0.000004  hi def link shFunction	Function
    3              0.000004  hi def link shEmbeddedEcho	shString
    3              0.000004  hi def link shEscape	shCommandSub
    3              0.000004  hi def link shExDoubleQuote	shDoubleQuote
    3              0.000004  hi def link shExSingleQuote	shSingleQuote
    3              0.000004  hi def link shHereDoc	shString
    3              0.000004  hi def link shHereString	shRedir
    3              0.000005  hi def link shHerePayload	shHereDoc
    3              0.000004  hi def link shLoop	shStatement
    3              0.000004  hi def link shSpecialNxt	shSpecial
    3              0.000004  hi def link shNoQuote	shDoubleQuote
    3              0.000004  hi def link shOption	shCommandSub
    3              0.000005  hi def link shPattern	shString
    3              0.000004  hi def link shParen	shArithmetic
    3              0.000005  hi def link shPosnParm	shShellVariables
    3              0.000004  hi def link shQuickComment	shComment
    3              0.000004  hi def link shBQComment	shComment
    3              0.000003  hi def link shRange	shOperator
    3              0.000003  hi def link shRedir	shOperator
    3              0.000005  hi def link shSetListDelim	shOperator
    3              0.000004  hi def link shSetOption	shOption
    3              0.000004  hi def link shSingleQuote	shString
    3              0.000004  hi def link shSource	shOperator
    3              0.000004  hi def link shStringSpecial	shSpecial
    3              0.000004  hi def link shSpecialStart	shSpecial
    3              0.000004  hi def link shSubShRegion	shOperator
    3              0.000004  hi def link shTestOpr	shConditional
    3              0.000004  hi def link shTestPattern	shString
    3              0.000005  hi def link shTestDoubleQuote	shString
    3              0.000004  hi def link shTestSingleQuote	shString
    3              0.000005  hi def link shTouchCmd	shStatement
    3              0.000004  hi def link shVariable	shSetList
    3              0.000004  hi def link shWrapLineOperator	shOperator
                            
    3              0.000008  if exists("b:is_bash")
                               hi def link bashAdminStatement	shStatement
                               hi def link bashSpecialVariables	shShellVariables
                               hi def link bashStatement		shStatement
                               hi def link shCharClass		shSpecial
                               hi def link shDerefOffset		shDerefOp
                               hi def link shDerefLen		shDerefOffset
    3              0.000003  endif
    3              0.000011  if exists("b:is_kornshell") || exists("b:is_posix")
                               hi def link kshSpecialVariables	shShellVariables
                               hi def link kshStatement		shStatement
    3              0.000002  endif
                            
    3              0.000007  if !exists("g:sh_no_error")
    3              0.000004   hi def link shCaseError		Error
    3              0.000004   hi def link shCondError		Error
    3              0.000004   hi def link shCurlyError		Error
    3              0.000004   hi def link shDerefOpError		Error
    3              0.000004   hi def link shDerefWordError		Error
    3              0.000004   hi def link shDoError		Error
    3              0.000004   hi def link shEsacError		Error
    3              0.000004   hi def link shIfError		Error
    3              0.000004   hi def link shInError		Error
    3              0.000004   hi def link shParenError		Error
    3              0.000004   hi def link shTestError		Error
    3              0.000010   if exists("b:is_kornshell") || exists("b:is_posix")
                                hi def link shDTestError		Error
    3              0.000002   endif
    3              0.000002  endif
                            
    3              0.000004  hi def link shArithmetic		Special
    3              0.000004  hi def link shCharClass		Identifier
    3              0.000004  hi def link shSnglCase		Statement
    3              0.000030  hi def link shCommandSub		Special
    3              0.000005  hi def link shCommandSubBQ		shCommandSub
    3              0.000004  hi def link shComment		Comment
    3              0.000004  hi def link shConditional		Conditional
    3              0.000004  hi def link shCtrlSeq		Special
    3              0.000004  hi def link shExprRegion		Delimiter
    3              0.000004  hi def link shFunctionKey		Function
    3              0.000004  hi def link shFunctionName		Function
    3              0.000004  hi def link shNumber		Number
    3              0.000003  hi def link shOperator		Operator
    3              0.000004  hi def link shRepeat		Repeat
    3              0.000004  hi def link shSet		Statement
    3              0.000004  hi def link shSetList		Identifier
    3              0.000004  hi def link shShellVariables		PreProc
    3              0.000003  hi def link shSpecial		Special
    3              0.000003  hi def link shSpecialDQ		Special
    3              0.000004  hi def link shSpecialSQ		Special
    3              0.000004  hi def link shSpecialNoZS		shSpecial
    3              0.000004  hi def link shStatement		Statement
    3              0.000003  hi def link shString		String
    3              0.000004  hi def link shTodo		Todo
    3              0.000004  hi def link shAlias		Identifier
    3              0.000008  hi def link shHereDoc01		shRedir
    3              0.000004  hi def link shHereDoc02		shRedir
    3              0.000003  hi def link shHereDoc03		shRedir
    3              0.000003  hi def link shHereDoc04		shRedir
    3              0.000004  hi def link shHereDoc05		shRedir
    3              0.000004  hi def link shHereDoc06		shRedir
    3              0.000004  hi def link shHereDoc07		shRedir
    3              0.000004  hi def link shHereDoc08		shRedir
    3              0.000003  hi def link shHereDoc09		shRedir
    3              0.000003  hi def link shHereDoc10		shRedir
    3              0.000003  hi def link shHereDoc11		shRedir
    3              0.000003  hi def link shHereDoc12		shRedir
    3              0.000003  hi def link shHereDoc13		shRedir
    3              0.000004  hi def link shHereDoc14		shRedir
    3              0.000003  hi def link shHereDoc15		shRedir
    3              0.000003  hi def link shHereDoc16		shRedir
    3              0.000002 endif
                            
                            " Delete shell folding commands {{{1
                            " =============================
    3              0.000013 delc ShFoldFunctions
    3              0.000005 delc ShFoldHereDoc
    3              0.000004 delc ShFoldIfDoFor
                            
                            " Set Current Syntax: {{{1
                            " ===================
    3              0.000008 if exists("b:is_bash")
                             let b:current_syntax = "bash"
    3              0.000007 elseif exists("b:is_kornshell")
                             let b:current_syntax = "ksh"
    3              0.000006 elseif exists("b:is_posix")
                             let b:current_syntax = "posix"
    3              0.000002 else
    3              0.000007  let b:current_syntax = "sh"
    3              0.000002 endif
                            
                            " vim: ts=16 fdm=marker

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\syntax\python.vim
Sourced 3 times
Total time:   0.003035
 Self time:   0.003035

count  total (s)   self (s)
                            " Vim syntax file
                            " Language:	Python
                            " Maintainer:	Zvezdan Petkovic <zpetkovic@acm.org>
                            " Last Change:	2022 Jun 28
                            " Credits:	Neil Schemenauer <nas@python.ca>
                            "		Dmitry Vasiliev
                            "
                            "		This version is a major rewrite by Zvezdan Petkovic.
                            "
                            "		- introduced highlighting of doctests
                            "		- updated keywords, built-ins, and exceptions
                            "		- corrected regular expressions for
                            "
                            "		  * functions
                            "		  * decorators
                            "		  * strings
                            "		  * escapes
                            "		  * numbers
                            "		  * space error
                            "
                            "		- corrected synchronization
                            "		- more highlighting is ON by default, except
                            "		- space error highlighting is OFF by default
                            "
                            " Optional highlighting can be controlled using these variables.
                            "
                            "   let python_no_builtin_highlight = 1
                            "   let python_no_doctest_code_highlight = 1
                            "   let python_no_doctest_highlight = 1
                            "   let python_no_exception_highlight = 1
                            "   let python_no_number_highlight = 1
                            "   let python_space_error_highlight = 1
                            "
                            " All the options above can be switched on together.
                            "
                            "   let python_highlight_all = 1
                            "
                            
                            " quit when a syntax file was already loaded.
    3              0.000035 if exists("b:current_syntax")
                              finish
    3              0.000003 endif
                            
                            " We need nocompatible mode in order to continue lines with backslashes.
                            " Original setting will be restored.
    3              0.000031 let s:cpo_save = &cpo
    3              0.000031 set cpo&vim
                            
    3              0.000010 if exists("python_no_doctest_highlight")
                              let python_no_doctest_code_highlight = 1
    3              0.000002 endif
                            
    3              0.000007 if exists("python_highlight_all")
                              if exists("python_no_builtin_highlight")
                                unlet python_no_builtin_highlight
                              endif
                              if exists("python_no_doctest_code_highlight")
                                unlet python_no_doctest_code_highlight
                              endif
                              if exists("python_no_doctest_highlight")
                                unlet python_no_doctest_highlight
                              endif
                              if exists("python_no_exception_highlight")
                                unlet python_no_exception_highlight
                              endif
                              if exists("python_no_number_highlight")
                                unlet python_no_number_highlight
                              endif
                              let python_space_error_highlight = 1
    3              0.000002 endif
                            
                            " Keep Python keywords in alphabetical order inside groups for easy
                            " comparison with the table in the 'Python Language Reference'
                            " https://docs.python.org/reference/lexical_analysis.html#keywords.
                            " Groups are in the order presented in NAMING CONVENTIONS in syntax.txt.
                            " Exceptions come last at the end of each group (class and def below).
                            "
                            " The list can be checked using:
                            "
                            " python3 -c 'import keyword, pprint; pprint.pprint(keyword.kwlist + keyword.softkwlist, compact=True)'
                            "
    3              0.000020 syn keyword pythonStatement	False None True
    3              0.000015 syn keyword pythonStatement	as assert break continue del global
    3              0.000011 syn keyword pythonStatement	lambda nonlocal pass return with yield
    3              0.000015 syn keyword pythonStatement	class def nextgroup=pythonFunction skipwhite
    3              0.000008 syn keyword pythonConditional	elif else if
    3              0.000008 syn keyword pythonRepeat	for while
    3              0.000011 syn keyword pythonOperator	and in is not or
    3              0.000010 syn keyword pythonException	except finally raise try
    3              0.000007 syn keyword pythonInclude	from import
    3              0.000006 syn keyword pythonAsync		async await
                            
                            " Soft keywords
                            " These keywords do not mean anything unless used in the right context
                            " See https://docs.python.org/3/reference/lexical_analysis.html#soft-keywords 
                            " for more on this.
    3              0.000035 syn match   pythonConditional   "^\s*\zscase\%(\s\+.*:.*$\)\@="
    3              0.000021 syn match   pythonConditional   "^\s*\zsmatch\%(\s\+.*:\s*\%(#.*\)\=$\)\@="
                            
                            " Decorators
                            " A dot must be allowed because of @MyClass.myfunc decorators.
    3              0.000011 syn match   pythonDecorator	"@" display contained
    3              0.000018 syn match   pythonDecoratorName	"@\s*\h\%(\w\|\.\)*" display contains=pythonDecorator
                            
                            " Python 3.5 introduced the use of the same symbol for matrix multiplication:
                            " https://www.python.org/dev/peps/pep-0465/.  We now have to exclude the
                            " symbol from highlighting when used in that context.
                            " Single line multiplication.
    3              0.000036 syn match   pythonMatrixMultiply
                                  \ "\%(\w\|[])]\)\s*@"
                                  \ contains=ALLBUT,pythonDecoratorName,pythonDecorator,pythonFunction,pythonDoctestValue
                                  \ transparent
                            " Multiplication continued on the next line after backslash.
    3              0.000073 syn match   pythonMatrixMultiply
                                  \ "[^\\]\\\s*\n\%(\s*\.\.\.\s\)\=\s\+@"
                                  \ contains=ALLBUT,pythonDecoratorName,pythonDecorator,pythonFunction,pythonDoctestValue
                                  \ transparent
                            " Multiplication in a parenthesized expression over multiple lines with @ at
                            " the start of each continued line; very similar to decorators and complex.
    3              0.000078 syn match   pythonMatrixMultiply
                                  \ "^\s*\%(\%(>>>\|\.\.\.\)\s\+\)\=\zs\%(\h\|\%(\h\|[[(]\).\{-}\%(\w\|[])]\)\)\s*\n\%(\s*\.\.\.\s\)\=\s\+@\%(.\{-}\n\%(\s*\.\.\.\s\)\=\s\+@\)*"
                                  \ contains=ALLBUT,pythonDecoratorName,pythonDecorator,pythonFunction,pythonDoctestValue
                                  \ transparent
                            
    3              0.000011 syn match   pythonFunction	"\h\w*" display contained
                            
    3              0.000023 syn match   pythonComment	"#.*$" contains=pythonTodo,@Spell
    3              0.000011 syn keyword pythonTodo		FIXME NOTE NOTES TODO XXX contained
                            
                            " Triple-quoted strings can contain doctests.
    3              0.000047 syn region  pythonString matchgroup=pythonQuotes
                                  \ start=+[uU]\=\z(['"]\)+ end="\z1" skip="\\\\\|\\\z1"
                                  \ contains=pythonEscape,@Spell
    3              0.000047 syn region  pythonString matchgroup=pythonTripleQuotes
                                  \ start=+[uU]\=\z('''\|"""\)+ skip=+\\["']+ end="\z1" keepend
                                  \ contains=pythonEscape,pythonSpaceError,pythonDoctest,@Spell
    3              0.000038 syn region  pythonRawString matchgroup=pythonQuotes
                                  \ start=+[uU]\=[rR]\z(['"]\)+ end="\z1" skip="\\\\\|\\\z1"
                                  \ contains=@Spell
    3              0.000034 syn region  pythonRawString matchgroup=pythonTripleQuotes
                                  \ start=+[uU]\=[rR]\z('''\|"""\)+ end="\z1" keepend
                                  \ contains=pythonSpaceError,pythonDoctest,@Spell
                            
    3              0.000027 syn match   pythonEscape	+\\[abfnrtv'"\\]+ contained
    3              0.000013 syn match   pythonEscape	"\\\o\{1,3}" contained
    3              0.000010 syn match   pythonEscape	"\\x\x\{2}" contained
    3              0.000018 syn match   pythonEscape	"\%(\\u\x\{4}\|\\U\x\{8}\)" contained
                            " Python allows case-insensitive Unicode IDs: http://www.unicode.org/charts/
    3              0.000012 syn match   pythonEscape	"\\N{\a\+\%(\s\a\+\)*}" contained
    3              0.000008 syn match   pythonEscape	"\\$"
                            
                            " It is very important to understand all details before changing the
                            " regular expressions below or their order.
                            " The word boundaries are *not* the floating-point number boundaries
                            " because of a possible leading or trailing decimal point.
                            " The expressions below ensure that all valid number literals are
                            " highlighted, and invalid number literals are not.  For example,
                            "
                            " - a decimal point in '4.' at the end of a line is highlighted,
                            " - a second dot in 1.0.0 is not highlighted,
                            " - 08 is not highlighted,
                            " - 08e0 or 08j are highlighted,
                            "
                            " and so on, as specified in the 'Python Language Reference'.
                            " https://docs.python.org/reference/lexical_analysis.html#numeric-literals
    3              0.000013 if !exists("python_no_number_highlight")
                              " numbers (including longs and complex)
    3              0.000016   syn match   pythonNumber	"\<0[oO]\=\o\+[Ll]\=\>"
    3              0.000013   syn match   pythonNumber	"\<0[xX]\x\+[Ll]\=\>"
    3              0.000013   syn match   pythonNumber	"\<0[bB][01]\+[Ll]\=\>"
    3              0.000019   syn match   pythonNumber	"\<\%([1-9]\d*\|0\)[Ll]\=\>"
    3              0.000012   syn match   pythonNumber	"\<\d\+[jJ]\>"
    3              0.000016   syn match   pythonNumber	"\<\d\+[eE][+-]\=\d\+[jJ]\=\>"
    3              0.000023   syn match   pythonNumber
                            	\ "\<\d\+\.\%([eE][+-]\=\d\+\)\=[jJ]\=\%(\W\|$\)\@="
    3              0.000035   syn match   pythonNumber
                            	\ "\%(^\|\W\)\zs\d*\.\d\+\%([eE][+-]\=\d\+\)\=[jJ]\=\>"
    3              0.000003 endif
                            
                            " Group the built-ins in the order in the 'Python Library Reference' for
                            " easier comparison.
                            " https://docs.python.org/library/constants.html
                            " http://docs.python.org/library/functions.html
                            " Python built-in functions are in alphabetical order.
                            "
                            " The list can be checked using:
                            "
                            " python3 -c 'import builtins, pprint; pprint.pprint(dir(builtins), compact=True)'
                            "
                            " The constants added by the `site` module are not listed below because they
                            " should not be used in programs, only in interactive interpreter.
                            " Similarly for some other attributes and functions `__`-enclosed from the
                            " output of the above command.
                            "
    3              0.000010 if !exists("python_no_builtin_highlight")
                              " built-in constants
                              " 'False', 'True', and 'None' are also reserved words in Python 3
    3              0.000011   syn keyword pythonBuiltin	False True None
    3              0.000011   syn keyword pythonBuiltin	NotImplemented Ellipsis __debug__
                              " constants added by the `site` module
    3              0.000034   syn keyword pythonBuiltin	quit exit copyright credits license
                              " built-in functions
    3              0.000012   syn keyword pythonBuiltin	abs all any ascii bin bool breakpoint bytearray
    3              0.000012   syn keyword pythonBuiltin	bytes callable chr classmethod compile complex
    3              0.000013   syn keyword pythonBuiltin	delattr dict dir divmod enumerate eval exec
    3              0.000012   syn keyword pythonBuiltin	filter float format frozenset getattr globals
    3              0.000012   syn keyword pythonBuiltin	hasattr hash help hex id input int isinstance
    3              0.000010   syn keyword pythonBuiltin	issubclass iter len list locals map max
    3              0.000012   syn keyword pythonBuiltin	memoryview min next object oct open ord pow
    3              0.000011   syn keyword pythonBuiltin	print property range repr reversed round set
    3              0.000013   syn keyword pythonBuiltin	setattr slice sorted staticmethod str sum super
    3              0.000009   syn keyword pythonBuiltin	tuple type vars zip __import__
                              " avoid highlighting attributes as builtins
    3              0.000026   syn match   pythonAttribute	/\.\h\w*/hs=s+1
                            	\ contains=ALLBUT,pythonBuiltin,pythonFunction,pythonAsync
                            	\ transparent
    3              0.000002 endif
                            
                            " From the 'Python Library Reference' class hierarchy at the bottom.
                            " http://docs.python.org/library/exceptions.html
    3              0.000011 if !exists("python_no_exception_highlight")
                              " builtin base exceptions (used mostly as base classes for other exceptions)
    3              0.000011   syn keyword pythonExceptions	BaseException Exception
    3              0.000008   syn keyword pythonExceptions	ArithmeticError BufferError LookupError
                              " builtin exceptions (actually raised)
    3              0.000009   syn keyword pythonExceptions	AssertionError AttributeError EOFError
    3              0.000009   syn keyword pythonExceptions	FloatingPointError GeneratorExit ImportError
    3              0.000008   syn keyword pythonExceptions	IndentationError IndexError KeyError
    3              0.000007   syn keyword pythonExceptions	KeyboardInterrupt MemoryError
    3              0.000007   syn keyword pythonExceptions	ModuleNotFoundError NameError
    3              0.000009   syn keyword pythonExceptions	NotImplementedError OSError OverflowError
    3              0.000009   syn keyword pythonExceptions	RecursionError ReferenceError RuntimeError
    3              0.000009   syn keyword pythonExceptions	StopAsyncIteration StopIteration SyntaxError
    3              0.000009   syn keyword pythonExceptions	SystemError SystemExit TabError TypeError
    3              0.000007   syn keyword pythonExceptions	UnboundLocalError UnicodeDecodeError
    3              0.000007   syn keyword pythonExceptions	UnicodeEncodeError UnicodeError
    3              0.000007   syn keyword pythonExceptions	UnicodeTranslateError ValueError
    3              0.000006   syn keyword pythonExceptions	ZeroDivisionError
                              " builtin exception aliases for OSError
    3              0.000008   syn keyword pythonExceptions	EnvironmentError IOError WindowsError
                              " builtin OS exceptions in Python 3
    3              0.000007   syn keyword pythonExceptions	BlockingIOError BrokenPipeError
    3              0.000008   syn keyword pythonExceptions	ChildProcessError ConnectionAbortedError
    3              0.000009   syn keyword pythonExceptions	ConnectionError ConnectionRefusedError
    3              0.000007   syn keyword pythonExceptions	ConnectionResetError FileExistsError
    3              0.000007   syn keyword pythonExceptions	FileNotFoundError InterruptedError
    3              0.000007   syn keyword pythonExceptions	IsADirectoryError NotADirectoryError
    3              0.000008   syn keyword pythonExceptions	PermissionError ProcessLookupError TimeoutError
                              " builtin warnings
    3              0.000008   syn keyword pythonExceptions	BytesWarning DeprecationWarning FutureWarning
    3              0.000008   syn keyword pythonExceptions	ImportWarning PendingDeprecationWarning
    3              0.000007   syn keyword pythonExceptions	ResourceWarning RuntimeWarning
    3              0.000007   syn keyword pythonExceptions	SyntaxWarning UnicodeWarning
    3              0.000006   syn keyword pythonExceptions	UserWarning Warning
    3              0.000002 endif
                            
    3              0.000008 if exists("python_space_error_highlight")
                              " trailing whitespace
                              syn match   pythonSpaceError	display excludenl "\s\+$"
                              " mixed tabs and spaces
                              syn match   pythonSpaceError	display " \+\t"
                              syn match   pythonSpaceError	display "\t\+ "
    3              0.000003 endif
                            
                            " Do not spell doctests inside strings.
                            " Notice that the end of a string, either ''', or """, will end the contained
                            " doctest too.  Thus, we do *not* need to have it as an end pattern.
    3              0.000058 if !exists("python_no_doctest_highlight")
    3              0.000009   if !exists("python_no_doctest_code_highlight")
    3              0.000039     syn region pythonDoctest
                            	  \ start="^\s*>>>\s" end="^\s*$"
                            	  \ contained contains=ALLBUT,pythonDoctest,pythonFunction,@Spell
    3              0.000030     syn region pythonDoctestValue
                            	  \ start=+^\s*\%(>>>\s\|\.\.\.\s\|"""\|'''\)\@!\S\++ end="$"
                            	  \ contained
                              else
                                syn region pythonDoctest
                            	  \ start="^\s*>>>" end="^\s*$"
                            	  \ contained contains=@NoSpell
    3              0.000003   endif
    3              0.000002 endif
                            
                            " Sync at the beginning of class, function, or method definition.
    3              0.000025 syn sync match pythonSync grouphere NONE "^\%(def\|class\)\s\+\h\w*\s*[(:]"
                            
                            " The default highlight links.  Can be overridden later.
    3              0.000008 hi def link pythonStatement		Statement
    3              0.000005 hi def link pythonConditional		Conditional
    3              0.000005 hi def link pythonRepeat		Repeat
    3              0.000005 hi def link pythonOperator		Operator
    3              0.000005 hi def link pythonException		Exception
    3              0.000004 hi def link pythonInclude		Include
    3              0.000004 hi def link pythonAsync			Statement
    3              0.000004 hi def link pythonDecorator		Define
    3              0.000004 hi def link pythonDecoratorName		Function
    3              0.000004 hi def link pythonFunction		Function
    3              0.000004 hi def link pythonComment		Comment
    3              0.000004 hi def link pythonTodo			Todo
    3              0.000004 hi def link pythonString		String
    3              0.000004 hi def link pythonRawString		String
    3              0.000004 hi def link pythonQuotes		String
    3              0.000005 hi def link pythonTripleQuotes		pythonQuotes
    3              0.000004 hi def link pythonEscape		Special
    3              0.000011 if !exists("python_no_number_highlight")
    3              0.000004   hi def link pythonNumber		Number
    3              0.000002 endif
    3              0.000008 if !exists("python_no_builtin_highlight")
    3              0.000004   hi def link pythonBuiltin		Function
    3              0.000002 endif
    3              0.000008 if !exists("python_no_exception_highlight")
    3              0.000004   hi def link pythonExceptions		Structure
    3              0.000002 endif
    3              0.000007 if exists("python_space_error_highlight")
                              hi def link pythonSpaceError		Error
    3              0.000002 endif
    3              0.000007 if !exists("python_no_doctest_highlight")
    3              0.000004   hi def link pythonDoctest		Special
    3              0.000003   hi def link pythonDoctestValue	Define
    3              0.000002 endif
                            
    3              0.000009 let b:current_syntax = "python"
                            
    3              0.000037 let &cpo = s:cpo_save
    3              0.000006 unlet s:cpo_save
                            
                            " vim:set sw=2 sts=2 ts=8 noet:

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\syntax\yaml.vim
Sourced 3 times
Total time:   0.003682
 Self time:   0.003260

count  total (s)   self (s)
                            " Vim syntax file
                            " Language:         YAML (YAML Ain't Markup Language) 1.2
                            " Maintainer:       Nikolai Pavlov <zyx.vim@gmail.com>
                            " First author:     Nikolai Weibull <now@bitwi.se>
                            " Latest Revision:  2015-03-28
                            " 		    removed duplicate yamlKeyValueDelimiter (pull #4799)
                            
    3              0.000033 if exists('b:current_syntax')
                                finish
    3              0.000003 endif
                            
    3              0.000032 let s:cpo_save = &cpo
    3              0.000031 set cpo&vim
                            
                            " Choose the schema to use
                            " TODO: Validate schema
    3              0.000010 if !exists('b:yaml_schema')
    2              0.000005   if exists('g:yaml_schema')
                                let b:yaml_schema = g:yaml_schema
    2              0.000002   else
    2              0.000004     let b:yaml_schema = 'core'
    2              0.000001   endif
    3              0.000002 endif
                            
    3              0.000006 let s:ns_char = '\%([\n\r\uFEFF \t]\@!\p\)'
    3              0.000006 let s:ns_word_char = '[[:alnum:]_\-]'
    3              0.000016 let s:ns_uri_char  = '\%(%\x\x\|'.s:ns_word_char.'\|[#/;?:@&=+$,.!~*''()[\]]\)'
    3              0.000011 let s:ns_tag_char  = '\%(%\x\x\|'.s:ns_word_char.'\|[#/;?:@&=+$.~*''()]\)'
    3              0.000007 let s:c_ns_anchor_char = '\%([\n\r\uFEFF \t,[\]{}]\@!\p\)'
    3              0.000006 let s:c_indicator      = '[\-?:,[\]{}#&*!|>''"%@`]'
    3              0.000005 let s:c_flow_indicator = '[,[\]{}]'
                            
    3              0.000048 let s:ns_char_without_c_indicator = substitute(s:ns_char, '\v\C[\zs', '\=s:c_indicator[1:-2]', '')
                            
    3              0.000006 let s:_collection = '[^\@!\(\%(\\\.\|\[^\\\]]\)\+\)]'
    3              0.000006 let s:_neg_collection = '[^\(\%(\\\.\|\[^\\\]]\)\+\)]'
    3              0.000015 function s:SimplifyToAssumeAllPrintable(p)
                                return substitute(a:p, '\V\C\\%('.s:_collection.'\\@!\\p\\)', '[^\1]', '')
                            endfunction
    3   0.000168   0.000043 let s:ns_char = s:SimplifyToAssumeAllPrintable(s:ns_char)
    3   0.000093   0.000037 let s:ns_char_without_c_indicator = s:SimplifyToAssumeAllPrintable(s:ns_char_without_c_indicator)
    3   0.000065   0.000026 let s:c_ns_anchor_char = s:SimplifyToAssumeAllPrintable(s:c_ns_anchor_char)
                            
    3              0.000009 function s:SimplifyAdjacentCollections(p)
                                return substitute(a:p, '\V\C'.s:_collection.'\\|'.s:_collection, '[\1\2]', 'g')
                            endfunction
    3   0.000122   0.000026 let s:ns_uri_char = s:SimplifyAdjacentCollections(s:ns_uri_char)
    3   0.000077   0.000026 let s:ns_tag_char = s:SimplifyAdjacentCollections(s:ns_tag_char)
                            
    3              0.000011 let s:c_verbatim_tag = '!<'.s:ns_uri_char.'\+>'
    3              0.000010 let s:c_named_tag_handle     = '!'.s:ns_word_char.'\+!'
    3              0.000006 let s:c_secondary_tag_handle = '!!'
    3              0.000008 let s:c_primary_tag_handle   = '!'
    3              0.000023 let s:c_tag_handle = '\%('.s:c_named_tag_handle.
                                        \         '\|'.s:c_secondary_tag_handle.
                                        \         '\|'.s:c_primary_tag_handle.'\)'
    3              0.000010 let s:c_ns_shorthand_tag = s:c_tag_handle . s:ns_tag_char.'\+'
    3              0.000005 let s:c_non_specific_tag = '!'
    3              0.000020 let s:c_ns_tag_property = s:c_verbatim_tag.
                                        \        '\|'.s:c_ns_shorthand_tag.
                                        \        '\|'.s:c_non_specific_tag
                            
    3              0.000008 let s:c_ns_anchor_name = s:c_ns_anchor_char.'\+'
    3              0.000008 let s:c_ns_anchor_property =  '&'.s:c_ns_anchor_name
    3              0.000007 let s:c_ns_alias_node      = '\*'.s:c_ns_anchor_name
                            
    3              0.000007 let s:ns_directive_name = s:ns_char.'\+'
                            
    3              0.000010 let s:ns_local_tag_prefix  = '!'.s:ns_uri_char.'*'
    3              0.000010 let s:ns_global_tag_prefix = s:ns_tag_char.s:ns_uri_char.'*'
    3              0.000013 let s:ns_tag_prefix = s:ns_local_tag_prefix.
                                        \    '\|'.s:ns_global_tag_prefix
                            
    3              0.000006 let s:ns_plain_safe_out = s:ns_char
    3              0.000012 let s:ns_plain_safe_in  = '\%('.s:c_flow_indicator.'\@!'.s:ns_char.'\)'
                            
    3              0.000111 let s:ns_plain_safe_in = substitute(s:ns_plain_safe_in, '\V\C\\%('.s:_collection.'\\@!'.s:_neg_collection.'\\)', '[^\1\2]', '')
    3              0.000057 let s:ns_plain_safe_in_without_colhash = substitute(s:ns_plain_safe_in, '\V\C'.s:_neg_collection, '[^\1:#]', '')
    3              0.000040 let s:ns_plain_safe_out_without_colhash = substitute(s:ns_plain_safe_out, '\V\C'.s:_neg_collection, '[^\1:#]', '')
                            
    3              0.000016 let s:ns_plain_first_in  = '\%('.s:ns_char_without_c_indicator.'\|[?:\-]\%('.s:ns_plain_safe_in.'\)\@=\)'
    3              0.000014 let s:ns_plain_first_out = '\%('.s:ns_char_without_c_indicator.'\|[?:\-]\%('.s:ns_plain_safe_out.'\)\@=\)'
                            
    3              0.000027 let s:ns_plain_char_in  = '\%('.s:ns_char.'#\|:'.s:ns_plain_safe_in.'\|'.s:ns_plain_safe_in_without_colhash.'\)'
    3              0.000016 let s:ns_plain_char_out = '\%('.s:ns_char.'#\|:'.s:ns_plain_safe_out.'\|'.s:ns_plain_safe_out_without_colhash.'\)'
                            
    3              0.000012 let s:ns_plain_out = s:ns_plain_first_out . s:ns_plain_char_out.'*'
    3              0.000010 let s:ns_plain_in  = s:ns_plain_first_in  . s:ns_plain_char_in.'*'
                            
                            
    3              0.000022 syn keyword yamlTodo            contained TODO FIXME XXX NOTE
                            
    3              0.000032 syn region  yamlComment         display oneline start='\%\(^\|\s\)#' end='$'
                                        \                   contains=yamlTodo
                            
    3              0.000088 execute 'syn region yamlDirective oneline start='.string('^\ze%'.s:ns_directive_name.'\s\+').' '.
                                        \                            'end="$" '.
                                        \                            'contains=yamlTAGDirective,'.
                                        \                                     'yamlYAMLDirective,'.
                                        \                                     'yamlReservedDirective '.
                                        \                            'keepend'
                            
    3              0.000017 syn match yamlTAGDirective '%TAG\s\+' contained nextgroup=yamlTagHandle
    3              0.000039 execute 'syn match yamlTagHandle contained nextgroup=yamlTagPrefix '.string(s:c_tag_handle.'\s\+')
    3              0.000059 execute 'syn match yamlTagPrefix contained nextgroup=yamlComment ' . string(s:ns_tag_prefix)
                            
    3              0.000015 syn match yamlYAMLDirective '%YAML\s\+'  contained nextgroup=yamlYAMLVersion
    3              0.000012 syn match yamlYAMLVersion   '\d\+\.\d\+' contained nextgroup=yamlComment
                            
    3              0.000041 execute 'syn match yamlReservedDirective contained nextgroup=yamlComment '.
                                        \string('%\%(\%(TAG\|YAML\)\s\)\@!'.s:ns_directive_name)
                            
    3              0.000042 syn region yamlFlowString matchgroup=yamlFlowStringDelimiter start='"' skip='\\"' end='"'
                                        \ contains=yamlEscape
                                        \ nextgroup=yamlKeyValueDelimiter
    3              0.000031 syn region yamlFlowString matchgroup=yamlFlowStringDelimiter start="'" skip="''"  end="'"
                                        \ contains=yamlSingleEscape
                                        \ nextgroup=yamlKeyValueDelimiter
    3              0.000028 syn match  yamlEscape contained '\\\%([\\"abefnrtv\^0_ NLP\n]\|x\x\x\|u\x\{4}\|U\x\{8}\)'
    3              0.000007 syn match  yamlSingleEscape contained "''"
                            
    3              0.000018 syn match yamlBlockScalarHeader contained '\s\+\zs[|>]\%([+-]\=[1-9]\|[1-9]\=[+-]\)\='
                            
    3              0.000022 syn cluster yamlConstant contains=yamlBool,yamlNull
                            
    3              0.000017 syn cluster yamlFlow contains=yamlFlowString,yamlFlowMapping,yamlFlowCollection
    3              0.000013 syn cluster yamlFlow      add=yamlFlowMappingKey,yamlFlowMappingMerge
    3              0.000015 syn cluster yamlFlow      add=@yamlConstant,yamlPlainScalar,yamlFloat
    3              0.000018 syn cluster yamlFlow      add=yamlTimestamp,yamlInteger,yamlMappingKeyStart
    3              0.000010 syn cluster yamlFlow      add=yamlComment
    3              0.000019 syn region yamlFlowMapping    matchgroup=yamlFlowIndicator start='{' end='}' contains=@yamlFlow
    3              0.000016 syn region yamlFlowCollection matchgroup=yamlFlowIndicator start='\[' end='\]' contains=@yamlFlow
                            
    3              0.000044 execute 'syn match yamlPlainScalar /'.s:ns_plain_out.'/'
    3              0.000041 execute 'syn match yamlPlainScalar contained /'.s:ns_plain_in.'/'
                            
    3              0.000011 syn match yamlMappingKeyStart '?\ze\s'
    3              0.000007 syn match yamlMappingKeyStart '?' contained
                            
    3              0.000094 execute 'syn match yamlFlowMappingKey /\%#=1'.s:ns_plain_in.'\%(\s\+'.s:ns_plain_in.'\)*\ze\s*:/ contained '.
                                        \'nextgroup=yamlKeyValueDelimiter'
    3              0.000011 syn match yamlFlowMappingMerge /<<\ze\s*:/ contained nextgroup=yamlKeyValueDelimiter
                            
    3              0.000063 syn match yamlBlockCollectionItemStart '^\s*\zs-\%(\s\+-\)*\s' nextgroup=yamlBlockMappingKey,yamlBlockMappingMerge
                            " Use the old regexp engine, the NFA engine doesn't like all the \@ items.
    3              0.000091 execute 'syn match yamlBlockMappingKey /\%#=1^\s*\zs'.s:ns_plain_out.'\%(\s\+'.s:ns_plain_out.'\)*\ze\s*:\%(\s\|$\)/ '.
                                        \'nextgroup=yamlKeyValueDelimiter'
    3              0.000073 execute 'syn match yamlBlockMappingKey /\%#=1\s*\zs'.s:ns_plain_out.'\%(\s\+'.s:ns_plain_out.'\)*\ze\s*:\%(\s\|$\)/ contained '.
                                        \'nextgroup=yamlKeyValueDelimiter'
    3              0.000018 syn match yamlBlockMappingMerge /^\s*\zs<<\ze:\%(\s\|$\)/ nextgroup=yamlKeyValueDelimiter
    3              0.000014 syn match yamlBlockMappingMerge /<<\ze\s*:\%(\s\|$\)/ nextgroup=yamlKeyValueDelimiter contained
                            
    3              0.000008 syn match   yamlKeyValueDelimiter /\s*:/ contained
                            
    3              0.000018 syn cluster yamlScalarWithSpecials contains=yamlPlainScalar,yamlBlockMappingKey,yamlFlowMappingKey
                            
    3   0.000094   0.000040 let s:_bounder = s:SimplifyToAssumeAllPrintable('\%([[\]{}, \t]\@!\p\)')
    3              0.000010 if b:yaml_schema is# 'json'
                                syn keyword yamlNull null contained containedin=@yamlScalarWithSpecials
                                syn keyword yamlBool true false
                                exe 'syn match   yamlInteger /'.s:_bounder.'\@1<!\%(0\|-\=[1-9][0-9]*\)'.s:_bounder.'\@!/ contained containedin=@yamlScalarWithSpecials'
                                exe 'syn match   yamlFloat   /'.s:_bounder.'\@1<!\%(-\=[1-9][0-9]*\%(\.[0-9]*\)\=\(e[-+]\=[0-9]\+\)\=\|0\|-\=\.inf\|\.nan\)'.s:_bounder.'\@!/ contained containedin=@yamlScalarWithSpecials'
    3              0.000008 elseif b:yaml_schema is# 'core'
    3              0.000016     syn keyword yamlNull null Null NULL contained containedin=@yamlScalarWithSpecials
    3              0.000017     syn keyword yamlBool true True TRUE false False FALSE contained containedin=@yamlScalarWithSpecials
    3              0.000040     exe 'syn match   yamlNull /'.s:_bounder.'\@1<!\~'.s:_bounder.'\@!/ contained containedin=@yamlScalarWithSpecials'
    3              0.000068     exe 'syn match   yamlInteger /'.s:_bounder.'\@1<!\%([+-]\=\%(0\%(b[0-1_]\+\|[0-7_]\+\|x[0-9a-fA-F_]\+\)\=\|\%([1-9][0-9_]*\%(:[0-5]\=\d\)\+\)\)\|[1-9][0-9_]*\)'.s:_bounder.'\@!/ contained containedin=@yamlScalarWithSpecials'
    3              0.000076     exe 'syn match   yamlFloat /'.s:_bounder.'\@1<!\%([+-]\=\%(\%(\d[0-9_]*\)\.[0-9_]*\%([eE][+-]\=\d\+\)\=\|\.[0-9_]\+\%([eE][-+]\=[0-9]\+\)\=\|\d[0-9_]*\%(:[0-5]\=\d\)\+\.[0-9_]*\|\.\%(inf\|Inf\|INF\)\)\|\%(\.\%(nan\|NaN\|NAN\)\)\)'.s:_bounder.'\@!/ contained containedin=@yamlScalarWithSpecials'
                            elseif b:yaml_schema is# 'pyyaml'
                                syn keyword yamlNull null Null NULL contained containedin=@yamlScalarWithSpecials
                                syn keyword yamlBool true True TRUE false False FALSE yes Yes YES no No NO on On ON off Off OFF contained containedin=@yamlScalarWithSpecials
                                exe 'syn match   yamlNull /'.s:_bounder.'\@1<!\~'.s:_bounder.'\@!/ contained containedin=@yamlScalarWithSpecials'
                                exe 'syn match  yamlFloat /'.s:_bounder.'\@1<!\%(\v[-+]?%(\d[0-9_]*)\.[0-9_]*%([eE][-+]\d+)?|\.[0-9_]+%([eE][-+]\d+)?|[-+]?\d[0-9_]*%(\:[0-5]?\d)+\.[0-9_]*|[-+]?\.%(inf|Inf|INF)|\.%(nan|NaN|NAN)\m\)'.s:_bounder.'\@!/ contained containedin=@yamlScalarWithSpecials'
                                exe 'syn match  yamlInteger /'.s:_bounder.'\@1<!\%(\v[-+]?0b[0-1_]+|[-+]?0[0-7_]+|[-+]?%(0|[1-9][0-9_]*)|[-+]?0x[0-9a-fA-F_]+|[-+]?[1-9][0-9_]*%(:[0-5]?\d)+\m\)'.s:_bounder.'\@!/ contained containedin=@yamlScalarWithSpecials'
                                exe 'syn match  yamlTimestamp /'.s:_bounder.'\@1<!\%(\v\d\d\d\d\-\d\d\-\d\d|\d\d\d\d \-\d\d? \-\d\d?%([Tt]|[ \t]+)\d\d?\:\d\d \:\d\d %(\.\d*)?%([ \t]*%(Z|[-+]\d\d?%(\:\d\d)?))?\m\)'.s:_bounder.'\@!/ contained containedin=@yamlScalarWithSpecials'
                            elseif b:yaml_schema is# 'failsafe'
                                " Nothing
    3              0.000003 endif
    3              0.000006 unlet s:_bounder
                            
                            
    3              0.000088 execute 'syn match yamlNodeTag '.string(s:c_ns_tag_property)
    3              0.000031 execute 'syn match yamlAnchor  '.string(s:c_ns_anchor_property)
    3              0.000024 execute 'syn match yamlAlias   '.string(s:c_ns_alias_node)
                            
    3              0.000015 syn match yamlDocumentStart '^---\ze\%(\s\|$\)'
    3              0.000011 syn match yamlDocumentEnd   '^\.\.\.\ze\%(\s\|$\)'
                            
    3              0.000008 hi def link yamlTodo                     Todo
    3              0.000005 hi def link yamlComment                  Comment
                            
    3              0.000005 hi def link yamlDocumentStart            PreProc
    3              0.000004 hi def link yamlDocumentEnd              PreProc
                            
    3              0.000004 hi def link yamlDirectiveName            Keyword
                            
    3              0.000005 hi def link yamlTAGDirective             yamlDirectiveName
    3              0.000005 hi def link yamlTagHandle                String
    3              0.000004 hi def link yamlTagPrefix                String
                            
    3              0.000005 hi def link yamlYAMLDirective            yamlDirectiveName
    3              0.000005 hi def link yamlReservedDirective        Error
    3              0.000004 hi def link yamlYAMLVersion              Number
                            
    3              0.000004 hi def link yamlString                   String
    3              0.000005 hi def link yamlFlowString               yamlString
    3              0.000004 hi def link yamlFlowStringDelimiter      yamlString
    3              0.000005 hi def link yamlEscape                   SpecialChar
    3              0.000004 hi def link yamlSingleEscape             SpecialChar
                            
    3              0.000005 hi def link yamlBlockCollectionItemStart Label
    3              0.000005 hi def link yamlBlockMappingKey          Identifier
    3              0.000004 hi def link yamlBlockMappingMerge        Special
                            
    3              0.000004 hi def link yamlFlowMappingKey           Identifier
    3              0.000003 hi def link yamlFlowMappingMerge         Special
                            
    3              0.000004 hi def link yamlMappingKeyStart          Special
    3              0.000004 hi def link yamlFlowIndicator            Special
    3              0.000003 hi def link yamlKeyValueDelimiter        Special
                            
    3              0.000005 hi def link yamlConstant                 Constant
                            
    3              0.000005 hi def link yamlNull                     yamlConstant
    3              0.000004 hi def link yamlBool                     yamlConstant
                            
    3              0.000004 hi def link yamlAnchor                   Type
    3              0.000004 hi def link yamlAlias                    Type
    3              0.000003 hi def link yamlNodeTag                  Type
                            
    3              0.000004 hi def link yamlInteger                  Number
    3              0.000004 hi def link yamlFloat                    Float
    3              0.000004 hi def link yamlTimestamp                Number
                            
    3              0.000008 let b:current_syntax = "yaml"
                            
    3              0.000113 unlet s:ns_word_char s:ns_uri_char s:c_verbatim_tag s:c_named_tag_handle s:c_secondary_tag_handle s:c_primary_tag_handle s:c_tag_handle s:ns_tag_char s:c_ns_shorthand_tag s:c_non_specific_tag s:c_ns_tag_property s:c_ns_anchor_char s:c_ns_anchor_name s:c_ns_anchor_property s:c_ns_alias_node s:ns_char s:ns_directive_name s:ns_local_tag_prefix s:ns_global_tag_prefix s:ns_tag_prefix s:c_indicator s:ns_plain_safe_out s:c_flow_indicator s:ns_plain_safe_in s:ns_plain_first_in s:ns_plain_first_out s:ns_plain_char_in s:ns_plain_char_out s:ns_plain_out s:ns_plain_in s:ns_char_without_c_indicator s:ns_plain_safe_in_without_colhash s:ns_plain_safe_out_without_colhash
    3              0.000008 unlet s:_collection s:_neg_collection
    3              0.000013 delfunction s:SimplifyAdjacentCollections
    3              0.000007 delfunction s:SimplifyToAssumeAllPrintable
                            
    3              0.000031 let &cpo = s:cpo_save
    3              0.000032 unlet s:cpo_save

SCRIPT  C:\Users\ds13\AppData\Local\nvim-data\site\pack\packer\start\splitjoin.vim\ftplugin\typescript\splitjoin.vim
Sourced 1 time
Total time:   0.005844
 Self time:   0.005670

count  total (s)   self (s)
    1   0.005825   0.005650 runtime ftplugin/javascript/splitjoin.vim

SCRIPT  C:\Users\ds13\AppData\Local\nvim-data\site\pack\packer\start\splitjoin.vim\ftplugin\javascript\splitjoin.vim
Sourced 1 time
Total time:   0.000069
 Self time:   0.000069

count  total (s)   self (s)
    1              0.000017 if !exists('b:splitjoin_split_callbacks')
    1              0.000012   let b:splitjoin_split_callbacks = [
                                    \ 'sj#js#SplitFunction',
                                    \ 'sj#js#SplitObjectLiteral',
                                    \ 'sj#js#SplitFatArrowFunction',
                                    \ 'sj#js#SplitArray',
                                    \ 'sj#js#SplitOneLineIf',
                                    \ 'sj#js#SplitArgs',
                                    \ ]
    1              0.000001 endif
                            
    1              0.000003 if !exists('b:splitjoin_join_callbacks')
    1              0.000008   let b:splitjoin_join_callbacks = [
                                    \ 'sj#js#JoinFatArrowFunction',
                                    \ 'sj#js#JoinArray',
                                    \ 'sj#js#JoinArgs',
                                    \ 'sj#js#JoinFunction',
                                    \ 'sj#js#JoinOneLineIf',
                                    \ 'sj#js#JoinObjectLiteral',
                                    \ ]
    1              0.000009 endif

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\indent\typescript.vim
Sourced 1 time
Total time:   0.000596
 Self time:   0.000596

count  total (s)   self (s)
                            " Vim indent file
                            " Language: TypeScript
                            " Maintainer: See https://github.com/HerringtonDarkholme/yats.vim
                            " Last Change: 2019 Oct 18
                            " Acknowledgement: Based off of vim-ruby maintained by Nikolai Weibull http://vim-ruby.rubyforge.org
                            
                            " 0. Initialization {{{1
                            " =================
                            
                            " Only load this indent file when no other was loaded.
    1              0.000010 if exists("b:did_indent")
                              finish
    1              0.000001 endif
    1              0.000087 let b:did_indent = 1
                            
    1              0.000039 setlocal nosmartindent
                            
                            " Now, set up our indentation expression and keys that trigger it.
    1              0.000007 setlocal indentexpr=GetTypescriptIndent()
    1              0.000004 setlocal formatexpr=Fixedgq(v:lnum,v:count)
    1              0.000005 setlocal indentkeys=0{,0},0),0],0\,,!^F,o,O,e
                            
                            " Only define the function once.
    1              0.000006 if exists("*GetTypescriptIndent")
                              finish
    1              0.000001 endif
                            
    1              0.000007 let s:cpo_save = &cpo
    1              0.000005 set cpo&vim
                            
                            " 1. Variables {{{1
                            " ============
                            
    1              0.000004 let s:js_keywords = '^\s*\(break\|case\|catch\|continue\|debugger\|default\|delete\|do\|else\|finally\|for\|function\|if\|in\|instanceof\|new\|return\|switch\|this\|throw\|try\|typeof\|var\|void\|while\|with\)'
                            
                            " Regex of syntax group names that are or delimit string or are comments.
    1              0.000002 let s:syng_strcom = 'string\|regex\|comment\c'
                            
                            " Regex of syntax group names that are strings.
    1              0.000001 let s:syng_string = 'regex\c'
                            
                            " Regex of syntax group names that are strings or documentation.
    1              0.000002 let s:syng_multiline = 'comment\c'
                            
                            " Regex of syntax group names that are line comment.
    1              0.000002 let s:syng_linecom = 'linecomment\c'
                            
                            " Expression used to check whether we should skip a match with searchpair().
    1              0.000005 let s:skip_expr = "synIDattr(synID(line('.'),col('.'),1),'name') =~ '".s:syng_strcom."'"
                            
    1              0.000002 let s:line_term = '\s*\%(\%(\/\/\).*\)\=$'
                            
                            " Regex that defines continuation lines, not including (, {, or [.
    1              0.000012 let s:continuation_regex = '\%([\\*+/.:]\|\%(<%\)\@<![=-]\|\W[|&?]\|||\|&&\|[^=]=[^=].*,\)' . s:line_term
                            
                            " Regex that defines continuation lines.
                            " TODO: this needs to deal with if ...: and so on
    1              0.000002 let s:msl_regex = s:continuation_regex
                            
    1              0.000003 let s:one_line_scope_regex = '\<\%(if\|else\|for\|while\)\>[^{;]*' . s:line_term
                            
                            " Regex that defines blocks.
    1              0.000003 let s:block_regex = '\%([{[]\)\s*\%(|\%([*@]\=\h\w*,\=\s*\)\%(,\s*[*@]\=\h\w*\)*|\)\=' . s:line_term
                            
    1              0.000001 let s:var_stmt = '^\s*var'
                            
    1              0.000002 let s:comma_first = '^\s*,'
    1              0.000002 let s:comma_last = ',\s*$'
                            
    1              0.000001 let s:ternary = '^\s\+[?|:]'
    1              0.000001 let s:ternary_q = '^\s\+?'
                            
                            " 2. Auxiliary Functions {{{1
                            " ======================
                            
                            " Check if the character at lnum:col is inside a string, comment, or is ascii.
    1              0.000004 function s:IsInStringOrComment(lnum, col)
                              return synIDattr(synID(a:lnum, a:col, 1), 'name') =~ s:syng_strcom
                            endfunction
                            
                            " Check if the character at lnum:col is inside a string.
    1              0.000002 function s:IsInString(lnum, col)
                              return synIDattr(synID(a:lnum, a:col, 1), 'name') =~ s:syng_string
                            endfunction
                            
                            " Check if the character at lnum:col is inside a multi-line comment.
    1              0.000002 function s:IsInMultilineComment(lnum, col)
                              return !s:IsLineComment(a:lnum, a:col) && synIDattr(synID(a:lnum, a:col, 1), 'name') =~ s:syng_multiline
                            endfunction
                            
                            " Check if the character at lnum:col is a line comment.
    1              0.000002 function s:IsLineComment(lnum, col)
                              return synIDattr(synID(a:lnum, a:col, 1), 'name') =~ s:syng_linecom
                            endfunction
                            
                            " Find line above 'lnum' that isn't empty, in a comment, or in a string.
    1              0.000002 function s:PrevNonBlankNonString(lnum)
                              let in_block = 0
                              let lnum = prevnonblank(a:lnum)
                              while lnum > 0
                                " Go in and out of blocks comments as necessary.
                                " If the line isn't empty (with opt. comment) or in a string, end search.
                                let line = getline(lnum)
                                if line =~ '/\*'
                                  if in_block
                                    let in_block = 0
                                  else
                                    break
                                  endif
                                elseif !in_block && line =~ '\*/'
                                  let in_block = 1
                                elseif !in_block && line !~ '^\s*\%(//\).*$' && !(s:IsInStringOrComment(lnum, 1) && s:IsInStringOrComment(lnum, strlen(line)))
                                  break
                                endif
                                let lnum = prevnonblank(lnum - 1)
                              endwhile
                              return lnum
                            endfunction
                            
                            " Find line above 'lnum' that started the continuation 'lnum' may be part of.
    1              0.000010 function s:GetMSL(lnum, in_one_line_scope)
                              " Start on the line we're at and use its indent.
                              let msl = a:lnum
                              let lnum = s:PrevNonBlankNonString(a:lnum - 1)
                              while lnum > 0
                                " If we have a continuation line, or we're in a string, use line as MSL.
                                " Otherwise, terminate search as we have found our MSL already.
                                let line = getline(lnum)
                                let col = match(line, s:msl_regex) + 1
                                if (col > 0 && !s:IsInStringOrComment(lnum, col)) || s:IsInString(lnum, strlen(line))
                                  let msl = lnum
                                else
                                  " Don't use lines that are part of a one line scope as msl unless the
                                  " flag in_one_line_scope is set to 1
                                  "
                                  if a:in_one_line_scope
                                    break
                                  end
                                  let msl_one_line = s:Match(lnum, s:one_line_scope_regex)
                                  if msl_one_line == 0
                                    break
                                  endif
                                endif
                                let lnum = s:PrevNonBlankNonString(lnum - 1)
                              endwhile
                              return msl
                            endfunction
                            
    1              0.000002 function s:RemoveTrailingComments(content)
                              let single = '\/\/\(.*\)\s*$'
                              let multi = '\/\*\(.*\)\*\/\s*$'
                              return substitute(substitute(a:content, single, '', ''), multi, '', '')
                            endfunction
                            
                            " Find if the string is inside var statement (but not the first string)
    1              0.000002 function s:InMultiVarStatement(lnum)
                              let lnum = s:PrevNonBlankNonString(a:lnum - 1)
                            
                            "  let type = synIDattr(synID(lnum, indent(lnum) + 1, 0), 'name')
                            
                              " loop through previous expressions to find a var statement
                              while lnum > 0
                                let line = getline(lnum)
                            
                                " if the line is a js keyword
                                if (line =~ s:js_keywords)
                                  " check if the line is a var stmt
                                  " if the line has a comma first or comma last then we can assume that we
                                  " are in a multiple var statement
                                  if (line =~ s:var_stmt)
                                    return lnum
                                  endif
                            
                                  " other js keywords, not a var
                                  return 0
                                endif
                            
                                let lnum = s:PrevNonBlankNonString(lnum - 1)
                              endwhile
                            
                              " beginning of program, not a var
                              return 0
                            endfunction
                            
                            " Find line above with beginning of the var statement or returns 0 if it's not
                            " this statement
    1              0.000002 function s:GetVarIndent(lnum)
                              let lvar = s:InMultiVarStatement(a:lnum)
                              let prev_lnum = s:PrevNonBlankNonString(a:lnum - 1)
                            
                              if lvar
                                let line = s:RemoveTrailingComments(getline(prev_lnum))
                            
                                " if the previous line doesn't end in a comma, return to regular indent
                                if (line !~ s:comma_last)
                                  return indent(prev_lnum) - shiftwidth()
                                else
                                  return indent(lvar) + shiftwidth()
                                endif
                              endif
                            
                              return -1
                            endfunction
                            
                            
                            " Check if line 'lnum' has more opening brackets than closing ones.
    1              0.000002 function s:LineHasOpeningBrackets(lnum)
                              let open_0 = 0
                              let open_2 = 0
                              let open_4 = 0
                              let line = getline(a:lnum)
                              let pos = match(line, '[][(){}]', 0)
                              while pos != -1
                                if !s:IsInStringOrComment(a:lnum, pos + 1)
                                  let idx = stridx('(){}[]', line[pos])
                                  if idx % 2 == 0
                                    let open_{idx} = open_{idx} + 1
                                  else
                                    let open_{idx - 1} = open_{idx - 1} - 1
                                  endif
                                endif
                                let pos = match(line, '[][(){}]', pos + 1)
                              endwhile
                              return (open_0 > 0) . (open_2 > 0) . (open_4 > 0)
                            endfunction
                            
    1              0.000002 function s:Match(lnum, regex)
                              let col = match(getline(a:lnum), a:regex) + 1
                              return col > 0 && !s:IsInStringOrComment(a:lnum, col) ? col : 0
                            endfunction
                            
    1              0.000002 function s:IndentWithContinuation(lnum, ind, width)
                              " Set up variables to use and search for MSL to the previous line.
                              let p_lnum = a:lnum
                              let lnum = s:GetMSL(a:lnum, 1)
                              let line = getline(lnum)
                            
                              " If the previous line wasn't a MSL and is continuation return its indent.
                              " TODO: the || s:IsInString() thing worries me a bit.
                              if p_lnum != lnum
                                if s:Match(p_lnum,s:continuation_regex)||s:IsInString(p_lnum,strlen(line))
                                  return a:ind
                                endif
                              endif
                            
                              " Set up more variables now that we know we aren't continuation bound.
                              let msl_ind = indent(lnum)
                            
                              " If the previous line ended with [*+/.-=], start a continuation that
                              " indents an extra level.
                              if s:Match(lnum, s:continuation_regex)
                                if lnum == p_lnum
                                  return msl_ind + a:width
                                else
                                  return msl_ind
                                endif
                              endif
                            
                              return a:ind
                            endfunction
                            
    1              0.000002 function s:InOneLineScope(lnum)
                              let msl = s:GetMSL(a:lnum, 1)
                              if msl > 0 && s:Match(msl, s:one_line_scope_regex)
                                return msl
                              endif
                              return 0
                            endfunction
                            
    1              0.000002 function s:ExitingOneLineScope(lnum)
                              let msl = s:GetMSL(a:lnum, 1)
                              if msl > 0
                                " if the current line is in a one line scope ..
                                if s:Match(msl, s:one_line_scope_regex)
                                  return 0
                                else
                                  let prev_msl = s:GetMSL(msl - 1, 1)
                                  if s:Match(prev_msl, s:one_line_scope_regex)
                                    return prev_msl
                                  endif
                                endif
                              endif
                              return 0
                            endfunction
                            
                            " 3. GetTypescriptIndent Function {{{1
                            " =========================
                            
    1              0.000001 function GetTypescriptIndent()
                              " 3.1. Setup {{{2
                              " ----------
                            
                              " Set up variables for restoring position in file.  Could use v:lnum here.
                              let vcol = col('.')
                            
                              " 3.2. Work on the current line {{{2
                              " -----------------------------
                            
                              let ind = -1
                              " Get the current line.
                              let line = getline(v:lnum)
                              " previous nonblank line number
                              let prevline = prevnonblank(v:lnum - 1)
                            
                              " If we got a closing bracket on an empty line, find its match and indent
                              " according to it.  For parentheses we indent to its column - 1, for the
                              " others we indent to the containing line's MSL's level.  Return -1 if fail.
                              let col = matchend(line, '^\s*[],})]')
                              if col > 0 && !s:IsInStringOrComment(v:lnum, col)
                                call cursor(v:lnum, col)
                            
                                let lvar = s:InMultiVarStatement(v:lnum)
                                if lvar
                                  let prevline_contents = s:RemoveTrailingComments(getline(prevline))
                            
                                  " check for comma first
                                  if (line[col - 1] =~ ',')
                                    " if the previous line ends in comma or semicolon don't indent
                                    if (prevline_contents =~ '[;,]\s*$')
                                      return indent(s:GetMSL(line('.'), 0))
                                    " get previous line indent, if it's comma first return prevline indent
                                    elseif (prevline_contents =~ s:comma_first)
                                      return indent(prevline)
                                    " otherwise we indent 1 level
                                    else
                                      return indent(lvar) + shiftwidth()
                                    endif
                                  endif
                                endif
                            
                            
                                let bs = strpart('(){}[]', stridx(')}]', line[col - 1]) * 2, 2)
                                if searchpair(escape(bs[0], '\['), '', bs[1], 'bW', s:skip_expr) > 0
                                  if line[col-1]==')' && col('.') != col('$') - 1
                                    let ind = virtcol('.')-1
                                  else
                                    let ind = indent(s:GetMSL(line('.'), 0))
                                  endif
                                endif
                                return ind
                              endif
                            
                              " If the line is comma first, dedent 1 level
                              if (getline(prevline) =~ s:comma_first)
                                return indent(prevline) - shiftwidth()
                              endif
                            
                              if (line =~ s:ternary)
                                if (getline(prevline) =~ s:ternary_q)
                                  return indent(prevline)
                                else
                                  return indent(prevline) + shiftwidth()
                                endif
                              endif
                            
                              " If we are in a multi-line comment, cindent does the right thing.
                              if s:IsInMultilineComment(v:lnum, 1) && !s:IsLineComment(v:lnum, 1)
                                return cindent(v:lnum)
                              endif
                            
                              " Check for multiple var assignments
                            "  let var_indent = s:GetVarIndent(v:lnum)
                            "  if var_indent >= 0
                            "    return var_indent
                            "  endif
                            
                              " 3.3. Work on the previous line. {{{2
                              " -------------------------------
                            
                              " If the line is empty and the previous nonblank line was a multi-line
                              " comment, use that comment's indent. Deduct one char to account for the
                              " space in ' */'.
                              if line =~ '^\s*$' && s:IsInMultilineComment(prevline, 1)
                                return indent(prevline) - 1
                              endif
                            
                              " Find a non-blank, non-multi-line string line above the current line.
                              let lnum = s:PrevNonBlankNonString(v:lnum - 1)
                            
                              " If the line is empty and inside a string, use the previous line.
                              if line =~ '^\s*$' && lnum != prevline
                                return indent(prevnonblank(v:lnum))
                              endif
                            
                              " At the start of the file use zero indent.
                              if lnum == 0
                                return 0
                              endif
                            
                              " Set up variables for current line.
                              let line = getline(lnum)
                              let ind = indent(lnum)
                            
                              " If the previous line ended with a block opening, add a level of indent.
                              if s:Match(lnum, s:block_regex)
                                return indent(s:GetMSL(lnum, 0)) + shiftwidth()
                              endif
                            
                              " If the previous line contained an opening bracket, and we are still in it,
                              " add indent depending on the bracket type.
                              if line =~ '[[({]'
                                let counts = s:LineHasOpeningBrackets(lnum)
                                if counts[0] == '1' && searchpair('(', '', ')', 'bW', s:skip_expr) > 0
                                  if col('.') + 1 == col('$')
                                    return ind + shiftwidth()
                                  else
                                    return virtcol('.')
                                  endif
                                elseif counts[1] == '1' || counts[2] == '1'
                                  return ind + shiftwidth()
                                else
                                  call cursor(v:lnum, vcol)
                                end
                              endif
                            
                              " 3.4. Work on the MSL line. {{{2
                              " --------------------------
                            
                              let ind_con = ind
                              let ind = s:IndentWithContinuation(lnum, ind_con, shiftwidth())
                            
                              " }}}2
                              "
                              "
                              let ols = s:InOneLineScope(lnum)
                              if ols > 0
                                let ind = ind + shiftwidth()
                              else
                                let ols = s:ExitingOneLineScope(lnum)
                                while ols > 0 && ind > 0
                                  let ind = ind - shiftwidth()
                                  let ols = s:InOneLineScope(ols - 1)
                                endwhile
                              endif
                            
                              return ind
                            endfunction
                            
                            " }}}1
                            
    1              0.000008 let &cpo = s:cpo_save
    1              0.000002 unlet s:cpo_save
                            
    1              0.000002 function! Fixedgq(lnum, count)
                                let l:tw = &tw ? &tw : 80
                            
                                let l:count = a:count
                                let l:first_char = indent(a:lnum) + 1
                            
                                if mode() == 'i' " gq was not pressed, but tw was set
                                    return 1
                                endif
                            
                                " This gq is only meant to do code with strings, not comments
                                if s:IsLineComment(a:lnum, l:first_char) || s:IsInMultilineComment(a:lnum, l:first_char)
                                    return 1
                                endif
                            
                                if len(getline(a:lnum)) < l:tw && l:count == 1 " No need for gq
                                    return 1
                                endif
                            
                                " Put all the lines on one line and do normal splitting after that
                                if l:count > 1
                                    while l:count > 1
                                        let l:count -= 1
                                        normal J
                                    endwhile
                                endif
                            
                                let l:winview = winsaveview()
                            
                                call cursor(a:lnum, l:tw + 1)
                                let orig_breakpoint = searchpairpos(' ', '', '\.', 'bcW', '', a:lnum)
                                call cursor(a:lnum, l:tw + 1)
                                let breakpoint = searchpairpos(' ', '', '\.', 'bcW', s:skip_expr, a:lnum)
                            
                                " No need for special treatment, normal gq handles edgecases better
                                if breakpoint[1] == orig_breakpoint[1]
                                    call winrestview(l:winview)
                                    return 1
                                endif
                            
                                " Try breaking after string
                                if breakpoint[1] <= indent(a:lnum)
                                    call cursor(a:lnum, l:tw + 1)
                                    let breakpoint = searchpairpos('\.', '', ' ', 'cW', s:skip_expr, a:lnum)
                                endif
                            
                            
                                if breakpoint[1] != 0
                                    call feedkeys("r\<CR>")
                                else
                                    let l:count = l:count - 1
                                endif
                            
                                " run gq on new lines
                                if l:count == 1
                                    call feedkeys("gqq")
                                endif
                            
                                return 0
                            endfunction

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\ftplugin\help.vim
Sourced 2 times
Total time:   0.000438
 Self time:   0.000438

count  total (s)   self (s)
                            " Vim filetype plugin file
                            " Language:             Vim help file
                            " Previous Maintainer:  Nikolai Weibull <now@bitwi.se>
                            " Latest Revision:      2018-12-29
                            
    2              0.000023 if exists("b:did_ftplugin")
                              finish
    2              0.000002 endif
    2              0.000008 let b:did_ftplugin = 1
                            
    2              0.000015 let s:cpo_save = &cpo
    2              0.000020 set cpo&vim
                            
    2              0.000005 let b:undo_ftplugin = "setl fo< tw< cole< cocu< keywordprg<"
                            
    2              0.000025 setlocal formatoptions+=tcroql textwidth=78
    2              0.000012 if has("conceal")
    2              0.000015   setlocal cole=2 cocu=nc
    2              0.000002 endif
                            
                            " Prefer Vim help instead of manpages.
    2              0.000006 setlocal keywordprg=:help
                            
    2              0.000006 if !exists('g:no_plugin_maps')
    2              0.000006   function! s:show_toc() abort
                                let bufname = bufname('%')
                                let info = getloclist(0, {'winid': 1})
                                if !empty(info) && getwinvar(info.winid, 'qf_toc') ==# bufname
                                  lopen
                                  return
                                endif
                            
                                let toc = []
                                let lnum = 2
                                let last_line = line('$') - 1
                                let last_added = 0
                                let has_section = 0
                                let has_sub_section = 0
                            
                                while lnum && lnum <= last_line
                                  let level = 0
                                  let add_text = ''
                                  let text = getline(lnum)
                            
                                  if text =~# '^=\+$' && lnum + 1 < last_line
                                    " A de-facto section heading.  Other headings are inferred.
                                    let has_section = 1
                                    let has_sub_section = 0
                                    let lnum = nextnonblank(lnum + 1)
                                    let text = getline(lnum)
                                    let add_text = text
                                    while add_text =~# '\*[^*]\+\*\s*$'
                                      let add_text = matchstr(add_text, '.*\ze\*[^*]\+\*\s*$')
                                    endwhile
                                  elseif text =~# '^[A-Z0-9][-A-ZA-Z0-9 .][-A-Z0-9 .():]*\%([ \t]\+\*.\+\*\)\?$'
                                    " Any line that's yelling is important.
                                    let has_sub_section = 1
                                    let level = has_section
                                    let add_text = matchstr(text, '.\{-}\ze\s*\%([ \t]\+\*.\+\*\)\?$')
                                  elseif text =~# '\~$'
                                        \ && matchstr(text, '^\s*\zs.\{-}\ze\s*\~$') !~# '\t\|\s\{2,}'
                                        \ && getline(lnum - 1) =~# '^\s*<\?$\|^\s*\*.*\*$'
                                        \ && getline(lnum + 1) =~# '^\s*>\?$\|^\s*\*.*\*$'
                                    " These lines could be headers or code examples.  We only want the
                                    " ones that have subsequent lines at the same indent or more.
                                    let l = nextnonblank(lnum + 1)
                                    if getline(l) =~# '\*[^*]\+\*$'
                                      " Ignore tag lines
                                      let l = nextnonblank(l + 1)
                                    endif
                            
                                    if indent(lnum) <= indent(l)
                                      let level = has_section + has_sub_section
                                      let add_text = matchstr(text, '\S.*')
                                    endif
                                  endif
                            
                                  let add_text = substitute(add_text, '\s\+$', '', 'g')
                                  if !empty(add_text) && last_added != lnum
                                    let last_added = lnum
                                    call add(toc, {'bufnr': bufnr('%'), 'lnum': lnum,
                                          \ 'text': repeat('  ', level) . add_text})
                                  endif
                                  let lnum = nextnonblank(lnum + 1)
                                endwhile
                            
                                call setloclist(0, toc, ' ')
                                call setloclist(0, [], 'a', {'title': 'Help TOC'})
                                lopen
                                let w:qf_toc = bufname
                              endfunction
                            
    2              0.000023   nnoremap <silent><buffer> gO :call <sid>show_toc()<cr>
    2              0.000002 endif
                            
    2              0.000018 let &cpo = s:cpo_save
    2              0.000026 unlet s:cpo_save

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\syntax\help.vim
Sourced 2 times
Total time:   0.002676
 Self time:   0.002676

count  total (s)   self (s)
                            " Vim syntax file
                            " Language:	Vim help file
                            " Maintainer:	Bram Moolenaar (Bram@vim.org)
                            " Last Change:	2022 Sep 26
                            
                            " Quit when a (custom) syntax file was already loaded
    2              0.000022 if exists("b:current_syntax")
                              finish
    2              0.000002 endif
                            
    2              0.000019 let s:cpo_save = &cpo
    2              0.000019 set cpo&vim
                            
    2              0.000027 syn match helpHeadline		"^[-A-Z .][-A-Z0-9 .()_]*\ze\(\s\+\*\|$\)"
    2              0.000010 syn match helpSectionDelim	"^===.*===$"
    2              0.000006 syn match helpSectionDelim	"^---.*--$"
    2              0.000012 if has("conceal")
    2              0.000033   syn region helpExample	matchgroup=helpIgnore start=" >$" start="^>$" end="^[^ \t]"me=e-1 end="^<" concealends
                            else
                              syn region helpExample	matchgroup=helpIgnore start=" >$" start="^>$" end="^[^ \t]"me=e-1 end="^<"
    2              0.000002 endif
    2              0.000014 syn match helpHyperTextJump	"\\\@<!|[#-)!+-~]\+|" contains=helpBar
    2              0.000013 syn match helpHyperTextEntry	"\*[#-)!+-~]\+\*\s"he=e-1 contains=helpStar
    2              0.000009 syn match helpHyperTextEntry	"\*[#-)!+-~]\+\*$" contains=helpStar
    2              0.000010 if has("conceal")
    2              0.000014   syn match helpBar		contained "|" conceal
    2              0.000006   syn match helpBacktick	contained "`" conceal
    2              0.000004   syn match helpStar		contained "\*" conceal
                            else
                              syn match helpBar		contained "|"
                              syn match helpBacktick	contained "`"
                              syn match helpStar		contained "\*"
    2              0.000002 endif
    2              0.000007 syn match helpNormal		"|.*====*|"
    2              0.000005 syn match helpNormal		"|||"
    2              0.000006 syn match helpNormal		":|vim:|"	" for :help modeline
    2              0.000012 syn match helpVim		"\<Vim version [0-9][0-9.a-z]*"
    2              0.000009 syn match helpVim		"VIM REFERENCE.*"
    2              0.000007 syn match helpVim		"NVIM REFERENCE.*"
    2              0.000009 syn match helpOption		"'[a-z]\{2,\}'"
    2              0.000007 syn match helpOption		"'t_..'"
    2              0.000005 syn match helpNormal		"'ab'"
    2              0.000012 syn match helpCommand		"`[^` \t]\+`"hs=s+1,he=e-1 contains=helpBacktick
    2              0.000022 syn match helpCommand		"\(^\|[^a-z"[]\)\zs`[^`]\+`\ze\([^a-z\t."']\|$\)"hs=s+1,he=e-1 contains=helpBacktick
    2              0.000011 syn match helpHeader		"\s*\zs.\{-}\ze\s\=\~$" nextgroup=helpIgnore
    2              0.000007 syn match helpGraphic		".* \ze`$" nextgroup=helpIgnore
    2              0.000011 if has("conceal")
    2              0.000005   syn match helpIgnore		"." contained conceal
                            else
                              syn match helpIgnore		"." contained
    2              0.000002 endif
    2              0.000009 syn keyword helpNote		note Note NOTE note: Note: NOTE: Notes Notes:
    2              0.000005 syn keyword helpWarning		WARNING WARNING: Warning:
    2              0.000009 syn keyword helpDeprecated	DEPRECATED DEPRECATED: Deprecated:
    2              0.000007 syn match helpSpecial		"\<N\>"
    2              0.000006 syn match helpSpecial		"\<N\.$"me=e-1
    2              0.000005 syn match helpSpecial		"\<N\.\s"me=e-2
    2              0.000008 syn match helpSpecial		"(N\>"ms=s+1
                            
    2              0.000005 syn match helpSpecial		"\[N]"
                            " avoid highlighting N  N in help.txt
    2              0.000005 syn match helpSpecial		"N  N"he=s+1
    2              0.000005 syn match helpSpecial		"Nth"me=e-2
    2              0.000005 syn match helpSpecial		"N-1"me=e-2
    2              0.000016 syn match helpSpecial		"{[-_a-zA-Z0-9'"*+/:%#=[\]<>.,]\+}"
    2              0.000013 syn match helpSpecial		"\s\[[-a-z^A-Z0-9_]\{2,}]"ms=s+1
    2              0.000008 syn match helpSpecial		"<[-a-zA-Z0-9_]\+>"
    2              0.000005 syn match helpSpecial		"<[SCM]-.>"
    2              0.000005 syn match helpNormal		"<---*>"
    2              0.000006 syn match helpSpecial		"\[range]"
    2              0.000005 syn match helpSpecial		"\[line]"
    2              0.000005 syn match helpSpecial		"\[count]"
    2              0.000007 syn match helpSpecial		"\[offset]"
    2              0.000005 syn match helpSpecial		"\[cmd]"
    2              0.000008 syn match helpSpecial		"\[num]"
    2              0.000005 syn match helpSpecial		"\[+num]"
    2              0.000004 syn match helpSpecial		"\[-num]"
    2              0.000004 syn match helpSpecial		"\[+cmd]"
    2              0.000005 syn match helpSpecial		"\[++opt]"
    2              0.000004 syn match helpSpecial		"\[arg]"
    2              0.000006 syn match helpSpecial		"\[arguments]"
    2              0.000004 syn match helpSpecial		"\[ident]"
    2              0.000004 syn match helpSpecial		"\[addr]"
    2              0.000043 syn match helpSpecial		"\[group]"
                            " Don't highlight [converted] and others that do not have a tag
    2              0.000013 syn match helpNormal		"\[\(readonly\|fifo\|socket\|converted\|crypted\)]"
                            
    2              0.000007 syn match helpSpecial		"CTRL-."
    2              0.000007 syn match helpSpecial		"CTRL-SHIFT-."
    2              0.000006 syn match helpSpecial		"CTRL-Break"
    2              0.000006 syn match helpSpecial		"CTRL-PageUp"
    2              0.000006 syn match helpSpecial		"CTRL-PageDown"
    2              0.000006 syn match helpSpecial		"CTRL-Insert"
    2              0.000005 syn match helpSpecial		"CTRL-Del"
    2              0.000006 syn match helpSpecial		"CTRL-{char}"
    2              0.000005 syn match helpSpecial		"META-."
    2              0.000004 syn match helpSpecial		"ALT-."
                            
                            " Highlight group items in their own color.
    2              0.000011 syn match helpComment		"\t[* ]Comment\t\+[a-z].*"
    2              0.000151 syn match helpConstant		"\t[* ]Constant\t\+[a-z].*"
    2              0.000010 syn match helpString		"\t[* ]String\t\+[a-z].*"
    2              0.000010 syn match helpCharacter		"\t[* ]Character\t\+[a-z].*"
    2              0.000007 syn match helpNumber		"\t[* ]Number\t\+[a-z].*"
    2              0.000007 syn match helpBoolean		"\t[* ]Boolean\t\+[a-z].*"
    2              0.000036 syn match helpFloat		"\t[* ]Float\t\+[a-z].*"
    2              0.000009 syn match helpIdentifier	"\t[* ]Identifier\t\+[a-z].*"
    2              0.000008 syn match helpFunction		"\t[* ]Function\t\+[a-z].*"
    2              0.000009 syn match helpStatement		"\t[* ]Statement\t\+[a-z].*"
    2              0.000009 syn match helpConditional	"\t[* ]Conditional\t\+[a-z].*"
    2              0.000008 syn match helpRepeat		"\t[* ]Repeat\t\+[a-z].*"
    2              0.000007 syn match helpLabel		"\t[* ]Label\t\+[a-z].*"
    2              0.000008 syn match helpOperator		"\t[* ]Operator\t\+["a-z].*"
    2              0.000007 syn match helpKeyword		"\t[* ]Keyword\t\+[a-z].*"
    2              0.000008 syn match helpException		"\t[* ]Exception\t\+[a-z].*"
    2              0.000009 syn match helpPreProc		"\t[* ]PreProc\t\+[a-z].*"
    2              0.000008 syn match helpInclude		"\t[* ]Include\t\+[a-z].*"
    2              0.000007 syn match helpDefine		"\t[* ]Define\t\+[a-z].*"
    2              0.000007 syn match helpMacro		"\t[* ]Macro\t\+[a-z].*"
    2              0.000009 syn match helpPreCondit		"\t[* ]PreCondit\t\+[a-z].*"
    2              0.000009 syn match helpType		"\t[* ]Type\t\+[a-z].*"
    2              0.000008 syn match helpStorageClass	"\t[* ]StorageClass\t\+[a-z].*"
    2              0.000007 syn match helpStructure		"\t[* ]Structure\t\+[a-z].*"
    2              0.000009 syn match helpTypedef		"\t[* ]Typedef\t\+[Aa-z].*"
    2              0.000008 syn match helpSpecial		"\t[* ]Special\t\+[a-z].*"
    2              0.000008 syn match helpSpecialChar	"\t[* ]SpecialChar\t\+[a-z].*"
    2              0.000010 syn match helpTag		"\t[* ]Tag\t\+[a-z].*"
    2              0.000008 syn match helpDelimiter		"\t[* ]Delimiter\t\+[a-z].*"
    2              0.000011 syn match helpSpecialComment	"\t[* ]SpecialComment\t\+[a-z].*"
    2              0.000007 syn match helpDebug		"\t[* ]Debug\t\+[a-z].*"
    2              0.000008 syn match helpUnderlined	"\t[* ]Underlined\t\+[a-z].*"
    2              0.000006 syn match helpError		"\t[* ]Error\t\+[a-z].*"
    2              0.000006 syn match helpTodo		"\t[* ]Todo\t\+[a-z].*"
                            
    2              0.000052 syn match helpURL `\v<(((https?|ftp|gopher)://|(mailto|file|news):)[^' 	<>"]+|(www|web|w3)[a-z0-9_-]*\.[a-z0-9._-]+\.[^' 	<>"]+)[a-zA-Z0-9/]`
                            
                            " Additionally load a language-specific syntax file "help_ab.vim".
    2              0.000031 let s:i = match(expand("%"), '\.\a\ax$')
    2              0.000005 if s:i > 0
                              exe "runtime syntax/help_" . strpart(expand("%"), s:i + 1, 2) . ".vim"
    2              0.000002 endif
                            
                            " Italian
    2              0.000019 if v:lang =~ '\<IT\>' || v:lang =~ '_IT\>' || v:lang =~? "italian"
                              syn keyword helpNote		nota Nota NOTA nota: Nota: NOTA: notare Notare NOTARE notare: Notare: NOTARE:
                              syn match helpSpecial		"Nma"me=e-2
                              syn match helpSpecial		"Nme"me=e-2
                              syn match helpSpecial		"Nmi"me=e-2
                              syn match helpSpecial		"Nmo"me=e-2
                              syn match helpSpecial		"\[interv.]"
    2              0.000002 endif
                            
    2              0.000004 syn sync minlines=40
                            
                            
                            " Define the default highlighting.
                            " Only used when an item doesn't have highlighting yet
    2              0.000006 hi def link helpIgnore		Ignore
    2              0.000004 hi def link helpHyperTextJump	Identifier
    2              0.000003 hi def link helpBar		Ignore
    2              0.000003 hi def link helpBacktick	Ignore
    2              0.000003 hi def link helpStar		Ignore
    2              0.000003 hi def link helpHyperTextEntry	String
    2              0.000003 hi def link helpHeadline	Statement
    2              0.000003 hi def link helpHeader		PreProc
    2              0.000003 hi def link helpSectionDelim	PreProc
    2              0.000002 hi def link helpVim		Identifier
    2              0.000046 hi def link helpCommand		Comment
    2              0.000006 hi def link helpExample		Comment
    2              0.000013 hi def link helpOption		Type
    2              0.000004 hi def link helpSpecial		Special
    2              0.000003 hi def link helpNote		Todo
    2              0.000002 hi def link helpWarning		Todo
    2              0.000002 hi def link helpDeprecated	Todo
                            
    2              0.000002 hi def link helpComment		Comment
    2              0.000009 hi def link helpConstant	Constant
    2              0.000004 hi def link helpString		String
    2              0.000003 hi def link helpCharacter	Character
    2              0.000002 hi def link helpNumber		Number
    2              0.000007 hi def link helpBoolean		Boolean
    2              0.000006 hi def link helpFloat		Float
    2              0.000009 hi def link helpIdentifier	Identifier
    2              0.000007 hi def link helpFunction	Function
    2              0.000014 hi def link helpStatement	Statement
    2              0.000004 hi def link helpConditional	Conditional
    2              0.000002 hi def link helpRepeat		Repeat
    2              0.000002 hi def link helpLabel		Label
    2              0.000002 hi def link helpOperator	Operator
    2              0.000002 hi def link helpKeyword		Keyword
    2              0.000002 hi def link helpException	Exception
    2              0.000002 hi def link helpPreProc		PreProc
    2              0.000002 hi def link helpInclude		Include
    2              0.000002 hi def link helpDefine		Define
    2              0.000002 hi def link helpMacro		Macro
    2              0.000003 hi def link helpPreCondit	PreCondit
    2              0.000003 hi def link helpType		Type
    2              0.000003 hi def link helpStorageClass	StorageClass
    2              0.000002 hi def link helpStructure	Structure
    2              0.000002 hi def link helpTypedef		Typedef
    2              0.000003 hi def link helpSpecialChar	SpecialChar
    2              0.000002 hi def link helpTag		Tag
    2              0.000003 hi def link helpDelimiter	Delimiter
    2              0.000003 hi def link helpSpecialComment	SpecialComment
    2              0.000002 hi def link helpDebug		Debug
    2              0.000003 hi def link helpUnderlined	Underlined
    2              0.000002 hi def link helpError		Error
    2              0.000002 hi def link helpTodo		Todo
    2              0.000002 hi def link helpURL		String
                            
    2              0.000008 let b:current_syntax = "help"
                            
    2              0.000024 let &cpo = s:cpo_save
    2              0.000004 unlet s:cpo_save
                            " vim: ts=8 sw=2

SCRIPT  C:\Users\ds13\AppData\Local\nvim-data\site\pack\packer\start\dial.nvim\autoload\dial\operator.vim
Sourced 1 time
Total time:   0.000072
 Self time:   0.000072

count  total (s)   self (s)
    1              0.000013 function dial#operator#increment_normal(type, ...)
                              lua require("dial.command").operator_normal("increment")
                            endfunction
                            
    1              0.000003 function dial#operator#decrement_normal(type, ...)
                              lua require("dial.command").operator_normal("decrement")
                            endfunction
                            
    1              0.000002 function dial#operator#increment_visual(type, ...)
                              lua require("dial.command").operator_visual("increment", false)
                            endfunction
                            
    1              0.000002 function dial#operator#decrement_visual(type, ...)
                              lua require("dial.command").operator_visual("decrement", false)
                            endfunction
                            
    1              0.000002 function dial#operator#increment_gvisual(type, ...)
                              lua require("dial.command").operator_visual("increment", true)
                            endfunction
                            
    1              0.000002 function dial#operator#decrement_gvisual(type, ...)
                              lua require("dial.command").operator_visual("decrement", true)
                            endfunction

SCRIPT  C:\Users\ds13\AppData\Local\nvim\after\ftplugin\css\css.lua
Sourced 2 times
Total time:   0.000489
 Self time:   0.000489

count  total (s)   self (s)
                            local set_settings = require('utils.setters').set_settings
                            
                            set_settings({
                              shiftwidth = 4, -- Set number of spaces per auto indentation
                              tabstop = 4, -- Number of spaces that a <Tab> in the file counts for.
                            })

SCRIPT  C:\Users\ds13\AppData\Local\nvim-data\site\pack\packer\start\splitjoin.vim\ftplugin\css\splitjoin.vim
Sourced 1 time
Total time:   0.000055
 Self time:   0.000055

count  total (s)   self (s)
    1              0.000016 if !exists('b:splitjoin_split_callbacks')
                              let b:splitjoin_split_callbacks = [
                                    \ 'sj#css#SplitDefinition',
                                    \ 'sj#css#SplitMultilineSelector',
                                    \ ]
    1              0.000001 endif
                            
    1              0.000003 if !exists('b:splitjoin_join_callbacks')
                              let b:splitjoin_join_callbacks = [
                                    \ 'sj#css#JoinDefinition',
                                    \ 'sj#css#JoinMultilineSelector',
                                    \ ]
    1              0.000009 endif

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\ftplugin\css.vim
Sourced 1 time
Total time:   0.000140
 Self time:   0.000140

count  total (s)   self (s)
                            " Vim filetype plugin file
                            " Language:		CSS
                            " Maintainer:		Doug Kearns <dougkearns@gmail.com>
                            " Previous Maintainer:	Nikolai Weibull <now@bitwi.se>
                            " Last Change:		2020 Dec 21
                            
    1              0.000012 if exists("b:did_ftplugin")
                              finish
    1              0.000001 endif
    1              0.000004 let b:did_ftplugin = 1
                            
    1              0.000008 let s:cpo_save = &cpo
    1              0.000010 set cpo&vim
                            
    1              0.000003 let b:undo_ftplugin = "setl com< cms< inc< fo< ofu< isk<"
                            
    1              0.000007 setlocal comments=s1:/*,mb:*,ex:*/ commentstring&
    1              0.000006 setlocal formatoptions-=t formatoptions+=croql
    1              0.000003 setlocal omnifunc=csscomplete#CompleteCSS
    1              0.000033 setlocal iskeyword+=-
                            
    1              0.000004 let &l:include = '^\s*@import\s\+\%(url(\)\='
                            
    1              0.000008 let &cpo = s:cpo_save
    1              0.000012 unlet s:cpo_save

SCRIPT  C:\Users\ds13\scoop\apps\neovim-nightly\current\share\nvim\runtime\autoload\provider\clipboard.vim
Sourced 1 time
Total time:   0.238946
 Self time:   0.000346

count  total (s)   self (s)
                            " The clipboard provider uses shell commands to communicate with the clipboard.
                            " The provider function will only be registered if a supported command is
                            " available.
                            
    1              0.000013 if exists('g:loaded_clipboard_provider')
                              finish
    1              0.000001 endif
                            " Default to 1.  provider#clipboard#Executable() may set 2.
                            " To force a reload:
                            "   :unlet g:loaded_clipboard_provider
                            "   :runtime autoload/provider/clipboard.vim
    1              0.000005 let g:loaded_clipboard_provider = 1
                            
    1              0.000003 let s:copy = {}
    1              0.000002 let s:paste = {}
    1              0.000002 let s:clipboard = {}
                            
                            " When caching is enabled, store the jobid of the xclip/xsel process keeping
                            " ownership of the selection, so we know how long the cache is valid.
    1              0.000006 let s:selection = { 'owner': 0, 'data': [], 'stderr_buffered': v:true }
                            
    1              0.000005 function! s:selection.on_exit(jobid, data, event) abort
                              " At this point this nvim instance might already have launched
                              " a new provider instance. Don't drop ownership in this case.
                              if self.owner == a:jobid
                                let self.owner = 0
                              endif
                              if a:data != 0
                                echohl WarningMsg
                                echomsg 'clipboard: error invoking '.get(self.argv, 0, '?').': '.join(self.stderr)
                                echohl None
                              endif
                            endfunction
                            
    1              0.000006 let s:selections = { '*': s:selection, '+': copy(s:selection) }
                            
    1              0.000003 function! s:try_cmd(cmd, ...) abort
                              let out = systemlist(a:cmd, (a:0 ? a:1 : ['']), 1)
                              if v:shell_error
                                if !exists('s:did_error_try_cmd')
                                  echohl WarningMsg
                                  echomsg "clipboard: error: ".(len(out) ? out[0] : v:shell_error)
                                  echohl None
                                  let s:did_error_try_cmd = 1
                                endif
                                return 0
                              endif
                              return out
                            endfunction
                            
                            " Returns TRUE if `cmd` exits with success, else FALSE.
    1              0.000006 function! s:cmd_ok(cmd) abort
                              call system(a:cmd)
                              return v:shell_error == 0
                            endfunction
                            
    1              0.000002 function! s:split_cmd(cmd) abort
                              return (type(a:cmd) == v:t_string) ? split(a:cmd, " ") : a:cmd
                            endfunction
                            
    1              0.000003 let s:cache_enabled = 1
    1              0.000002 let s:err = ''
                            
    1              0.000002 function! provider#clipboard#Error() abort
                              return s:err
                            endfunction
                            
    1              0.000002 function! provider#clipboard#Executable() abort
                              if exists('g:clipboard')
                                if type({}) isnot# type(g:clipboard)
                                      \ || type({}) isnot# type(get(g:clipboard, 'copy', v:null))
                                      \ || type({}) isnot# type(get(g:clipboard, 'paste', v:null))
                                  let s:err = 'clipboard: invalid g:clipboard'
                                  return ''
                                endif
                            
                                let s:copy = {}
                                let s:copy['+'] = s:split_cmd(get(g:clipboard.copy, '+', v:null))
                                let s:copy['*'] = s:split_cmd(get(g:clipboard.copy, '*', v:null))
                            
                                let s:paste = {}
                                let s:paste['+'] = s:split_cmd(get(g:clipboard.paste, '+', v:null))
                                let s:paste['*'] = s:split_cmd(get(g:clipboard.paste, '*', v:null))
                            
                                let s:cache_enabled = get(g:clipboard, 'cache_enabled', 0)
                                return get(g:clipboard, 'name', 'g:clipboard')
                              elseif has('mac')
                                let s:copy['+'] = ['pbcopy']
                                let s:paste['+'] = ['pbpaste']
                                let s:copy['*'] = s:copy['+']
                                let s:paste['*'] = s:paste['+']
                                let s:cache_enabled = 0
                                return 'pbcopy'
                              elseif !empty($WAYLAND_DISPLAY) && executable('wl-copy') && executable('wl-paste')
                                let s:copy['+'] = ['wl-copy', '--foreground', '--type', 'text/plain']
                                let s:paste['+'] = ['wl-paste', '--no-newline']
                                let s:copy['*'] = ['wl-copy', '--foreground', '--primary', '--type', 'text/plain']
                                let s:paste['*'] = ['wl-paste', '--no-newline', '--primary']
                                return 'wl-copy'
                              elseif !empty($DISPLAY) && executable('xclip')
                                let s:copy['+'] = ['xclip', '-quiet', '-i', '-selection', 'clipboard']
                                let s:paste['+'] = ['xclip', '-o', '-selection', 'clipboard']
                                let s:copy['*'] = ['xclip', '-quiet', '-i', '-selection', 'primary']
                                let s:paste['*'] = ['xclip', '-o', '-selection', 'primary']
                                return 'xclip'
                              elseif !empty($DISPLAY) && executable('xsel') && s:cmd_ok('xsel -o -b')
                                let s:copy['+'] = ['xsel', '--nodetach', '-i', '-b']
                                let s:paste['+'] = ['xsel', '-o', '-b']
                                let s:copy['*'] = ['xsel', '--nodetach', '-i', '-p']
                                let s:paste['*'] = ['xsel', '-o', '-p']
                                return 'xsel'
                              elseif executable('lemonade')
                                let s:copy['+'] = ['lemonade', 'copy']
                                let s:paste['+'] = ['lemonade', 'paste']
                                let s:copy['*'] = ['lemonade', 'copy']
                                let s:paste['*'] = ['lemonade', 'paste']
                                return 'lemonade'
                              elseif executable('doitclient')
                                let s:copy['+'] = ['doitclient', 'wclip']
                                let s:paste['+'] = ['doitclient', 'wclip', '-r']
                                let s:copy['*'] = s:copy['+']
                                let s:paste['*'] = s:paste['+']
                                return 'doitclient'
                              elseif executable('win32yank.exe')
                                if has('wsl') && getftype(exepath('win32yank.exe')) == 'link'
                                  let win32yank = resolve(exepath('win32yank.exe'))
                                else
                                  let win32yank = 'win32yank.exe'
                                endif
                                let s:copy['+'] = [win32yank, '-i', '--crlf']
                                let s:paste['+'] = [win32yank, '-o', '--lf']
                                let s:copy['*'] = s:copy['+']
                                let s:paste['*'] = s:paste['+']
                                return 'win32yank'
                              elseif executable('termux-clipboard-set')
                                let s:copy['+'] = ['termux-clipboard-set']
                                let s:paste['+'] = ['termux-clipboard-get']
                                let s:copy['*'] = s:copy['+']
                                let s:paste['*'] = s:paste['+']
                                return 'termux-clipboard'
                              elseif !empty($TMUX) && executable('tmux')
                                let s:copy['+'] = ['tmux', 'load-buffer', '-']
                                let s:paste['+'] = ['tmux', 'save-buffer', '-']
                                let s:copy['*'] = s:copy['+']
                                let s:paste['*'] = s:paste['+']
                                return 'tmux'
                              endif
                            
                              let s:err = 'clipboard: No clipboard tool. :help clipboard'
                              return ''
                            endfunction
                            
    1              0.000002 function! s:clipboard.get(reg) abort
                              if type(s:paste[a:reg]) == v:t_func
                                return s:paste[a:reg]()
                              elseif s:selections[a:reg].owner > 0
                                return s:selections[a:reg].data
                              end
                            
                              let clipboard_data = s:try_cmd(s:paste[a:reg])
                              if match(&clipboard, '\v(unnamed|unnamedplus)') >= 0
                                    \ && type(clipboard_data) == v:t_list
                                    \ && get(s:selections[a:reg].data, 0, []) ==# clipboard_data
                                " When system clipboard return is same as our cache return the cache
                                " as it contains regtype information
                                return s:selections[a:reg].data
                              end
                              return clipboard_data
                            endfunction
                            
    1              0.000002 function! s:clipboard.set(lines, regtype, reg) abort
                              if a:reg == '"'
                                call s:clipboard.set(a:lines,a:regtype,'+')
                                if s:copy['*'] != s:copy['+']
                                  call s:clipboard.set(a:lines,a:regtype,'*')
                                end
                                return 0
                              end
                            
                              if type(s:copy[a:reg]) == v:t_func
                                call s:copy[a:reg](a:lines, a:regtype)
                                return 0
                              end
                            
                              if s:cache_enabled == 0
                                call s:try_cmd(s:copy[a:reg], a:lines)
                                "Cache it anyway we can compare it later to get regtype of the yank
                                let s:selections[a:reg] = copy(s:selection)
                                let s:selections[a:reg].data = [a:lines, a:regtype]
                                return 0
                              end
                            
                              if s:selections[a:reg].owner > 0
                                let prev_job = s:selections[a:reg].owner
                              end
                              let s:selections[a:reg] = copy(s:selection)
                              let selection = s:selections[a:reg]
                              let selection.data = [a:lines, a:regtype]
                              let selection.argv = s:copy[a:reg]
                              let selection.detach = s:cache_enabled
                              let selection.cwd = "/"
                              let jobid = jobstart(selection.argv, selection)
                              if jobid > 0
                                call jobsend(jobid, a:lines)
                                call jobclose(jobid, 'stdin')
                                " xclip does not close stdout when receiving input via stdin
                                if selection.argv[0] ==# 'xclip'
                                  call jobclose(jobid, 'stdout')
                                endif
                                let selection.owner = jobid
                                let ret = 1
                              else
                                echohl WarningMsg
                                echomsg 'clipboard: failed to execute: '.(s:copy[a:reg])
                                echohl None
                                let ret = 1
                              endif
                            
                              " The previous provider instance should exit when the new one takes
                              " ownership, but kill it to be sure we don't fill up the job table.
                              if exists('prev_job')
                                call timer_start(1000, {... ->
                                      \ jobwait([prev_job], 0)[0] == -1
                                      \ && jobstop(prev_job)})
                              endif
                            
                              return ret
                            endfunction
                            
    1              0.000003 function! provider#clipboard#Call(method, args) abort
                              if get(s:, 'here', v:false)  " Clipboard provider must not recurse. #7184
                                return 0
                              endif
                              let s:here = v:true
                              try
                                return call(s:clipboard[a:method],a:args,s:clipboard)
                              finally
                                let s:here = v:false
                              endtry
                            endfunction
                            
                            " eval_has_provider() decides based on this variable.
    1   0.238628   0.000028 let g:loaded_clipboard_provider = empty(provider#clipboard#Executable()) ? 1 : 2

SCRIPT  C:\Users\ds13\AppData\Local\nvim\lua\init.lua
Sourced 2 times
Total time:   0.142904
 Self time:   0.142904

count  total (s)   self (s)
                            package.path = package.path .. ';' .. require('constants.env').NVIM_AFTER
                            require('general_settings')
                            require('config.commands')
                            require('autocommands')
                            local colorschemas = require('config.theme')
                            require('ds_omega.utils').load_coloscheme(
                              colorschemas.COLORSCHEME_NAME,
                              colorschemas.BACKUP_COLORSCHEME_NAME,
                              colorschemas.FALLBACK_COLORSCHEME_NAME
                            )
                            require('plugins')

FUNCTION  nvim_treesitter#indent()
    Defined: ~\AppData\Local\nvim-data\site\pack\packer\start\nvim-treesitter\autoload\nvim_treesitter.vim:25
Called 39 times
Total time:   0.255673
 Self time:   0.255673

count  total (s)   self (s)
   39              0.255581 	return luaeval(printf('require"nvim-treesitter.indent".get_indent(%d)', v:lnum))

FUNCTION  dial#operator#increment_normal()
    Defined: ~\AppData\Local\nvim-data\site\pack\packer\start\dial.nvim\autoload\dial\operator.vim:1
Called 4 times
Total time:   0.001804
 Self time:   0.001804

count  total (s)   self (s)
    4              0.001796   lua require("dial.command").operator_normal("increment")

FUNCTION  VimFtpluginUndo()
    Defined: ~\scoop\apps\neovim-nightly\current\share\nvim\runtime\ftplugin\vim.vim:18
Called 1 time
Total time:   0.000096
 Self time:   0.000096

count  total (s)   self (s)
    1              0.000060     setl fo< isk< com< tw< commentstring< keywordprg<
    1              0.000003     if exists('b:did_add_maps')
    1              0.000006       silent! nunmap <buffer> [[
    1              0.000002       silent! vunmap <buffer> [[
    1              0.000002       silent! nunmap <buffer> ]]
    1              0.000001       silent! vunmap <buffer> ]]
    1              0.000001       silent! nunmap <buffer> []
    1              0.000001       silent! vunmap <buffer> []
    1              0.000001       silent! nunmap <buffer> ][
    1              0.000001       silent! vunmap <buffer> ][
    1              0.000001       silent! nunmap <buffer> ]"
    1              0.000001       silent! vunmap <buffer> ]"
    1              0.000001       silent! nunmap <buffer> ["
    1              0.000001       silent! vunmap <buffer> ["
    1              0.000001      endif
    1              0.000007     unlet! b:match_ignorecase b:match_words b:match_skip b:did_add_maps

FUNCTION  repeat#set()
    Defined: ~\AppData\Local\nvim-data\site\pack\packer\opt\vim-repeat\autoload\repeat.vim:62
Called 4 times
Total time:   0.000190
 Self time:   0.000190

count  total (s)   self (s)
    4              0.000010     let g:repeat_sequence = a:sequence
    4              0.000010     let g:repeat_count = a:0 ? a:1 : v:count
    4              0.000008     let g:repeat_tick = b:changedtick
    4              0.000010     augroup repeat_custom_motion
    4              0.000092         autocmd!
    4              0.000048         autocmd CursorMoved <buffer> let g:repeat_tick = b:changedtick | autocmd! repeat_custom_motion
    4              0.000004     augroup END

FUNCTION  <SNR>128_default_register()
    Defined: ~\AppData\Local\nvim-data\site\pack\packer\opt\vim-repeat\autoload\repeat.vim:77
Called 1 time
Total time:   0.000019
 Self time:   0.000019

count  total (s)   self (s)
    1              0.000008     let values = split(&clipboard, ',')
    1              0.000003     if index(values, 'unnamedplus') != -1
                                    return '+'
    1              0.000003     elseif index(values, 'unnamed') != -1
                                    return '*'
    1              0.000000     else
    1              0.000001         return '"'
                                endif

FUNCTION  <SNR>65_CursorHoldUpdate()
    Defined: ~\AppData\Local\nvim-data\site\pack\packer\start\vim-devicons\plugin\webdevicons.vim:409
Called 48 times
Total time:   0.000944
 Self time:   0.000944

count  total (s)   self (s)
   48              0.000330   if g:NERDTreeUpdateOnCursorHold != 1 || g:NERDTreeGitStatusUpdateOnCursorHold != 1
                                return
   48              0.000046   endif
                            
   48              0.000276   if !exists('g:NERDTree') || !g:NERDTree.IsOpen()
   48              0.000041     return
                              endif
                            
                              " Do not update when a special buffer is selected
                              if !empty(&l:buftype)
                                return
                              endif
                            
                              " winnr need to make focus go to opened file
                              " CursorToTreeWin needed to avoid error on opening file
                              let l:winnr = winnr()
                              let l:altwinnr = winnr('#')
                            
                              call g:NERDTree.CursorToTreeWin()
                              call b:NERDTree.root.refreshFlags()
                              call NERDTreeRender()
                            
                              exec l:altwinnr . 'wincmd w'
                              exec l:winnr . 'wincmd w'

FUNCTION  <SNR>163_try_cmd()
    Defined: ~\scoop\apps\neovim-nightly\current\share\nvim\runtime\autoload\provider\clipboard.vim:37
Called 4 times
Total time:   0.539679
 Self time:   0.310534

count  total (s)   self (s)
    4   0.539570   0.310425   let out = systemlist(a:cmd, (a:0 ? a:1 : ['']), 1)
    4              0.000026   if v:shell_error
                                if !exists('s:did_error_try_cmd')
                                  echohl WarningMsg
                                  echomsg "clipboard: error: ".(len(out) ? out[0] : v:shell_error)
                                  echohl None
                                  let s:did_error_try_cmd = 1
                                endif
                                return 0
    4              0.000002   endif
    4              0.000006   return out

FUNCTION  jupyter_ascending#sync()
    Defined: ~\AppData\Local\nvim-data\site\pack\packer\start\jupyter_ascending.vim\autoload\jupyter_ascending.vim:17
Called 47 times
Total time:   0.010210
 Self time:   0.010210

count  total (s)   self (s)
   47              0.008742   let file_name = expand("%:p")
                            
   47              0.001055   if match(file_name, g:jupyter_ascending_match_pattern) < 0
   47              0.000080     return
                              endif
                            
                              let command_string = printf( "%s -m jupyter_ascending.requests.sync --filename '%s'", g:jupyter_ascending_python_executable, file_name )
                            
                              call s:execute(command_string)

FUNCTION  <SNR>65_DevIconsGetArtifactFix()
    Defined: ~\AppData\Local\nvim-data\site\pack\packer\start\vim-devicons\plugin\webdevicons.vim:554
Called 156492 times
Total time:   1.819661
 Self time:   1.819661

count  total (s)   self (s)
156492              0.342631   if g:DevIconsAppendArtifactFix == 1
                                let artifactFix = g:DevIconsArtifactFixChar
156492              0.101081   else
156492              0.302370     let artifactFix = ''
156492              0.108210   endif
                            
156492              0.338420   return artifactFix

FUNCTION  repeat#wrap()
    Defined: ~\AppData\Local\nvim-data\site\pack\packer\opt\vim-repeat\autoload\repeat.vim:137
Called 11 times
Total time:   0.000701
 Self time:   0.000701

count  total (s)   self (s)
   11              0.000061     let preserve = (g:repeat_tick == b:changedtick)
   11              0.000085     call feedkeys((a:count ? a:count : '').a:command, 'n')
   11              0.000459     exe (&foldopen =~# 'undo\|all' ? 'norm! zv' : '')
   11              0.000023     if preserve
                                    let g:repeat_tick = b:changedtick
   11              0.000015     endif

FUNCTION  WebDevIconsGetFileTypeSymbol()
    Defined: ~\AppData\Local\nvim-data\site\pack\packer\start\vim-devicons\plugin\webdevicons.vim:503
Called 156492 times
Total time:  43.005778
 Self time:  41.186117

count  total (s)   self (s)
156492              1.496707   if a:0 == 0
                                let fileNodeExtension = !empty(expand('%:e')) ? expand('%:e') : &filetype
                                let fileNode = expand('%:t')
                                let isDirectory = 0
156492              0.187904   else
156492              1.247818     let fileNodeExtension = fnamemodify(a:1, ':e')
156492              0.619523     let fileNode = fnamemodify(a:1, ':t')
156492              0.233431     if a:0 > 1
                                  let isDirectory = a:2
156492              0.105277     else
156492              0.242952       let isDirectory = 0
156492              0.142957     endif
156492              0.072247   endif
                            
156492              0.403023   if isDirectory == 0 || g:DevIconsEnableFolderPatternMatching
                            
156492              0.589472     let symbol = g:WebDevIconsUnicodeDecorateFileNodesDefaultSymbol
156492              0.649575     let fileNodeExtension = tolower(fileNodeExtension)
156492              0.471989     let fileNode = tolower(fileNode)
                            
1564920              5.207283     for [pattern, glyph] in items(g:WebDevIconsUnicodeDecorateFileNodesPatternSymbols)
1408428             13.295583       if match(fileNode, pattern) != -1
                                    let symbol = glyph
                                    break
1408428              0.702575       endif
1564920              1.041130     endfor
                            
156492              0.542145     if symbol == g:WebDevIconsUnicodeDecorateFileNodesDefaultSymbol
156492              0.642848       if has_key(g:WebDevIconsUnicodeDecorateFileNodesExactSymbols, fileNode)
                                    let symbol = g:WebDevIconsUnicodeDecorateFileNodesExactSymbols[fileNode]
156492              1.336088       elseif ((isDirectory == 1 && g:DevIconsEnableFolderExtensionPatternMatching) || isDirectory == 0) && has_key(g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols, fileNodeExtension)
123647              0.510165         let symbol = g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols[fileNodeExtension]
32845              0.046152       elseif isDirectory == 1
                                    let symbol = g:WebDevIconsUnicodeDecorateFolderNodesDefaultSymbol
156492              0.081149       endif
156492              0.076098     endif
                            
                              else
                                let symbol = g:WebDevIconsUnicodeDecorateFolderNodesDefaultSymbol
156492              0.081931   endif
                            
156492   3.789822   1.970161   let artifactFix = s:DevIconsGetArtifactFix()
                            
156492              0.371272   return symbol . artifactFix
                            

FUNCTION  repeat#run()
    Defined: ~\AppData\Local\nvim-data\site\pack\packer\opt\vim-repeat\autoload\repeat.vim:88
Called 2 times
Total time:   0.000179
 Self time:   0.000160

count  total (s)   self (s)
    2              0.000009     let s:errmsg = ''
    2              0.000003     try
    2              0.000005         if g:repeat_tick == b:changedtick
    1              0.000002             let r = ''
    1              0.000007             if g:repeat_reg[0] ==# g:repeat_sequence && !empty(g:repeat_reg[1])
                                            " Take the original register, unless another (non-default, we
                                            " unfortunately cannot detect no vs. a given default register)
                                            " register has been supplied to the repeat command (as an
                                            " explicit override).
    1   0.000031   0.000012                 let regname = v:register ==# s:default_register() ? g:repeat_reg[1] : v:register
    1              0.000002                 if regname ==# '='
                                                " This causes a re-evaluation of the expression on repeat, which
                                                " is what we want.
                                                let r = '"=' . getreg('=', 1) . "\<CR>"
    1              0.000001                 else
    1              0.000002                     let r = '"' . regname
    1              0.000001                 endif
    1              0.000000             endif
                            
    1              0.000002             let c = g:repeat_count
    1              0.000002             let s = g:repeat_sequence
    1              0.000003             let cnt = c == -1 ? "" : (a:count ? a:count : (c ? c : ''))
    1              0.000005             if ((v:version == 703 && has('patch100')) || (v:version == 704 && !has('patch601')))
                                            exe 'norm ' . r . cnt . s
    1              0.000001             elseif v:version <= 703
                                            call feedkeys(r . cnt, 'n')
                                            call feedkeys(s, '')
    1              0.000000             else
    1              0.000005                 call feedkeys(s, 'i')
    1              0.000003                 call feedkeys(r . cnt, 'ni')
    1              0.000000             endif
    1              0.000000         else
    1              0.000004             if ((v:version == 703 && has('patch100')) || (v:version == 704 && !has('patch601')))
                                            exe 'norm! '.(a:count ? a:count : '') . '.'
    1              0.000000             else
    1              0.000005                 call feedkeys((a:count ? a:count : '') . '.', 'ni')
    1              0.000001             endif
    2              0.000001         endif
                                catch /^Vim(normal):/
                                    let s:errmsg = v:errmsg
                                    return 0
    2              0.000002     endtry
    2              0.000002     return 1

FUNCTION  wordmotion#init()
    Defined: ~\AppData\Local\nvim-data\site\pack\packer\opt\vim-wordmotion\autoload\wordmotion.vim:1
Called 1 time
Total time:   0.000504
 Self time:   0.000313

count  total (s)   self (s)
    1              0.000005 	let l:_ = {}
                            
    1              0.000003 	function l:_.get(name, default)
                            		let l:spaces = get(g:, a:name, a:default)
                            		if type(l:spaces) == type('')
                            			let l:spaces = split(l:spaces, '\zs')
                            		endif
                            		call uniq(sort(l:spaces))
                            		if has('patch-7.4.2044')
                            			call filter(l:spaces, {_, val -> !empty(l:val)})
                            		else
                            			call filter(l:spaces, '!empty(v:val)')
                            		endif
                            		let l:i = index(l:spaces, '\')
                            		if l:i != -1
                            			let l:spaces[l:i] = '\\'
                            		endif
                            		for l:i in range(len(l:spaces))
                            			if len(l:spaces[l:i]) == 1
                            				let l:spaces[l:i] = '\V'.l:spaces[l:i].'\m'
                            			endif
                            		endfor
                            		return l:spaces
                            	endfunction
                            
    1              0.000001 	function l:_.or(list)
                            		return '\%(\%('.join(a:list, '\)\|\%(').'\)\)'
                            	endfunction
                            
    1              0.000001 	function l:_.not(not)
                            		return '\%('.a:not.'\@!.\)'
                            	endfunction
                            
    1              0.000001 	function l:_.between(s, w)
                            		let l:before = '\%('.a:w.a:s.'*\)\@<='
                            		let l:after = '\%('.a:s.'*'.a:w.'\)\@='
                            		return l:before.a:s.l:after
                            	endfunction
                            
                            	" [:alpha:] and [:alnum:] are ASCII only
    1              0.000002 	let l:alpha = '[[:lower:][:upper:]]'
    1              0.000002 	let l:alnum = '[[:lower:][:upper:][:digit:]]'
    1              0.000001 	let l:ss = '[[:space:]]'
                            
    1   0.000019   0.000009 	let l:hyphen = l:_.between('-', l:alpha)
    1   0.000013   0.000005 	let l:underscore = l:_.between('_', l:alnum)
    1   0.000091   0.000008 	let l:spaces = l:_.get('wordmotion_spaces', [l:hyphen, l:underscore])
    1   0.000147   0.000139 	let s:s = call(l:_.or, [[l:ss] + l:spaces])
    1   0.000039   0.000036 	let s:S = l:_.not(s:s)
                            
    1   0.000062   0.000005 	let l:uspaces = l:_.get('wordmotion_uppercase_spaces', [])
    1   0.000011   0.000007 	let s:us = call(l:_.or, [[l:ss] + l:uspaces])
    1   0.000006   0.000004 	let s:uS = l:_.not(s:us)
                            
    1              0.000001 	let l:a = l:alnum
    1              0.000001 	let l:d = '[[:digit:]]'
    1              0.000001 	let l:p = '[[:print:]]'
    1              0.000001 	let l:l = '[[:lower:]]'
    1              0.000001 	let l:u = '[[:upper:]]'
    1              0.000001 	let l:x = '[[:xdigit:]]'
                            
                            	" set complement
    1              0.000002 	function l:_.C(set, ...)
                            		return '\%(\%('.join(a:000, '\|').'\)\@!'.a:set.'\)'
                            	endfunction
                            
    1              0.000004 	let l:words = get(g:, 'wordmotion_extra', [])
    1              0.000005 	call add(l:words, l:u.l:l.'\+')              " CamelCase
    1              0.000004 	call add(l:words, l:u.'\+\ze'.l:u.l:l)       " ACRONYMSBeforeCamelCase
    1              0.000002 	call add(l:words, l:u.'\+')                  " UPPERCASE
    1              0.000002 	call add(l:words, l:l.'\+')                  " lowercase
    1              0.000003 	call add(l:words, '#'.l:x.'\+\>')            " #0F0F0F
    1              0.000003 	call add(l:words, '\<0[xX]'.l:x.'\+\>')      " 0x00 0Xff
    1              0.000002 	call add(l:words, '\<0[oO][0-7]\+\>')        " 0o00 0O77
    1              0.000002 	call add(l:words, '\<0[bB][01]\+\>')         " 0b00 0B11
    1              0.000002 	call add(l:words, l:d.'\+')                  " 1234 5678
    1   0.000016   0.000008 	call add(l:words, l:_.C(l:p, l:a, s:s).'\+') " other printable characters
    1              0.000002 	call add(l:words, '\%^')                     " start of file
    1              0.000002 	call add(l:words, '\%$')                     " end of file
    1   0.000013   0.000005 	let s:word = call(l:_.or, [l:words])

FUNCTION  <SNR>120_setup_toc()
    Defined: ~\scoop\apps\neovim-nightly\current\share\nvim\runtime\ftplugin\qf.vim:20
Called 1 time
Total time:   0.000009
 Self time:   0.000009

count  total (s)   self (s)
    1              0.000006   if get(w:, 'quickfix_title') !~# '\<TOC$' || &syntax != 'qf'
    1              0.000001     return
                              endif
                            
                              let list = getloclist(0)
                              if empty(list)
                                return
                              endif
                            
                              let bufnr = list[0].bufnr
                              setlocal modifiable
                              silent %delete _
                              call setline(1, map(list, 'v:val.text'))
                              setlocal nomodifiable nomodified
                              let &syntax = getbufvar(bufnr, '&syntax')

FUNCTION  repeat#setreg()
    Defined: ~\AppData\Local\nvim-data\site\pack\packer\opt\vim-repeat\autoload\repeat.vim:72
Called 4 times
Total time:   0.000053
 Self time:   0.000053

count  total (s)   self (s)
    4              0.000047     let g:repeat_reg = [a:sequence, a:register]

FUNCTION  <SNR>116_install_plugin()
    Defined: ~\AppData\Local\nvim-data\site\pack\packer\opt\emmet-vim\plugin\emmet.vim:98
Called 2 times
Total time:   0.011044
 Self time:   0.011044

count  total (s)   self (s)
    2              0.000009   let buffer = a:buffer ? '<buffer>' : ''
    2              0.002739   let items = [ {'mode': 'i', 'var': 'user_emmet_expandabbr_key', 'key': ',', 'plug': 'emmet-expand-abbr', 'func': '<c-r>=emmet#util#closePopup()<cr><c-r>=emmet#expandAbbr(0,"")<cr>'}, {'mode': 'n', 'var': 'user_emmet_expandabbr_key', 'key': ',', 'plug': 'emmet-expand-abbr', 'func': ':call emmet#expandAbbr(3,"")<cr>'}, {'mode': 'v', 'var': 'user_emmet_expandabbr_key', 'key': ',', 'plug': 'emmet-expand-abbr', 'func': ':call emmet#expandAbbr(2,"")<cr>'}, {'mode': 'i', 'var': 'user_emmet_expandword_key', 'key': ';', 'plug': 'emmet-expand-word', 'func': '<c-r>=emmet#util#closePopup()<cr><c-r>=emmet#expandAbbr(1,"")<cr>'}, {'mode': 'n', 'var': 'user_emmet_expandword_key', 'key': ';', 'plug': 'emmet-expand-word', 'func': ':call emmet#expandAbbr(1,"")<cr>'}, {'mode': 'i', 'var': 'user_emmet_update_tag', 'key': 'u', 'plug': 'emmet-update-tag', 'func': '<c-r>=emmet#util#closePopup()<cr><c-r>=emmet#updateTag()<cr>'}, {'mode': 'n', 'var': 'user_emmet_update_tag', 'key': 'u', 'plug': 'emmet-update-tag', 'func': ':call emmet#updateTag()<cr>'}, {'mode': 'i', 'var': 'user_emmet_balancetaginward_key', 'key': 'd', 'plug': 'emmet-balance-tag-inward', 'func': '<esc>:call emmet#balanceTag(1)<cr>'}, {'mode': 'n', 'var': 'user_emmet_balancetaginward_key', 'key': 'd', 'plug': 'emmet-balance-tag-inward', 'func': ':call emmet#balanceTag(1)<cr>'}, {'mode': 'v', 'var': 'user_emmet_balancetaginward_key', 'key': 'd', 'plug': 'emmet-balance-tag-inward', 'func': '<esc>:call emmet#balanceTag(1)<cr>'}, {'mode': 'i', 'var': 'user_emmet_balancetagoutward_key', 'key': 'D', 'plug': 'emmet-balance-tag-outword', 'func': '<esc>:call emmet#balanceTag(-1)<cr>'}, {'mode': 'n', 'var': 'user_emmet_balancetagoutward_key', 'key': 'D', 'plug': 'emmet-balance-tag-outword', 'func': ':call emmet#balanceTag(-1)<cr>'}, {'mode': 'v', 'var': 'user_emmet_balancetagoutward_key', 'key': 'D', 'plug': 'emmet-balance-tag-outword', 'func': '<esc>:call emmet#balanceTag(-1)<cr>'}, {'mode': 'i', 'var': 'user_emmet_next_key', 'key': 'n', 'plug': 'emmet-move-next', 'func': '<c-r>=emmet#util#closePopup()<cr><c-r>=emmet#moveNextPrev(0)<cr>'}, {'mode': 'n', 'var': 'user_emmet_next_key', 'key': 'n', 'plug': 'emmet-move-next', 'func': ':call emmet#moveNextPrev(0)<cr>'}, {'mode': 'i', 'var': 'user_emmet_prev_key', 'key': 'N', 'plug': 'emmet-move-prev', 'func': '<c-r>=emmet#util#closePopup()<cr><c-r>=emmet#moveNextPrev(1)<cr>'}, {'mode': 'n', 'var': 'user_emmet_prev_key', 'key': 'N', 'plug': 'emmet-move-prev', 'func': ':call emmet#moveNextPrev(1)<cr>'}, {'mode': 'i', 'var': '', 'key': '', 'plug': 'emmet-move-next-item', 'func': '<esc>:call emmet#moveNextPrevItem(0)<cr>'}, {'mode': 'n', 'var': '', 'key': '', 'plug': 'emmet-move-next-item', 'func': ':call emmet#moveNextPrevItem(0)<cr>'}, {'mode': 'i', 'var': '', 'key': '', 'plug': 'emmet-move-prev-item', 'func': '<esc>:call emmet#moveNextPrevItem(1)<cr>'}, {'mode': 'n', 'var': '', 'key': '', 'plug': 'emmet-move-prev-item', 'func': ':call emmet#moveNextPrevItem(1)<cr>'}, {'mode': 'i', 'var': 'user_emmet_imagesize_key', 'key': 'i', 'plug': 'emmet-image-size', 'func': '<c-r>=emmet#util#closePopup()<cr><c-r>=emmet#imageSize()<cr>'}, {'mode': 'n', 'var': 'user_emmet_imagesize_key', 'key': 'i', 'plug': 'emmet-image-size', 'func': ':call emmet#imageSize()<cr>'}, {'mode': 'i', 'var': 'user_emmet_imageencode_key', 'key': 'I', 'plug': 'emmet-image-encode', 'func': '<c-r>=emmet#util#closePopup()<cr><c-r>=emmet#imageEncode()<cr>'}, {'mode': 'n', 'var': 'user_emmet_imageencode_key', 'key': 'I', 'plug': 'emmet-image-encode', 'func': ':call emmet#imageEncode()<cr>'}, {'mode': 'i', 'var': 'user_emmet_togglecomment_key', 'key': '/', 'plug': 'emmet-toggle-comment', 'func': '<c-r>=emmet#util#closePopup()<cr><c-r>=emmet#toggleComment()<cr>'}, {'mode': 'n', 'var': 'user_emmet_togglecomment_key', 'key': '/', 'plug': 'emmet-toggle-comment', 'func': ':call emmet#toggleComment()<cr>'}, {'mode': 'i', 'var': 'user_emmet_splitjointag_key', 'key': 'j', 'plug': 'emmet-split-join-tag', 'func': '<esc>:call emmet#splitJoinTag()<cr>'}, {'mode': 'n', 'var': 'user_emmet_splitjointag_key', 'key': 'j', 'plug': 'emmet-split-join-tag', 'func': ':call emmet#splitJoinTag()<cr>'}, {'mode': 'i', 'var': 'user_emmet_removetag_key', 'key': 'k', 'plug': 'emmet-remove-tag', 'func': '<c-r>=emmet#util#closePopup()<cr><c-r>=emmet#removeTag()<cr>'}, {'mode': 'n', 'var': 'user_emmet_removetag_key', 'key': 'k', 'plug': 'emmet-remove-tag', 'func': ':call emmet#removeTag()<cr>'}, {'mode': 'i', 'var': 'user_emmet_anchorizeurl_key', 'key': 'a', 'plug': 'emmet-anchorize-url', 'func': '<c-r>=emmet#util#closePopup()<cr><c-r>=emmet#anchorizeURL(0)<cr>'}, {'mode': 'n', 'var': 'user_emmet_anchorizeurl_key', 'key': 'a', 'plug': 'emmet-anchorize-url', 'func': ':call emmet#anchorizeURL(0)<cr>'}, {'mode': 'i', 'var': 'user_emmet_anchorizesummary_key', 'key': 'A', 'plug': 'emmet-anchorize-summary', 'func': '<c-r>=emmet#util#closePopup()<cr><c-r>=emmet#anchorizeURL(1)<cr>'}, {'mode': 'n', 'var': 'user_emmet_anchorizesummary_key', 'key': 'A', 'plug': 'emmet-anchorize-summary', 'func': ':call emmet#anchorizeURL(1)<cr>'}, {'mode': 'i', 'var': 'user_emmet_mergelines_key', 'key': 'm', 'plug': 'emmet-merge-lines', 'func': '<c-r>=emmet#util#closePopup()<cr><c-r>=emmet#mergeLines()<cr>'}, {'mode': 'n', 'var': 'user_emmet_mergelines_key', 'key': 'm', 'plug': 'emmet-merge-lines', 'func': ':call emmet#mergeLines()<cr>'}, {'mode': 'v', 'var': 'user_emmet_codepretty_key', 'key': 'c', 'plug': 'emmet-code-pretty', 'func': ':call emmet#codePretty()<cr>'},]
                            
    2              0.000013   let only_plug = get(g:, 'emmet_install_only_plug', 0)
   78              0.000076   for item in items
   76              0.000235     if a:mode !=# 'a' && stridx(a:mode, item.mode) == -1
                                  continue
   76              0.000040     endif
   76              0.001856     exe item.mode . 'noremap '. buffer .' <plug>(' . item.plug . ') ' . item.func
   76              0.000142     if item.var != '' && !only_plug
   68              0.000184       if exists('g:' . item.var)
                                    let key = eval('g:' . item.var)
   68              0.000034       else
   68              0.000165         let key = g:user_emmet_leader_key . item.key
   68              0.000037       endif
   68              0.002874       if !hasmapto('<plug>(' . item.plug . ')', item.mode) && !len(maparg(key, item.mode))
   68              0.002110         exe item.mode . 'map ' . buffer . ' <unique> <silent>' . key . ' <plug>(' . item.plug . ')'
   68              0.000037       endif
   76              0.000028     endif
   78              0.000048   endfor
                            
    2              0.000006   if exists('g:user_emmet_complete_tag') && g:user_emmet_complete_tag
                                if get(g:, 'user_emmet_install_global', 1)
                                  set omnifunc=emmet#completeTag
                                else
                                  setlocal omnifunc=emmet#completeTag
                                endif
    2              0.000001   endif

FUNCTION  <SNR>37_dopopd()
    Defined: ~\AppData\Local\nvim-data\site\pack\packer\start\fzf\plugin\fzf.vim:598
Called 78 times
Total time:   0.000397
 Self time:   0.000397

count  total (s)   self (s)
   78              0.000224   if !exists('w:fzf_pushd')
   78              0.000053     return
                              endif
                            
                              " FIXME: We temporarily change the working directory to 'dir' entry
                              " of options dictionary (set to the current working directory if not given)
                              " before running fzf.
                              "
                              " e.g. call fzf#run({'dir': '/tmp', 'source': 'ls', 'sink': 'e'})
                              "
                              " After processing the sink function, we have to restore the current working
                              " directory. But doing so may not be desirable if the function changed the
                              " working directory on purpose.
                              "
                              " So how can we tell if we should do it or not? A simple heuristic we use
                              " here is that we change directory only if the current working directory
                              " matches 'dir' entry. However, it is possible that the sink function did
                              " change the directory to 'dir'. In that case, the user will have an
                              " unexpected result.
                              if s:fzf_getcwd() ==# w:fzf_pushd.dir && (!&autochdir || w:fzf_pushd.bufname ==# bufname(''))
                                execute w:fzf_pushd.command s:escape(w:fzf_pushd.origin)
                              endif
                              unlet! w:fzf_pushd

FUNCTION  <SNR>20_Remove_Matches()
    Defined: ~\scoop\apps\neovim-nightly\current\share\nvim\runtime\plugin\matchparen.vim:196
Called 3449 times
Total time:   0.062507
 Self time:   0.062507

count  total (s)   self (s)
 3449              0.033262   if exists('w:paren_hl_on') && w:paren_hl_on
  315              0.001566     silent! call matchdelete(3)
  315              0.001293     let w:paren_hl_on = 0
 3449              0.003685   endif

FUNCTION  rnvimr#enter_dir()
    Defined: ~\AppData\Local\nvim-data\site\pack\packer\start\rnvimr\autoload\rnvimr.vim:129
Called 120 times
Total time:   0.018276
 Self time:   0.018276

count  total (s)   self (s)
  120              0.016908     if bufnr(a:path) == a:bufnr && isdirectory(a:path) && !&diff
                                    " git submodule opened by `:Git difftool -y` for vim-fugitive is treated as directory,
                                    " but vim-fugitive couldn't set &diff before BufEnter event, let us check it later:)
                                    call timer_start(0, {-> call('s:defer_check_dir', [a:path, a:bufnr])})
  120              0.000105     endif

FUNCTION  provider#clipboard#Call()
    Defined: ~\scoop\apps\neovim-nightly\current\share\nvim\runtime\autoload\provider\clipboard.vim:230
Called 4 times
Total time:   0.539991
 Self time:   0.000124

count  total (s)   self (s)
    4              0.000025   if get(s:, 'here', v:false)  " Clipboard provider must not recurse. #7184
                                return 0
    4              0.000003   endif
    4              0.000010   let s:here = v:true
    4              0.000004   try
    4   0.539914   0.000048     return call(s:clipboard[a:method],a:args,s:clipboard)
    4              0.000004   finally
    4              0.000009     let s:here = v:false
    4              0.000004   endtry

FUNCTION  <SNR>20_Highlight_Matching_Pair()
    Defined: ~\scoop\apps\neovim-nightly\current\share\nvim\runtime\plugin\matchparen.vim:39
Called 3371 times
Total time:   0.510660
 Self time:   0.449365

count  total (s)   self (s)
                              " Remove any previous match.
 3371   0.090037   0.028742   call s:Remove_Matches()
                            
                              " Avoid that we remove the popup menu.
                              " Return when there are no colors (looks like the cursor jumps).
 3371              0.021362   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
                                return
 3371              0.002129   endif
                            
                              " Get the character under the cursor and check if it's in 'matchpairs'.
 3371              0.012782   let c_lnum = line('.')
 3371              0.008602   let c_col = col('.')
 3371              0.004157   let before = 0
                            
 3371              0.010328   let text = getline(c_lnum)
 3371              0.070538   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
 3371              0.008508   if empty(matches)
                                let [c_before, c] = ['', '']
 3371              0.002492   else
 3371              0.016399     let [c_before, c] = matches[1:2]
 3371              0.002235   endif
 3371              0.045751   let plist = split(&matchpairs, '.\zs[:,]')
 3371              0.012647   let i = index(plist, c)
 3371              0.004334   if i < 0
                                " not found, in Insert mode try character before the cursor
 3064              0.013940     if c_col > 1 && (mode() == 'i' || mode() == 'R')
 1235              0.003645       let before = strlen(c_before)
 1235              0.001985       let c = c_before
 1235              0.003153       let i = index(plist, c)
 3064              0.001826     endif
 3064              0.003149     if i < 0
                                  " not found, nothing to do
 3046              0.003124       return
   18              0.000008     endif
  325              0.000148   endif
                            
                              " Figure out the arguments for searchpairpos().
  325              0.000499   if i % 2 == 0
  104              0.000278     let s_flags = 'nW'
  104              0.000297     let c2 = plist[i + 1]
  221              0.000113   else
  221              0.000327     let s_flags = 'nbW'
  221              0.000355     let c2 = c
  221              0.000507     let c = plist[i - 1]
  325              0.000240   endif
  325              0.000540   if c == '['
                                let c = '\['
                                let c2 = '\]'
  325              0.000186   endif
                            
                              " Find the match.  When it was just before the cursor move it there for a
                              " moment.
  325              0.000407   if before > 0
   18              0.000065     let has_getcurpos = exists("*getcurpos")
   18              0.000018     if has_getcurpos
                                  " getcurpos() is more efficient but doesn't exist before 7.4.313.
   18              0.000048       let save_cursor = getcurpos()
                                else
                                  let save_cursor = winsaveview()
   18              0.000008     endif
   18              0.000058     call cursor(c_lnum, c_col - before)
  325              0.000130   endif
                            
  325              0.004899   if !has("syntax") || !exists("g:syntax_on")
                                let s_skip = "0"
  325              0.000145   else
                                " Build an expression that detects whether the current cursor position is
                                " in certain syntax types (string, comment, etc.), for use as
                                " searchpairpos()'s skip argument.
                                " We match "escape" for special items, such as lispEscapeSpecial, and
                                " match "symbol" for lispBarSymbol.
  325              0.001639     let s_skip = '!empty(filter(map(synstack(line("."), col(".")), ''synIDattr(v:val, "name")''), ' . '''v:val =~? "string\\|character\\|singlequote\\|escape\\|symbol\\|comment"''))'
                                " If executing the expression determines that the cursor is currently in
                                " one of the syntax types, then we want searchpairpos() to find the pair
                                " within those syntax types (i.e., not skip).  Otherwise, the cursor is
                                " outside of the syntax types and s_skip should keep its value so we skip
                                " any matching pair inside the syntax types.
                                " Catch if this throws E363: pattern uses more memory than 'maxmempattern'.
  325              0.000294     try
  325              0.009704       execute 'if ' . s_skip . ' | let s_skip = "0" | endif'
                                catch /^Vim\%((\a\+)\)\=:E363/
                                  " We won't find anything, so skip searching, should keep Vim responsive.
                                  return
  325              0.000440     endtry
  325              0.000143   endif
                            
                              " Limit the search to lines visible in the window.
  325              0.001020   let stoplinebottom = line('w$')
  325              0.000740   let stoplinetop = line('w0')
  325              0.000498   if i % 2 == 0
  104              0.000257     let stopline = stoplinebottom
  221              0.000094   else
  221              0.000608     let stopline = stoplinetop
  325              0.000137   endif
                            
                              " Limit the search time to 300 msec to avoid a hang on very long lines.
                              " This fails when a timeout is not supported.
  325              0.001004   if mode() == 'i' || mode() == 'R'
  155              0.000831     let timeout = exists("b:matchparen_insert_timeout") ? b:matchparen_insert_timeout : g:matchparen_insert_timeout
  170              0.000082   else
  170              0.000815     let timeout = exists("b:matchparen_timeout") ? b:matchparen_timeout : g:matchparen_timeout
  325              0.000185   endif
  325              0.000208   try
  325              0.021113     let [m_lnum, m_col] = searchpairpos(c, '', c2, s_flags, s_skip, stopline, timeout)
                              catch /E118/
                                " Can't use the timeout, restrict the stopline a bit more to avoid taking
                                " a long time on closed folds and long lines.
                                " The "viewable" variables give a range in which we can scroll while
                                " keeping the cursor at the same position.
                                " adjustedScrolloff accounts for very large numbers of scrolloff.
                                let adjustedScrolloff = min([&scrolloff, (line('w$') - line('w0')) / 2])
                                let bottom_viewable = min([line('$'), c_lnum + &lines - adjustedScrolloff - 2])
                                let top_viewable = max([1, c_lnum-&lines+adjustedScrolloff + 2])
                                " one of these stoplines will be adjusted below, but the current values are
                                " minimal boundaries within the current window
                                if i % 2 == 0
                                  if has("byte_offset") && has("syntax_items") && &smc > 0
                            	let stopbyte = min([line2byte("$"), line2byte(".") + col(".") + &smc * 2])
                            	let stopline = min([bottom_viewable, byte2line(stopbyte)])
                                  else
                            	let stopline = min([bottom_viewable, c_lnum + 100])
                                  endif
                                  let stoplinebottom = stopline
                                else
                                  if has("byte_offset") && has("syntax_items") && &smc > 0
                            	let stopbyte = max([1, line2byte(".") + col(".") - &smc * 2])
                            	let stopline = max([top_viewable, byte2line(stopbyte)])
                                  else
                            	let stopline = max([top_viewable, c_lnum - 100])
                                  endif
                                  let stoplinetop = stopline
                                endif
                                let [m_lnum, m_col] = searchpairpos(c, '', c2, s_flags, s_skip, stopline)
  325              0.000256   endtry
                            
  325              0.000393   if before > 0
   18              0.000019     if has_getcurpos
   18              0.000053       call setpos('.', save_cursor)
                                else
                                  call winrestview(save_cursor)
   18              0.000008     endif
  325              0.000163   endif
                            
                              " If a match is found setup match highlighting.
  325              0.001135   if m_lnum > 0 && m_lnum >= stoplinetop && m_lnum <= stoplinebottom 
  315              0.000914     if exists('*matchaddpos')
  315              0.003515       call matchaddpos('MatchParen', [[c_lnum, c_col - before], [m_lnum, m_col]], 10, 3)
                                else
                                  exe '3match MatchParen /\(\%' . c_lnum . 'l\%' . (c_col - before) . 'c\)\|\(\%' . m_lnum . 'l\%' . m_col . 'c\)/'
  315              0.000160     endif
  315              0.000552     let w:paren_hl_on = 1
  325              0.000203   endif

FUNCTION  <SNR>15_SynSet()
    Defined: ~\scoop\apps\neovim-nightly\current\share\nvim\runtime\syntax\synload.vim:26
Called 105 times
Total time:   2.326810
 Self time:   2.144910

count  total (s)   self (s)
                              " clear syntax for :set syntax=OFF  and any syntax name that doesn't exist
  105              0.003453   syn clear
  105              0.000405   if exists("b:current_syntax")
                                unlet b:current_syntax
  105              0.000085   endif
                            
  105              0.000588   0verbose let s = expand("<amatch>")
  105              0.000216   if s == "ON"
                                " :set syntax=ON
    1              0.000002     if &filetype == ""
                                  echohl ErrorMsg
                                  echo "filetype unknown"
                                  echohl None
    1              0.000000     endif
    1              0.000002     let s = &filetype
  104              0.000143   elseif s == "OFF"
                                let s = ""
  105              0.000048   endif
                            
  105              0.000114   if s != ""
                                " Load the syntax file(s).  When there are several, separated by dots,
                                " load each in sequence.  Skip empty entries.
  160              0.000967     for name in split(s, '\.')
   80              0.000177       if !empty(name)
   80   1.266123   1.084222         exe "runtime! syntax/" . name . ".vim syntax/" . name . "/*.vim"
   80              1.051061         exe "runtime! syntax/" . name . ".lua syntax/" . name . "/*.lua"
   80              0.000290       endif
  160              0.000195     endfor
  105              0.000076   endif

FUNCTION  provider#clipboard#Executable()
    Defined: ~\scoop\apps\neovim-nightly\current\share\nvim\runtime\autoload\provider\clipboard.vim:68
Called 1 time
Total time:   0.238599
 Self time:   0.238599

count  total (s)   self (s)
    1              0.000004   if exists('g:clipboard')
                                if type({}) isnot# type(g:clipboard) || type({}) isnot# type(get(g:clipboard, 'copy', v:null)) || type({}) isnot# type(get(g:clipboard, 'paste', v:null))
                                  let s:err = 'clipboard: invalid g:clipboard'
                                  return ''
                                endif
                            
                                let s:copy = {}
                                let s:copy['+'] = s:split_cmd(get(g:clipboard.copy, '+', v:null))
                                let s:copy['*'] = s:split_cmd(get(g:clipboard.copy, '*', v:null))
                            
                                let s:paste = {}
                                let s:paste['+'] = s:split_cmd(get(g:clipboard.paste, '+', v:null))
                                let s:paste['*'] = s:split_cmd(get(g:clipboard.paste, '*', v:null))
                            
                                let s:cache_enabled = get(g:clipboard, 'cache_enabled', 0)
                                return get(g:clipboard, 'name', 'g:clipboard')
    1              0.000014   elseif has('mac')
                                let s:copy['+'] = ['pbcopy']
                                let s:paste['+'] = ['pbpaste']
                                let s:copy['*'] = s:copy['+']
                                let s:paste['*'] = s:paste['+']
                                let s:cache_enabled = 0
                                return 'pbcopy'
    1              0.000016   elseif !empty($WAYLAND_DISPLAY) && executable('wl-copy') && executable('wl-paste')
                                let s:copy['+'] = ['wl-copy', '--foreground', '--type', 'text/plain']
                                let s:paste['+'] = ['wl-paste', '--no-newline']
                                let s:copy['*'] = ['wl-copy', '--foreground', '--primary', '--type', 'text/plain']
                                let s:paste['*'] = ['wl-paste', '--no-newline', '--primary']
                                return 'wl-copy'
    1              0.000013   elseif !empty($DISPLAY) && executable('xclip')
                                let s:copy['+'] = ['xclip', '-quiet', '-i', '-selection', 'clipboard']
                                let s:paste['+'] = ['xclip', '-o', '-selection', 'clipboard']
                                let s:copy['*'] = ['xclip', '-quiet', '-i', '-selection', 'primary']
                                let s:paste['*'] = ['xclip', '-o', '-selection', 'primary']
                                return 'xclip'
    1              0.000012   elseif !empty($DISPLAY) && executable('xsel') && s:cmd_ok('xsel -o -b')
                                let s:copy['+'] = ['xsel', '--nodetach', '-i', '-b']
                                let s:paste['+'] = ['xsel', '-o', '-b']
                                let s:copy['*'] = ['xsel', '--nodetach', '-i', '-p']
                                let s:paste['*'] = ['xsel', '-o', '-p']
                                return 'xsel'
    1              0.081382   elseif executable('lemonade')
                                let s:copy['+'] = ['lemonade', 'copy']
                                let s:paste['+'] = ['lemonade', 'paste']
                                let s:copy['*'] = ['lemonade', 'copy']
                                let s:paste['*'] = ['lemonade', 'paste']
                                return 'lemonade'
    1              0.078616   elseif executable('doitclient')
                                let s:copy['+'] = ['doitclient', 'wclip']
                                let s:paste['+'] = ['doitclient', 'wclip', '-r']
                                let s:copy['*'] = s:copy['+']
                                let s:paste['*'] = s:paste['+']
                                return 'doitclient'
    1              0.078294   elseif executable('win32yank.exe')
    1              0.000130     if has('wsl') && getftype(exepath('win32yank.exe')) == 'link'
                                  let win32yank = resolve(exepath('win32yank.exe'))
    1              0.000001     else
    1              0.000003       let win32yank = 'win32yank.exe'
    1              0.000001     endif
    1              0.000006     let s:copy['+'] = [win32yank, '-i', '--crlf']
    1              0.000004     let s:paste['+'] = [win32yank, '-o', '--lf']
    1              0.000003     let s:copy['*'] = s:copy['+']
    1              0.000002     let s:paste['*'] = s:paste['+']
    1              0.000002     return 'win32yank'
                              elseif executable('termux-clipboard-set')
                                let s:copy['+'] = ['termux-clipboard-set']
                                let s:paste['+'] = ['termux-clipboard-get']
                                let s:copy['*'] = s:copy['+']
                                let s:paste['*'] = s:paste['+']
                                return 'termux-clipboard'
                              elseif !empty($TMUX) && executable('tmux')
                                let s:copy['+'] = ['tmux', 'load-buffer', '-']
                                let s:paste['+'] = ['tmux', 'save-buffer', '-']
                                let s:copy['*'] = s:copy['+']
                                let s:paste['*'] = s:paste['+']
                                return 'tmux'
                              endif
                            
                              let s:err = 'clipboard: No clipboard tool. :help clipboard'
                              return ''

FUNCTION  <SNR>116_setup_styledEmmetAbbreviation()
    Defined: ~\AppData\Local\nvim-data\site\pack\packer\opt\emmet-vim\plugin\emmet.vim:178
Called 105 times
Total time:   0.007734
 Self time:   0.007734

count  total (s)   self (s)
  105              0.001124   if index(['javascript', 'javascriptreact', 'typescript', 'typescriptreact'], &filetype) != -1
    5              0.000073     syntax match styledEmmetAbbreviation "[a-z0-9#+!%]\+" containedin=styledDefinition contained
  105              0.000097   endif

FUNCTION  <SNR>1_LoadFTPlugin()
    Defined: ~\scoop\apps\neovim-nightly\current\share\nvim\runtime\ftplugin.vim:14
Called 79 times
Total time:   3.699132
 Self time:   3.564560

count  total (s)   self (s)
   79              0.000542     if exists("b:undo_ftplugin")
    2   0.000132   0.000035       exe b:undo_ftplugin
    2              0.000006       unlet! b:undo_ftplugin b:did_ftplugin
   79              0.000066     endif
                            
   79              0.000424     let s = expand("<amatch>")
   79              0.000157     if s != ""
   79              0.000802       if &cpo =~# "S" && exists("b:did_ftplugin")
                            	" In compatible mode options are reset to the global values, need to
                            	" set the local values also when a plugin was already used.
                            	unlet b:did_ftplugin
   79              0.000049       endif
                            
                                  " When there is a dot it is used to separate filetype names.  Thus for
                                  " "aaa.bbb" load "aaa" and then "bbb".
  158              0.000776       for name in split(s, '\.')
   79   1.948837   1.823682         exe 'runtime! ftplugin/' . name . '.vim ftplugin/' . name . '_*.vim ftplugin/' . name . '/*.vim'
                                    " Load lua ftplugins
   79   1.744892   1.735571         exe printf('runtime! ftplugin/%s.lua ftplugin/%s_*.lua ftplugin/%s/*.lua', name, name, name)
  158              0.000466       endfor
   79              0.000081     endif

FUNCTION  <SNR>89_YankAssassin()
    Defined: ~\AppData\Local\nvim-data\site\pack\packer\opt\YankAssassin.vim\plugin\YankAssassin.vim:22
Called 66 times
Total time:   0.001508
 Self time:   0.001508

count  total (s)   self (s)
   66              0.000745         if get(g:, 'MoveYankMappings', 1) && v:event.operator=="y" && !empty(s:NoMapPreYankPos)
   11              0.000038                 call setpos('.', s:NoMapPreYankPos)
   66              0.000176         endif
   66              0.000209         let g:MoveYankMappings=1

FUNCTION  wordmotion#motion()
    Defined: ~\AppData\Local\nvim-data\site\pack\packer\opt\vim-wordmotion\autoload\wordmotion.vim:86
Called 2 times
Total time:   0.000781
 Self time:   0.000781

count  total (s)   self (s)
    2              0.000010 	let l:cpo = &cpoptions
    2              0.000028 	set cpoptions+=c
                            
    2              0.000004 	let l:flags = a:flags
                            
    2              0.000006 	if a:mode == 'o' && v:operator == 'c' && l:flags == ''
                            		" special case (see :help cw)
                            		let l:flags = 'e'
                            		let l:cw = 1
    2              0.000002 	else
    2              0.000003 		let l:cw = 0
    2              0.000001 	endif
                            
    2              0.000004 	if a:mode == 'x'
                            		normal! gv
    2              0.000004 	elseif a:mode == 'o' && l:flags =~# 'e'
                            		" need to make this inclusive for operator pending mode
                            		normal! v
    2              0.000001 	endif
                            
    2              0.000012 	let l:words = a:extra + [a:uppercase ? s:uS.'\+' : s:word]
    2              0.000003 	if l:flags != 'e' " e does not stop in an empty line
    2              0.000007 		call add(l:words, '^$')
    2              0.000001 	endif
                            
    2              0.000029 	let l:pattern = '\%('.join(l:words, '\|').'\)'
                            
                            	" save position to see if it moved
    2              0.000009 	let l:pos = getpos('.')
                            
    2              0.000003 	let l:count = a:count
    2              0.000002 	if l:cw
                            		" cw on the last character of a word will match the cursor position
                            		call search('\m'.l:pattern, l:flags.'cW')
                            		let l:count -= 1
    2              0.000001 	endif
    4              0.000007 	while l:count > 0
    2              0.000306 		call search('\m'.l:pattern, l:flags.'W')
    2              0.000006 		let l:count -= 1
    4              0.000013 	endwhile
                            
                            	" dw at the end of a line should not consume the newline or leading white
                            	" space on the next line
    2              0.000016 	let l:is_dw = a:mode == 'o' && v:operator == 'd' && l:flags == ''
    2              0.000010 	let l:next_line = l:pos[1] < getpos('.')[1]
    2              0.000003 	if l:is_dw && l:next_line
                            		let l:s = a:uppercase ? s:us : s:s
                            		" newline, leading whitespace, cursor
                            		if search('\m\n\%('.l:s.'\)*\%#', 'bW') != 0
                            			let l:dwpos = getpos('.')
                            			" need to make range inclusive
                            			call setpos('.', l:pos)
                            			normal! v
                            			call setpos('.', l:dwpos)
                            		endif
    2              0.000001 	endif
                            
                            	" ugly hack for 'w' going forwards at end of file
                            	" and 'ge' going backwards at beginning of file
    2              0.000006 	if a:count && l:pos == getpos('.')
                            		" cursor didn't move
                            		if l:flags == 'be' && line('.') == 1
                            			" at first line and going backwards, let's go to the front
                            			normal! 0
                            		elseif l:flags == '' && line('.') == line('$')
                            			" at last line and going forwards, let's go to the back
                            			if a:mode == 'o'
                            				" need to include last character if in operator pending mode
                            				normal! v
                            			endif
                            			normal! $
                            		endif
    2              0.000001 	endif
                            
    2              0.000010 	let l:actual_mode = get(a:, 1, a:mode)
    2              0.000004 	if l:actual_mode == 'n' || l:actual_mode == 'x'
    2              0.000018 		if &g:foldopen =~# '\%(^\|,\)hor\%(,\|$\)'
    2              0.000081 			normal! zv
    2              0.000002 		endif
    2              0.000001 	endif
                            
    2              0.000011 	let &cpoptions = l:cpo

FUNCTION  <SNR>2_LoadIndent()
    Defined: ~\scoop\apps\neovim-nightly\current\share\nvim\runtime\indent.vim:13
Called 79 times
Total time:   1.055094
 Self time:   1.035300

count  total (s)   self (s)
   79              0.000408     if exists("b:undo_indent")
    2              0.000038       exe b:undo_indent
    2              0.000007       unlet! b:undo_indent b:did_indent
   79              0.000050     endif
   79              0.000575     let s = expand("<amatch>")
   79              0.000192     if s != ""
   79              0.000162       if exists("b:did_indent")
                            	unlet b:did_indent
   79              0.000039       endif
                            
                                  " When there is a dot it is used to separate filetype names.  Thus for
                                  " "aaa.bbb" load "indent/aaa.vim" and then "indent/bbb.vim".
  158              0.000858       for name in split(s, '\.')
   79   0.549470   0.529676         exe 'runtime! indent/' . name . '.vim'
   79              0.501404         exe 'runtime! indent/' . name . '.lua'
  158              0.000425       endfor
   79              0.000074     endif

FUNCTION  28()
    Defined: ~\scoop\apps\neovim-nightly\current\share\nvim\runtime\autoload\provider\clipboard.vim:153
Called 4 times
Total time:   0.539867
 Self time:   0.000187

count  total (s)   self (s)
    4              0.000017   if type(s:paste[a:reg]) == v:t_func
                                return s:paste[a:reg]()
    4              0.000011   elseif s:selections[a:reg].owner > 0
                                return s:selections[a:reg].data
    4              0.000002   end
                            
    4   0.539720   0.000041   let clipboard_data = s:try_cmd(s:paste[a:reg])
    4              0.000075   if match(&clipboard, '\v(unnamed|unnamedplus)') >= 0 && type(clipboard_data) == v:t_list && get(s:selections[a:reg].data, 0, []) ==# clipboard_data
                                " When system clipboard return is same as our cache return the cache
                                " as it contains regtype information
                                return s:selections[a:reg].data
    4              0.000002   end
    4              0.000005   return clipboard_data

FUNCTIONS SORTED ON TOTAL TIME
count  total (s)   self (s)  function
156492  43.005778  41.186117  WebDevIconsGetFileTypeSymbol()
   79   3.699132   3.564560  <SNR>1_LoadFTPlugin()
  105   2.326810   2.144910  <SNR>15_SynSet()
156492   1.819661             <SNR>65_DevIconsGetArtifactFix()
   79   1.055094   1.035300  <SNR>2_LoadIndent()
    4   0.539991   0.000124  provider#clipboard#Call()
    4   0.539867   0.000187  28()
    4   0.539679   0.310534  <SNR>163_try_cmd()
 3371   0.510660   0.449365  <SNR>20_Highlight_Matching_Pair()
   39   0.255673             nvim_treesitter#indent()
    1   0.238599             provider#clipboard#Executable()
 3449   0.062507             <SNR>20_Remove_Matches()
  120   0.018276             rnvimr#enter_dir()
    2   0.011044             <SNR>116_install_plugin()
   47   0.010210             jupyter_ascending#sync()
  105   0.007734             <SNR>116_setup_styledEmmetAbbreviation()
    4   0.001804             dial#operator#increment_normal()
   66   0.001508             <SNR>89_YankAssassin()
   48   0.000944             <SNR>65_CursorHoldUpdate()
    2   0.000781             wordmotion#motion()

FUNCTIONS SORTED ON SELF TIME
count  total (s)   self (s)  function
156492  43.005778  41.186117  WebDevIconsGetFileTypeSymbol()
   79   3.699132   3.564560  <SNR>1_LoadFTPlugin()
  105   2.326810   2.144910  <SNR>15_SynSet()
156492              1.819661  <SNR>65_DevIconsGetArtifactFix()
   79   1.055094   1.035300  <SNR>2_LoadIndent()
 3371   0.510660   0.449365  <SNR>20_Highlight_Matching_Pair()
    4   0.539679   0.310534  <SNR>163_try_cmd()
   39              0.255673  nvim_treesitter#indent()
    1              0.238599  provider#clipboard#Executable()
 3449              0.062507  <SNR>20_Remove_Matches()
  120              0.018276  rnvimr#enter_dir()
    2              0.011044  <SNR>116_install_plugin()
   47              0.010210  jupyter_ascending#sync()
  105              0.007734  <SNR>116_setup_styledEmmetAbbreviation()
    4              0.001804  dial#operator#increment_normal()
   66              0.001508  <SNR>89_YankAssassin()
   48              0.000944  <SNR>65_CursorHoldUpdate()
    2              0.000781  wordmotion#motion()
   11              0.000701  repeat#wrap()
   78              0.000397  <SNR>37_dopopd()

